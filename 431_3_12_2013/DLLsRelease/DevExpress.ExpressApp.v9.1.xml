<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.ExpressApp.v9.1</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Persistent.Base.ImagesForBoolValuesAttribute">

            <summary>
                <para>Applied to Boolean business class properties. Specifies the names of the images used to display the target property's values. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ImagesForBoolValuesAttribute.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the ImagesForBoolValuesAttribute class.
</para>
            </summary>
            <param name="imageForTrue">
		A string specifying the name of the image displayed for the property's <b>true</b> value. This parameter's value is assigned to the <see cref="P:DevExpress.Persistent.Base.ImagesForBoolValuesAttribute.ImageForTrue"/> property.


            </param>
            <param name="imageForFalse">
		A string specifying the name of the image displayed for the property's <b>false</b> value. This parameter's value is assigned to the <see cref="P:DevExpress.Persistent.Base.ImagesForBoolValuesAttribute.ImageForFalse"/> property.


            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImagesForBoolValuesAttribute.ImageForFalse">
            <summary>
                <para>Specifies the name of the image displayed for the property's <b>false</b> value.
</para>
            </summary>
            <value>A string specifying the name of the image displayed for the property's <b>false</b> value.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImagesForBoolValuesAttribute.ImageForTrue">
            <summary>
                <para>Specifies the name of the image displayed for the property's <b>true</b> value.
</para>
            </summary>
            <value>A string specifying the name of the image displayed for the property's <b>true</b> value.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.CaptionsForBoolValuesAttribute">

            <summary>
                <para>Applied to Boolean business class properties. Specifies captions used to display the target property's values.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.CaptionsForBoolValuesAttribute.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the CaptionsForBoolValuesAttribute class.
</para>
            </summary>
            <param name="captionForTrue">
		A string specifying the caption displayed for the property's <b>true</b> value. This parameter's value is assigned to the <see cref="P:DevExpress.Persistent.Base.CaptionsForBoolValuesAttribute.CaptionForTrue"/> property.

            </param>
            <param name="captionForFalse">
		A string specifying the caption displayed for the property's <b>false</b> value. This parameter's value is assigned to the <see cref="P:DevExpress.Persistent.Base.CaptionsForBoolValuesAttribute.CaptionForFalse"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.CaptionsForBoolValuesAttribute.CaptionForFalse">
            <summary>
                <para>Specifies the caption displayed for the property's <b>false</b> value.
</para>
            </summary>
            <value>A string specifying the caption displayed for the property's <b>false</b> value.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CaptionsForBoolValuesAttribute.CaptionForTrue">
            <summary>
                <para>Specifies the caption displayed for the property's <b>true</b> value.
</para>
            </summary>
            <value>A string specifying the caption displayed for the property's <b>true</b> value.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Layout.ControlDetailItem">

            <summary>
                <para>Represents a Detail View Item that displays a specific unbound control in a UI.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Layout.ControlDetailItem.#ctor(System.Type,DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Creates and initializes a new instance of the ControlDetailItem class.
</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object that represents the type of the object for which the current Detail View Item's View is created. 

            </param>
            <param name="info">
		A <see cref="T:DevExpress.ExpressApp.DictionaryNode"/> object that represents the Application Model's Views | <b>DetailView</b> | <b>Items</b> | <b>DetailViewItem</b> node that defines the current Detail View Item. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Editors.DetailViewItem.Info"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Layout.ControlDetailItem.#ctor(System.String,System.String,System.Object)">
            <summary>
                <para>Creates and initializes a new instance of the ControlDetailItem class.
</para>
            </summary>
            <param name="id">
		A string value representing the current Detail View Item's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Editors.DetailViewItem.Id"/> property.

            </param>
            <param name="caption">
		A string value representing the current Detail View Item's caption. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Layout.ControlDetailItem.Caption"/> property.

            </param>
            <param name="control">
		A control that will be displayed in a UI by the current Detail View Item.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Layout.ControlDetailItem.#ctor(System.String,System.Object)">
            <summary>
                <para>Creates and initializes a new instance of the ControlDetailItem class.
</para>
            </summary>
            <param name="id">
		A string value representing the current Detail View Item's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Editors.DetailViewItem.Id"/> property.

            </param>
            <param name="control">
		A control that will be displayed in a UI by the current Detail View Item.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Layout.ControlDetailItem.Caption">
            <summary>
                <para>Returns the current Detail View Item's caption.
</para>
            </summary>
            <value>A string value representing the current Detail View Item's caption.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Layout.ControlDetailItem.IsCaptionVisible">
            <summary>
                <para>Indicates whether the <see cref="P:DevExpress.ExpressApp.Layout.ControlDetailItem.Caption"/> of the current Detail View Item should be visible.
</para>
            </summary>
            <value><b>true</b> if the current Detail View Item's caption is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.StaticText">

            <summary>
                <para>An abstract class that serves as the base class for the Static Text Detail View Items.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.ExpressApp.Editors.StaticText.Caption">
            <summary>
                <para>Returns the current Detail View Item's caption.
</para>
            </summary>
            <value>A string value representing the current Detail View Item's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.StaticText.IsCaptionVisible">
            <summary>
                <para>Indicates whether the <see cref="P:DevExpress.ExpressApp.Editors.StaticText.Caption"/> of the current Detail View Item should be visible.
</para>
            </summary>
            <value><b>true</b> if the current Detail View Item's caption is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.StaticImage">

            <summary>
                <para>An abstract class that serves as the base class for the Static Image Detail View Items.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.ExpressApp.Editors.StaticImage.Caption">
            <summary>
                <para>Returns the current Detail View Item's caption.
</para>
            </summary>
            <value>A string value representing the current Detail View Item's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.StaticImage.IsCaptionVisible">
            <summary>
                <para>Indicates whether the <see cref="P:DevExpress.ExpressApp.Editors.StaticImage.Caption"/> of the current Detail View Item should be visible.
</para>
            </summary>
            <value><b>true</b> if the current Detail View Item's caption is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.IndexAttribute">

            <summary>
                <para>Specifies the target business class property's order index, that will be considered when generating layout items in a Detail View, and columns in a List View.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.IndexAttribute.#ctor(System.Int32)">
            <summary>
                <para>Initializes a new instance of the IndexAttribute class, and sets the <see cref="P:DevExpress.Persistent.Base.IndexAttribute.Index"/> property.
</para>
            </summary>
            <param name="index">
		An integer value that represents the target property's order index in automatically generated Views.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.IndexAttribute.Index">
            <summary>
                <para>Indicates the order index by which the target property is arranged in automatically generated Views.
</para>
            </summary>
            <value>An integer value that represents the target property's order index in automatically generated Views.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute">

            <summary>
                <para>Specifies whether all properties of the target class can be used by the <b>Filter by Text</b> Action, if they satisfy the Filter Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextSearchTargetPropertiesMode"/>. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute.#ctor(DevExpress.ExpressApp.Filtering.SearchMemberMode)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute"/> class and sets the <see cref="P:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute.IncludeMemberInCriteria"/> property.
</para>
            </summary>
            <param name="useMemberInCriteria">
		The <see cref="T:DevExpress.ExpressApp.Filtering.SearchMemberMode"/> enumeration value specifying whether to include or exclude the target property from the search performed by the <b>Filter by Text</b> Action (see <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/>).

            </param>


        </member>
        <member name="F:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute.IncludeMemberInCriteriaByDefault">
            <summary>
                <para>Represents a default value for the <see cref="P:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute.IncludeMemberInCriteria"/> property. Currently, it's set to <see cref="F:DevExpress.ExpressApp.Filtering.SearchMemberMode.Include"/>. 
</para>
            </summary>
            <returns>$
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute.IncludeMemberInCriteria">
            <summary>
                <para>Indicates whether to include or exclude the target property from the search performed by the <b>Filter by Text</b> Action (see <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/>).
</para>
            </summary>
            <value>The <see cref="T:DevExpress.ExpressApp.Filtering.SearchMemberMode"/> enumeration value specifying whether to include or exclude the target property from the search performed by the <b>Filter by Text</b> Action. 
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Filtering.SearchClassOptionsAttribute">

            <summary>
                <para>Specifies whether all properties of the target class can be used by the <b>Filter by Text</b> Action, if they satisfy the Filter Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextSearchTargetPropertiesMode"/>. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Filtering.SearchClassOptionsAttribute.#ctor(DevExpress.ExpressApp.Filtering.SearchMemberMode)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Filtering.SearchClassOptionsAttribute"/> class and sets the <see cref="P:DevExpress.ExpressApp.Filtering.SearchClassOptionsAttribute.IncludeMembersInCriteria"/> property.
</para>
            </summary>
            <param name="includeMembersInCriteria">
		The <see cref="T:DevExpress.ExpressApp.Filtering.SearchMemberMode"/> enumeration value, specifying whether to include or exclude the target class' properties from the search performed by the <b>Filter by Text </b>Action (see <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/>). 

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Filtering.SearchClassOptionsAttribute.IncludeMembersInCriteria">
            <summary>
                <para>Indicates whether to include or exclude the target class' properties from the search performed by the <b>Filter by Text</b> Action (see <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/>).
</para>
            </summary>
            <value>The <see cref="T:DevExpress.ExpressApp.Filtering.SearchMemberMode"/> enumeration value specifying whether to include or exclude the target class' properties from the search performed by the <b>Filter by Text</b> Action. 
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.VisibleInDetailViewAttribute">

            <summary>
                <para>Specifies whether the Detail View Item that corresponds to the target business class property is visible in a Detail View.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.VisibleInDetailViewAttribute.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the VisibleInDetailViewAttribute class, and sets the <see cref="P:DevExpress.Persistent.Base.VisibleInDetailViewAttribute.Value"/> property.
</para>
            </summary>
            <param name="value">
		<b>true</b> if a detail view item that corresponds to the target business class property is visible in a Detail View; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.VisibleInDetailViewAttribute.Value">
            <summary>
                <para>Indicates whether a detail view item that corresponds to the target business class property is visible in a Detail View.
</para>
            </summary>
            <value><b>true</b> if a detail view item that corresponds to the target business class property is visible in a Detail View; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Filtering.SearchMode">

            <summary>
                <para>Specifies the way in which the <b>Filter by Text</b> Action performs its search.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Filtering.SearchMode.SearchInObject">
            <summary>
                <para>Specifies that the <b>Filter by Text</b> Action (see <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/>) searches individual words from the word combination typed by an end-user in different properties of the objects represented by the current List View.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Filtering.SearchMode.SearchInProperty">
            <summary>
                <para>Specifies that the <b>Filter by Text</b> Action (see <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/>) searches the entire word combination typed by an end-user in the properties of the objects represented by the current List View.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Filtering.SearchMemberMode">

            <summary>
                <para>Specifies whether all the properties of the target business class can be used in the search performed by the <b>Filter by Text</b> Action (see <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/>).
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Filtering.SearchMemberMode.Exclude">
            <summary>
                <para>When used by the <see cref="T:DevExpress.ExpressApp.Filtering.SearchClassOptionsAttribute"/>, specifies that none of the properties of the target class can be used in the search performed by the <b>Filter by Text</b> Action, if they satisfy the Filter Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextSearchTargetPropertiesMode"/>. When used by the <see cref="T:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute"/>, specifies whether the target property cannot be used in the search performed by the <b>Filter by Text</b> Action.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Filtering.SearchMemberMode.Include">
            <summary>
                <para>When used by the <see cref="T:DevExpress.ExpressApp.Filtering.SearchClassOptionsAttribute"/>, specifies that all the properties of the target class can be used in the search performed by the <b>Filter by Text</b> Action, if they satisfy the Filter Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextSearchTargetPropertiesMode"/>. When used by the <see cref="T:DevExpress.ExpressApp.Filtering.SearchMemberOptionsAttribute"/>, specifies that the target property can be used in the search performed by the <b>Filter by Text</b> Action.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Persistent.Base.ImageEditorAttribute">

            <summary>
                <para>Applied to an <b>Image</b> business class property. Specifies the settings to be used by Image Property Editors when displaying images represented by the target property.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ImageEditorAttribute.#ctor(DevExpress.Persistent.Base.ImageEditorMode,DevExpress.Persistent.Base.ImageEditorMode)">
            <summary>
                <para>Initializes a new instance of the ImageEditorAttribute class with the specified parameters. 
</para>
            </summary>
            <param name="listViewImageEditorMode">
		An <see cref="T:DevExpress.Persistent.Base.ImageEditorMode"/> enumeration value that specifies how images represented by the target Image property must be displayed in List Views. This value is used to initialize the <see cref="P:DevExpress.Persistent.Base.ImageEditorAttribute.ListViewImageEditorMode"/> property.

            </param>
            <param name="detailViewImageEditorMode">
		An <see cref="T:DevExpress.Persistent.Base.ImageEditorMode"/> enumeration value that specifies how images represented by the target Image property must be displayed in Detail Views. This value is used to initialize the <see cref="P:DevExpress.Persistent.Base.ImageEditorAttribute.DetailViewImageEditorMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.ImageEditorAttribute.#ctor(DevExpress.Persistent.Base.ImageEditorMode,DevExpress.Persistent.Base.ImageEditorMode,System.Int32)">
            <summary>
                <para>Initializes a new instance of the ImageEditorAttribute class with the specified parameters. 
</para>
            </summary>
            <param name="listViewImageEditorMode">
		An <see cref="T:DevExpress.Persistent.Base.ImageEditorMode"/> enumeration value that specifies how images represented by the target Image property must be displayed in List Views. This value is used to initialize the <see cref="P:DevExpress.Persistent.Base.ImageEditorAttribute.ListViewImageEditorMode"/> property.

            </param>
            <param name="detailViewImageEditorMode">
		An <see cref="T:DevExpress.Persistent.Base.ImageEditorMode"/> enumeration value that specifies how images represented by the target Image property must be displayed in Detail Views. This value is used to initialize the <see cref="P:DevExpress.Persistent.Base.ImageEditorAttribute.DetailViewImageEditorMode"/> property.

            </param>
            <param name="listViewImageEditorCustomHeight">
		An integer value that specifies the height of inplace Image Property Editors in List Views. This value is used to initialize the <see cref="P:DevExpress.Persistent.Base.ImageEditorAttribute.ListViewImageEditorCustomHeight"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.ImageEditorAttribute.#ctor">
            <summary>
                <para>Initializes a new instance of the ImageEditorAttribute class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImageEditorAttribute.DetailViewImageEditorFixedHeight">
            <summary>
                <para>Specifies the fixed height of Image Property Editors in Detail Views. 
</para>
            </summary>
            <value>An integer value that specifies the height of Image Property Editors in Detail Views. The default value is specified by the <b>DetailViewImageEditorFixedHeight</b> attribute of the Application Model's Application | BOModel | <b>Class</b> | <b>Member</b> node that represents the attribute's target <b>Image</b> property.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImageEditorAttribute.DetailViewImageEditorFixedWidth">
            <summary>
                <para>Specifies the fixed width of Image Property Editors in Detail Views. 
</para>
            </summary>
            <value>An integer value that specifies the fixed width of Image Property Editors in Detail Views. The default value is specified by the <b>DetailViewImageEditorFixedWidth</b> attribute of the Application Model's Application | BOModel | <b>Class</b> | <b>Member</b> node that represents the attribute's target <b>Image</b> property.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImageEditorAttribute.DetailViewImageEditorMode">
            <summary>
                <para>Specifies how images represented by the target Image property must be displayed in Detail Views.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Persistent.Base.ImageEditorMode"/> enumeration value that specifies how images represented by the target Image property must be displayed in Detail Views. The default value is specified by the <b>DetailViewImageEditorMode</b> attribute of the Application Model's Application | BOModel | <b>Class</b> | <b>Member</b> node, that represents the target <b>Image</b> property.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImageEditorAttribute.ImageSizeMode">
            <summary>
                <para>Specifies how images represented by the target Image property must be resized in Image Property Editors.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Persistent.Base.ImageSizeMode"/> enumeration value that specifies how images represented by the target Image property must be resized in Image Property Editors. The default value is specified by the <b>ImageSizeMode</b> attribute of the Application Model's Application | BOModel | <b>Class</b> | <b>Member</b> node, that represents the target <b>Image</b> property.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImageEditorAttribute.ListViewImageEditorCustomHeight">
            <summary>
                <para>Specifies the height of inplace Image Property Editors in List Views. 
</para>
            </summary>
            <value>An integer value that specifies the height of inplace Image Property Editors in <b>List Views</b>. The default value is specified by the <b>ListViewImageEditorCustomHeight</b> attribute of the Application Model's Application | BOModel | <b>Class</b> | <b>Member</b> node that represents the attribute's target <b>Image</b> property.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImageEditorAttribute.ListViewImageEditorMode">
            <summary>
                <para>Specifies how images represented by the target Image property must be displayed in List Views.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Persistent.Base.ImageEditorMode"/> enumeration value that specifies how images represented by the target Image property must be displayed in List Views. The default value is specified by the <b>ListViewImageEditorMode</b> attribute of the Application Model's Application | BOModel | <b>Class</b> | <b>Member</b> node that represents the target <b>Image</b> property.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.ImageSizeMode">

            <summary>
                <para>Contains values that specify image size modes for images displayed by Image Property Editors.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Persistent.Base.ImageSizeMode.Clip">
            <summary>
                <para>Specifies that the image displayed via an Image Property Editor will be clipped if it doesn't fit into the Property Editor's region.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Persistent.Base.ImageSizeMode.Zoom">
            <summary>
                <para>Specifies that the image displayed via an Image Property Editor will be resized to fit into the Property Editor's region.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Persistent.Base.ImageEditorMode">

            <summary>
                <para>Contains values that specify image editor modes for images displayed by Image Property Editors.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Persistent.Base.ImageEditorMode.DropDownPictureEdit">
            <summary>
                <para>Specifies that an Image Property Editor must display the image in a drop-down window.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Persistent.Base.ImageEditorMode.PictureEdit">
            <summary>
                <para>Specifies that an Image Property Editor must display the image in the same window.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Persistent.Base.ImageEditorMode.PopupPictureEdit">
            <summary>
                <para>Specifies that an Image Property Editor must display the image in a pop-up window.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement">

            <summary>
                <para>Represents an element of a <see cref="T:DevExpress.ExpressApp.Dictionary"/>. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Rename(System.String)">
            <summary>
                <para>Changes the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Name"/> of the element.
</para>
            </summary>
            <param name="name">
		A string that contains the new name of the element.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.ResetIsNew">
            <summary>
                <para>Sets the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.IsNew"/> property to <b>false</b>. This specifies that the element wasn't added to a <b>Dictionary</b> at run time.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.SetIsNew">
            <summary>
                <para>Sets the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.IsNew"/> property to <b>true</b>. This specifies that the element was added to a <b>Dictionary</b> at run time.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Dictionary">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.Dictionary"/> which contains the element.
</para>
            </summary>
            <value>A <b>Dictionary</b> which contains the element.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.IsNew">
            <summary>
                <para>Indicates whether the element was added to a <see cref="T:DevExpress.ExpressApp.Dictionary"/> at run time.
</para>
            </summary>
            <value><b>true</b> if the element was added to a <b>Dictionary</b> at run time; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Name">
            <summary>
                <para>Specifies the name of the <see cref="T:DevExpress.ExpressApp.Dictionary"/>'s element.
</para>
            </summary>
            <value>A string that specifies the name of the <b>Dictionary</b>'s element.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Schema">
            <summary>
                <para>Provides access to the Schema that defines the structure of the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Dictionary"/> which contains the element.
</para>
            </summary>
            <value>A <b>Schema</b> object that defines the structure of the <b>Dictionary</b> which contains the element.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.DictionaryAttribute">

            <summary>
                <para>Represents an attribute of the Application Model's node. 
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryAttribute.UserLanguage">
            <summary>
                <para>Holds the predefined "(User language)" value for the <b>PreferredLanguage</b> attribute of the Application Model's Application node.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.CopyTo(DevExpress.ExpressApp.DictionaryAttribute)">
            <summary>
                <para>Copies the attribute's values to the specified attribute.
</para>
            </summary>
            <param name="dest">
		A DictionaryAttribute object that represents the attribute whose values must be overridden with the current <b>DictionaryAttribute</b>'s values.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.GetAspectByCultureInfo(System.Globalization.CultureInfo)">
            <summary>
                <para>Returns the language identifier for a specific culture.
</para>
            </summary>
            <param name="culture">
		A <b>System.Globalization.CultureInfo</b> object which represents the required culture.

            </param>
            <returns>A string that represents the language identifier for the specified culture.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.GetCultureInfoByAspect(System.String)">
            <summary>
                <para>Returns the culture which corresponds to a specific language identifier.
</para>
            </summary>
            <param name="aspect">
		A string that holds the language identifier.

            </param>
            <returns>A <b>System.Globalization.CultureInfo</b> object that represents the culture which corresponds to the specified language identifier.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.GetCurrentAspect">
            <summary>
                <para>Returns the language to which the attribute's current <see cref="P:DevExpress.ExpressApp.DictionaryAttribute.Value"/> relates.
</para>
            </summary>
            <returns>A string that represents the language to which the attribute's current value relates.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.GetParentAspect(System.String)">
            <summary>
                <para>Returns the neutral culture for a given specific culture.
</para>
            </summary>
            <param name="aspect">
		A string that holds the specific culture's name.

            </param>
            <returns>A string which holds the neutral culture that corresponds to the given specific culture.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.GetValue(System.String)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="sourceAspect">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.GetValue(System.String,System.String)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="aspect">
		@nbsp;

            </param>
            <param name="sourceAspect">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.GetValue(System.String)">
            <summary>
                <para>Returns the localized attribute's value for the specified language.
</para>
            </summary>
            <param name="aspect">
		A string that represents the required language.

            </param>
            <returns>A string that holds the localized attribute's value for the specified language.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.IsAncestorAspect(System.String,System.String)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="ancestorAspect">
		@nbsp;

            </param>
            <param name="descendantAspect">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.IsAspectModified(System.String)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="aspect">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.IsValueAssigned(System.String)">
            <summary>
                <para>Indicates whether the attribute has a localized value for the specified language.
</para>
            </summary>
            <param name="aspect">
		A string that specifies the required language.

            </param>
            <returns><b>true</b>, if the attribute has a localized value for the specified language; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.Rename(System.String)">
            <summary>
                <para>Changes the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Name"/> of the attribute.
</para>
            </summary>
            <param name="name">
		A string that contains the new name of the attribute.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.Reset">
            <summary>
                <para>This method is intended for internal use.
<!--
Reverts the attribute to its pre- run time state.
-->
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryAttribute.SetValue(System.String,System.String)">
            <summary>
                <para>Sets the localized attribute's value for the specified language.
</para>
            </summary>
            <param name="aspect">
		A string that represents the required language.

            </param>
            <param name="value">
		A string that holds the localized attribute's value for the specified language.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.IsCalculated">
            <summary>
                <para>Indicates whether the attribute's value is calculated based on another attribute's value.
</para>
            </summary>
            <value><b>true</b>, if the attribute's value is calculated based on another attribute's value; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.IsKey">
            <summary>
                <para>Indicates whether the attribute is the key attribute of the node.
</para>
            </summary>
            <value><b>true</b>, if the attribute is the key attribute of the node; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.IsLocalized">
            <summary>
                <para>Indicates whether the attribute can have different values corresponding to different languages used in an <b>XAF</b> application.
</para>
            </summary>
            <value><b>true</b> if the attribute is localizable; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.IsModified">
            <summary>
                <para>Indicates whether the attribute's value has been changed at run-time.
</para>
            </summary>
            <value><b>true</b>, if the attribute's value has been changed at run-time; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.IsReadOnly">
            <summary>
                <para>Indicates whether the attribute's value can be changed at run time via the Model Editor.
</para>
            </summary>
            <value><b>true</b>, if the attribute's value cannot be changed at run time via the <b>Model Editor</b>; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.IsValueFromCalculator">
            <summary>
                <para>Indicates whether the attribute's value has been calculated based on another attribute's value.
</para>
            </summary>
            <value><b>true</b>, if the attribute's value has been calculated based on another attribute's value; <b>false</b>, if the attribute's value has been overridden by the explicitly specified value.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.Parent">
            <summary>
                <para>Provides access to the node that contains the attribute.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.DictionaryNode"/> object that represents the node that contains the attribute.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.Value">
            <summary>
                <para>Provides access to the data stored by the attribute.
</para>
            </summary>
            <value>A string that holds the data stored by the attribute.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryAttribute.ValueCalculator">
            <summary>
                <para>Provides access to the object that calculates the attribute's value.
</para>
            </summary>
            <value>An <b>AttributeValueCalculator</b> object that calculates the attribute's value.
</value>


        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryAttribute.DefaultLanguage">
            <summary>
                <para>Holds the predefined "(Default language)" value for the <b>PreferredLanguage</b> attribute of the Application Model's Application node.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryAttribute.DefaultValue">
            <summary>
                <para>This constant is intended for internal use.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryAttribute.InvariantAspectName">
            <summary>
                <para>This constant is obsolete. Use the <see cref="F:DevExpress.ExpressApp.DictionaryAttribute.DefaultLanguage"/> constant instead.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryAttribute.PreferredLanguageAttributeName">
            <summary>
                <para>Holds the name of the <b>PreferredLanguage</b> attribute of the Application Model's Application node.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.ExpressApp.DictionaryNode">

            <summary>
                <para>Represents the Application Model's node.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.ChildNodesIndexed">
            <summary>
                <para>Indicates whether the node's child nodes have the <b>Index</b> attribute applied.
</para>
            </summary>
            <value><b>true</b> if the child nodes have the <b>Index</b> attribute applied; otherwise <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.#ctor(System.String,DevExpress.ExpressApp.Dictionary)">
            <summary>
                <para>Creates and initializes a new instance of the DictionaryNode class.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the node. This parameter is used to initialize the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Name"/> property.

            </param>
            <param name="dictionary">
		A <b>Dictionary</b> object to which the <b>DictionaryNode</b> belongs. This parameter is used to initialize the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Dictionary"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.#ctor(System.String)">
            <summary>
                <para>Creates and initializes a new instance of the DictionaryNode class.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the node. This parameter is used to initialize the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Name"/> property.

            </param>


        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryNode.IsNewNodeAttributeName">
            <summary>
                <para>Holds the name of the Application Model's <b>IsNewNode</b> attribute.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryNode.PathSeparator">
            <summary>
                <para>Holds the path separator used when constructing paths to the Application Model's nodes and attributes. For instance, this separator is used in the expressions returned by the <see cref="P:DevExpress.ExpressApp.DictionaryNode.FullPathWithNodeKey"/> method.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryNode.ReaderWriterLockWrapperCreator">
            <summary>
                <para>Intended for internal use.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DictionaryNode.RemovedAttributeName">
            <summary>
                <para>Holds the name of the Application Model's <b>Removed</b> attribute.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.AddAttribute(System.String)">
            <summary>
                <para>Adds an attribute to the node.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute to be added to the Application Model's node.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.DictionaryAttribute"/> object that represents the attribute added to the Application Model's node.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.AddAttribute(System.String,System.String)">
            <summary>
                <para>Adds an attribute to the node.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute to be added to the Application Model's node.

            </param>
            <param name="value">
		A string that holds the value with which the created attribute must be initialized.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.DictionaryAttribute"/> object that represents the attribute added to the Application Model's node.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.AddChildNode(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Adds a child node to the node.
</para>
            </summary>
            <param name="node">
		A DictionaryNode object which represents the child node to be added.

            </param>
            <returns>A DictionaryNode object which represents the child node added to the Application Model.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.AddChildNode(DevExpress.ExpressApp.DictionaryNode,System.Boolean)">
            <summary>
                <para>Adds a child node to the node.
</para>
            </summary>
            <param name="node">
		A DictionaryNode object which represents the child node to be added.

            </param>
            <param name="setIsNew">
		<b>true</b> to set the added child node's <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.IsNew"/> property to <b>true</b>; otherwise, <b>false</b>.

            </param>
            <returns>A DictionaryNode object which represents the child node added to the Application Model.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.AddChildNode(System.String)">
            <summary>
                <para>Adds a child node to the node.
</para>
            </summary>
            <param name="name">
		A string that specifies the name of the child node.

            </param>
            <returns>A DictionaryNode object which represents the child node added to the Application Model.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.ApplyDiff(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="currentNode">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.Clone">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.CombineWith(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Combines the node with the specified node.
</para>
            </summary>
            <param name="sourceNode">
		A <see cref="T:DevExpress.ExpressApp.DictionaryNode"/> object which represents the required node.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.CopyValues">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.CopyValues(System.Boolean)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="includeCalculatedAttributes">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindAttribute(System.String)">
            <summary>
                <para>Provides access to the node's attribute.

</para>
            </summary>
            <param name="name">
		A string that specifies the name of the node's attribute that must be accessed. 

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.DictionaryAttribute"/> object that represents the node's attribute. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindAttributeSchema(System.String)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="attributeName">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindChildNode(System.String,System.String)">
            <summary>
                <para>Provides access to the node's child node with the specified parameters.
</para>
            </summary>
            <param name="attributeName">
		A string that specifies the name of the attribute that the child node must contain.

            </param>
            <param name="attributeValue">
		A string that specifies the value of the attribute.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindChildNode(System.String,System.String,System.String)">
            <summary>
                <para>Provides access to the node's child node with the specified parameters.
</para>
            </summary>
            <param name="nodeName">
		A string that specifies the required child node's name.

            </param>
            <param name="attributeName">
		A string that specifies the name of the attribute that the child node must contain.

            </param>
            <param name="attributeValue">
		A string that specifies the value of the attribute.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindChildNode(System.String,System.String,System.String,System.Boolean)">
            <summary>
                <para>Provides access to the node's child node with the specified parameters.
</para>
            </summary>
            <param name="nodeName">
		A string that specifies the required child node's name.

            </param>
            <param name="attributeName">
		A string that specifies the name of the attribute that the child node must contain.

            </param>
            <param name="attributeValue">
		A string that specifies the value of the attribute.

            </param>
            <param name="recursively">
		<b>true</b>, to search over the child nodes' child nodes; <b>false</b>, to search over the node's child nodes only.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindChildNode(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Provides access to the node's child node with the specified parameters.
</para>
            </summary>
            <param name="sourceChildNode">
		A DictionaryNode object that represents the required child node in another <see cref="T:DevExpress.ExpressApp.Dictionary"/>.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindChildNode(DevExpress.ExpressApp.DictionaryPathItem)">
            <summary>
                <para>Provides access to the node's child node with the specified path.
</para>
            </summary>
            <param name="pathItem">
		A <b>DictionaryPathItem</b> object that represents the path to the required child node.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindChildNode(System.String)">
            <summary>
                <para>Provides access to the node's child node with the specified name.
</para>
            </summary>
            <param name="nodeName">
		A string that specifies the required child node's name.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindChildNodeByPath(System.String)">
            <summary>
                <para>Provides access to the node's child element with the specified path.
</para>
            </summary>
            <param name="path">
		A string that represents the path to the required child element.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement"/> object that represents the node's child element.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.FindChildNodeByPath(DevExpress.ExpressApp.DictionaryPath)">
            <summary>
                <para>Provides access to the node's child element with the specified path.
</para>
            </summary>
            <param name="path">
		A <b>DictionaryPath</b> object that represents the path to the required child element.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement"/> object that represents the node's child element.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttribute(System.String)">
            <summary>
                <para>Provides access to the node's attribute with the specified name.

</para>
            </summary>
            <param name="name">
		A string that specifies the name of the node's attribute that must be accessed.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.DictionaryAttribute"/> object that represents the node's attribute.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeBoolValue(System.String,System.Boolean)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <param name="defaultValue">
		A Boolean value that must be returned if the specified attribute doesn't exist.

            </param>
            <returns>The specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeBoolValue(System.String)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <returns>The specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeDecimalValue(System.String,System.Decimal)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <param name="defaultValue">
		A decimal value which must be returned if the specified attribute doesn't exist.

            </param>
            <returns>The specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeDoubleValue(System.String,System.Double)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <param name="defaultValue">
		A double value which must be returned if the specified attribute doesn't exist.


            </param>
            <returns>The specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeEnumValue(System.String,DevExpress.ExpressApp.EnumType)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <param name="defaultValue">
		An enumeration value which must be returned if the specified attribute doesn't exist.

            </param>
            <returns>The specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeIntValue(System.String,System.Int32)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <param name="defaultValue">
		A integer value which must be returned if the specified attribute doesn't exist.

            </param>
            <returns>The specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeIntValue(System.String)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <returns>The specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeValue(System.String)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <returns>A string that holds the specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.SetAttribute(System.String,System.Int32)">
            <summary>
                <para>Sets the node's attribute to the specified value.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the node's attribute whose value must be set.

            </param>
            <param name="value">
		An integer value that represents the new value of the attribute.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.SetAttribute(System.String,System.String)">
            <summary>
                <para>Sets the node's attribute to the specified value.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the node's attribute whose value must be set.

            </param>
            <param name="value">
		A string that holds the new value of the attribute.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.SetAttribute(System.String,System.Boolean)">
            <summary>
                <para>Sets the node's attribute to the specified value.
</para>
            </summary>
            <param name="name">
		A string that holds the name of the node's attribute whose value must be set.

            </param>
            <param name="value">
		A Boolean value that represents the new value of the attribute.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.SetIsNew">
            <summary>
                <para>Sets the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.IsNew"/> property to <b>true</b>. This specifies that the DictionaryNode was added to a <b>Dictionary</b> at run time.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.ToString">
            <summary>
                <para>Returns the string that represents the current DictionaryNode. 
</para>
            </summary>
            <returns>A short, human-readable string that represents the current <b>DictionaryNode</b> object. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.ToXml">
            <summary>
                <para>Returns the contents of the current  DictionaryNode in a readable form, formatted using the extensible markup language (XML).
</para>
            </summary>
            <returns>The contents of the current  <b>DictionaryNode</b> in a readable form, formatted using the extensible markup language.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.Attributes">
            <summary>
                <para>Provides access to the node's attributes.
</para>
            </summary>
            <value>A <b>ReadOnlyAttributeCollection</b> object that represents a collection of the node's attributes.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.ChildNodeCount">
            <summary>
                <para>Returns the number of the node's child nodes.
</para>
            </summary>
            <value>An integer value that specifies the number of the node's child nodes.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.ChildNodes">
            <summary>
                <para>Provides access to the node's child nodes.
</para>
            </summary>
            <value>A <b>ReadOnlyDictionaryNodeCollection</b> object that represents a collection of the node's child nodes.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.DisplayName">
            <summary>
                <para>Returns the display name of the node. This is the name that is used to display the node in the Model Editor.
</para>
            </summary>
            <value>A string which specifies the display name of the node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.FullPath">
            <summary>
                <para>Specifies the full path to the node.
</para>
            </summary>
            <value>A string that holds the full path to the node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.FullPathList">
            <summary>
                <para>Specifies the full path to the node in the form of a list.
</para>
            </summary>
            <value>A  <b>List@lt;String@gt;</b> object which specifies the full path to the node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.FullPathWithNodeKey">
            <summary>
                <para>Specifies the full path to the node, postfixed by the key attribute's name and value.
</para>
            </summary>
            <value>A string that holds the full path to the node, postfixed by the key attribute's name and value.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.IsChildNodesIndexed">
            <summary>
                <para>Indicates whether the node's child nodes have the <b>Index</b> attribute applied.

</para>
            </summary>
            <value><b>true</b> if the child nodes have the <b>Index</b> attribute applied; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.IsModified">
            <summary>
                <para>Indicates whether the node's attribute values have been changed at run-time.
</para>
            </summary>
            <value><b>true</b>, if the node's attribute values have been changed at run-time; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.IsReadOnly">
            <summary>
                <para>Indicates whether the node is read-only.
</para>
            </summary>
            <value><b>true</b> if the node is read-only; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.KeyAttribute">
            <summary>
                <para>Provides access to the key attribute of the node.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.DictionaryAttribute"/> object that represents the key attribute of the node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.KeyAttributeName">
            <summary>
                <para>Returns the name of the node's key attribute.

</para>
            </summary>
            <value>A string that holds the name of the node's key attribute.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.NameWithKey">
            <summary>
                <para>Specifies the name of the node, postfixed by the key attribute's name and value.
</para>
            </summary>
            <value>A string which holds the name of the node, postfixed by the key attribute's name and value.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.NodeSchema">
            <summary>
                <para>Provides access to the part of the Schema that relates to the node.

</para>
            </summary>
            <value>A <b>NodeSchema</b> object that specifies the part of the <b>Schema</b> that relates to the node.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DictionaryNode.Parent">
            <summary>
                <para>Provides access to the node's parent node.
</para>
            </summary>
            <value>A <b>DictionaryNode</b> object that represents the node's parent node.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetAttributeValue(System.String,System.String)">
            <summary>
                <para>Returns the value of the node's attribute with the specified name.

</para>
            </summary>
            <param name="name">
		A string that holds the name of the attribute which must be evaluated.

            </param>
            <param name="defaultValue">
		A string that holds the value which must be returned if the specified attribute doesn't exist.

            </param>
            <returns>A string that holds the specified attribute's value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetChildNode(System.String)">
            <summary>
                <para>Provides access to the node's child node with the specified name.
</para>
            </summary>
            <param name="name">
		A string that specifies the required child node's name.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetChildNode(DevExpress.ExpressApp.DictionaryPathItem)">
            <summary>
                <para>Provides access to the node's child node with the specified path.
</para>
            </summary>
            <param name="pathItem">
		A <b>DictionaryPathItem</b> object that represents the path to the required child node.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetChildNode(System.String,System.String,System.String)">
            <summary>
                <para>Provides access to the node's child node with the specified parameters.
</para>
            </summary>
            <param name="name">
		A string that specifies the required child node's name.

            </param>
            <param name="attributeName">
		A string that specifies the name of the attribute that the child node must contain.

            </param>
            <param name="attributeValue">
		A string that specifies the value of the attribute.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetChildNodeByPath(System.String)">
            <summary>
                <para>Provides access to the node's child node with the specified path.
</para>
            </summary>
            <param name="path">
		A string that represents the path to the required child node.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetChildNodeByPath(DevExpress.ExpressApp.DictionaryPath)">
            <summary>
                <para>Provides access to the node's child node with the specified path.
</para>
            </summary>
            <param name="path">
		A <b>DictionaryPath</b> object that represents the path to the required child node.

            </param>
            <returns>A DictionaryNode object that represents the node's child node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetChildNodes(System.String,System.String,System.String,System.Boolean)">
            <summary>
                <para>Provides access to the node's child nodes with the specified parameters.
</para>
            </summary>
            <param name="nodeName">
		A string that specifies the name that the child nodes must have, to be included in the returned collection.

            </param>
            <param name="attributeName">
		A string that specifies the name of the attribute that the child node must contain to be included in the returned collection.

            </param>
            <param name="attributeValue">
		A string that specifies the value of the attribute.

            </param>
            <param name="recursively">
		<b>true</b>, to include the child nodes' child nodes with the specified name in the returned collection; otherwise, <b>false</b>.

            </param>
            <returns>A <b>DictionaryNodeCollection</b> object that represents the node's child nodes.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetChildNodes(System.String,System.Boolean)">
            <summary>
                <para>Provides access to the node's child nodes with the specified name.
</para>
            </summary>
            <param name="nodeName">
		A string that specifies the name that the child nodes must have, to be included in the returned collection.

            </param>
            <param name="recursively">
		<b>true</b>, to include the child nodes' child nodes with the specified name in the returned collection; otherwise, <b>false</b>.

            </param>
            <returns>A <b>DictionaryNodeCollection</b> object that represents the node's child nodes.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetChildNodesByPath(System.String)">
            <summary>
                <para>Provides access to the node's child nodes with the specified path.
</para>
            </summary>
            <param name="nodePath">
		A string that specifies the path to the required child nodes.

            </param>
            <returns>A <b>DictionaryNodeCollection</b> object that represents the node's child nodes.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetDiffNode">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetOrderedChildNodes">
            <summary>
                <para>Returns an ordered list of the node's child nodes.
</para>
            </summary>
            <returns>An ordered list of the node's child nodes.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetPossibleChildNodeNames">
            <summary>
                <para>Returns the names of the child nodes that can be added to the node, according to the Schema.
</para>
            </summary>
            <returns>An <b>IList@lt;String@gt;</b> object which represents the names of the child nodes that can be added to the node, according to the <b>Schema</b>.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.GetRootNode">
            <summary>
                <para>Provides access to the Application Model's root node.
</para>
            </summary>
            <returns>A <b>DictionaryNode</b> object that represents the Application Model's root node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.RemoveAttribute(System.String)">
            <summary>
                <para>Removes the node's attribute from the Application Model.
</para>
            </summary>
            <param name="name">
		A string which holds the name of the attribute to be removed from the Application Model.


            </param>
            <returns><b>true</b>, if the specified attribute was successfully found and removed; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.RemoveChildNode(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Removes the node's child node.
</para>
            </summary>
            <param name="childNode">
		A <b>DictionaryNode</b> object which represents the child node to be removed from the Application Model.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.RemoveChildNodes">
            <summary>
                <para>Removes all the node's child nodes from the Application Model.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.Rename(System.String)">
            <summary>
                <para>Changes the <see cref="P:DevExpress.ExpressApp.Core.DictionaryHelpers.DictionaryElement.Name"/> of the node.
</para>
            </summary>
            <param name="name">
		A string that contains the new name of the node.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DictionaryNode.ResetIsModified">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Dictionary">

            <summary>
                <para>Represents the Application Model.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.ReadOnlyElementsLocked">
            <summary>
                <para>This property is intended for internal use.
</para>
            </summary>
            <value>@nbsp;
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.#ctor(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Creates and initializes a new instance of the Dictionary class.
</para>
            </summary>
            <param name="rootNode">
		A <see cref="T:DevExpress.ExpressApp.DictionaryNode"/> object that represents the root node of the <b>Dictionary</b>. This parameter is used to initialize the <see cref="P:DevExpress.ExpressApp.Dictionary.RootNode"/> property.


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.#ctor(DevExpress.ExpressApp.Schema)">
            <summary>
                <para>Creates and initializes a new instance of the Dictionary class.
</para>
            </summary>
            <param name="schema">
		A Schema object that represents the <b>Schema</b> of the <b>Dictionary</b>. This parameter is used to initialize the <see cref="P:DevExpress.ExpressApp.Dictionary.Schema"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.#ctor(DevExpress.ExpressApp.DictionaryNode,DevExpress.ExpressApp.Schema)">
            <summary>
                <para>Creates and initializes a new instance of the Dictionary class.
</para>
            </summary>
            <param name="rootNode">
		A <see cref="T:DevExpress.ExpressApp.DictionaryNode"/> object that represents the root node of the <b>Dictionary</b>. This parameter is used to initialize the <see cref="P:DevExpress.ExpressApp.Dictionary.RootNode"/> property.

            </param>
            <param name="schema">
		A Schema object that represents the <b>Schema</b> of the <b>Dictionary</b>. This parameter is used to initialize the <see cref="P:DevExpress.ExpressApp.Dictionary.Schema"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.#ctor">
            <summary>
                <para>Creates and initializes a new instance of the Dictionary class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Dictionary.Combining">
            <summary>
                <para>Occurs when the current Dictionary object is being combined with another <b>Dictionary</b> object.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Dictionary.CurrentAspectChanged">
            <summary>
                <para>This event is obsolete. Use the <see cref="P:DevExpress.ExpressApp.XafApplication.CurrentAspectProvider"/>.<b>CurrentAspectChanged</b> event instead.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Dictionary.Validation">
            <summary>
                <para>Occurs when the current Dictionary is being validated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Dictionary.DuplicatedNodesErrorText">
            <summary>
                <para>When the Application Model's node is being validated and child nodes are found to have the same key attribute value, an exception is triggered. The <b>DuplicatedNodesErrorText</b> constant holds the message template, used by this exception.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.AddAspect(System.String,DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="aspect">
		@nbsp;

            </param>
            <param name="aspectRootNode">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.Clone">
            <summary>
                <para>Creates a copy of the current Dictionary object.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.ExpressApp.Dictionary"/> object that represents the copy of the current <b>Dictionary</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.CombineWith(DevExpress.ExpressApp.Dictionary)">
            <summary>
                <para>Combines the current Dictionary with the specified <b>Dictionary</b>.
</para>
            </summary>
            <param name="dictionary">
		The required <see cref="T:DevExpress.ExpressApp.Dictionary"/> object.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.CombineWith(DevExpress.ExpressApp.Dictionary,System.String,System.Boolean)">
            <summary>
                <para>Combines the current Dictionary with the specified <b>Dictionary</b>. Intended for internal use.
</para>
            </summary>
            <param name="dictionary">
		@nbsp;

            </param>
            <param name="differenceName">
		@nbsp;

            </param>
            <param name="resetAttributes">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.GetCalculator(DevExpress.ExpressApp.DictionaryNode,System.String)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="node">
		@nbsp;

            </param>
            <param name="attrName">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.GetDiffs">
            <summary>
                <para>Specifies the changes made to the Application Model at run time.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.ExpressApp.Dictionary"/> object which specifies the changes made to the Application Model at run time.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.LoadLastDiffs(DevExpress.ExpressApp.DictionaryDifferenceStore)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="diffsStore">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.Lock">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.RemoveAspect(System.String)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="aspect">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.ResetIsModified">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.Validate">
            <summary>
                <para>Validates the current Dictionary object. Intended for internal use.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Dictionary.WriteSchemaModuleVersions">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.Aspects">
            <summary>
                <para>Specifies the languages defined in the Application Model.
</para>
            </summary>
            <value>An <b>ICollection@lt;String@gt;</b> object which represents the languages defined in the Application Model.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.CanReturnDefaultAspectValue">
            <summary>
                <para>This property is intended for internal use.
</para>
            </summary>
            <value>@nbsp;
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.CurrentAspect">
            <summary>
                <para>Specifies the language currently used in the application.
</para>
            </summary>
            <value>A string that represents the language currently used in the application.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.CurrentAspectProvider">
            <summary>
                <para>Returns an <b>ICurrentAspectProvider</b> object that supplies culture-specific information.
</para>
            </summary>
            <value>An <b>ICurrentAspectProvider</b> object that supplies culture-specific information.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.DictionaryValidators">
            <summary>
                <para>This property is intended for internal use.
</para>
            </summary>
            <value>@nbsp;
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.IsReadOnlyElementsLocked">
            <summary>
                <para>This property is intended for internal use.
</para>
            </summary>
            <value>@nbsp;
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.LastDiffStore">
            <summary>
                <para>This property is intended for internal use.
</para>
            </summary>
            <value>@nbsp;
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.RootNode">
            <summary>
                <para>Provides access to the Application Model's root node.
</para>
            </summary>
            <value>A <b>DictionaryNode</b> object which represents the Application Model's root node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.Schema">
            <summary>
                <para>Provides access to the Schema of the Application Model.
</para>
            </summary>
            <value>A <b>Schema</b> object that represents the <b>Schema</b> of the Application Model.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Dictionary.SchemaUpdaters">
            <summary>
                <para>This property is intended for internal use.
</para>
            </summary>
            <value>@nbsp;
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.FullTextSearchTargetPropertiesMode">

            <summary>
                <para>Specifies the way in which the <b>Filter by Text</b> Action collects properties to be used in the search.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FullTextSearchTargetPropertiesMode.AllSearchableMembers">
            <summary>
                <para>Specifies that the <b>Filter by Text</b> Action must perform its search over all the searchable properties.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FullTextSearchTargetPropertiesMode.VisibleColumns">
            <summary>
                <para>Specifies that the <b>Filter by Text</b> Action must perform its search over the properties whose corresponding columns are visible.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.CustomBuildCriteriaEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.SystemModule.FilterController.CustomBuildCriteria"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.CustomBuildCriteriaEventArgs.#ctor(System.String)">
            <summary>
                <para>Creates and initializes an instance of the CustomBuildCriteriaEventArgs class.
</para>
            </summary>
            <param name="searchText">
		A user-entered string, based on which the <b>Filter by Text</b> Action performs its search in the current List View. This parameter is used to initialize the <see cref="P:DevExpress.ExpressApp.SystemModule.CustomBuildCriteriaEventArgs.SearchText"/> property.



            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.CustomBuildCriteriaEventArgs.Criteria">
            <summary>
                <para>Specifies the <b>CriteriaOperator</b> to be used by the <b>Filter by Text</b> Action to filter a List View.
</para>
            </summary>
            <value>A <b>CriteriaOperator</b> that will be used by the <b>Filter by Text</b> Action to filter the current List View.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.CustomBuildCriteriaEventArgs.SearchText">
            <summary>
                <para>Returns the user-entered string, based on which the <b>Filter by Text</b> Action performs its search in the current List View. 
</para>
            </summary>
            <value>A user-entered string, based on which the <b>Filter by Text</b> Action performs its search in the current List View. 
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.CustomGetFullTextSearchPropertiesEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.SystemModule.FilterController.CustomGetFullTextSearchProperties"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.CustomGetFullTextSearchPropertiesEventArgs.#ctor">
            <summary>
                <para>Creates and initializes an instance of the CustomGetFullTextSearchPropertiesEventArgs class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.CustomGetFullTextSearchPropertiesEventArgs.Properties">
            <summary>
                <para>Provides access to a list of the names of the properties over which the <b>Filter by Text</b> Action performs its search.
</para>
            </summary>
            <value>A list of the names of the properties over which the <b>Filter by Text</b> Action performs its search.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.IComplexListEditor">

            <summary>
                <para>Declares members implemented by a List Editor to support receiving information on the application and Collection Source of the List View that uses the List Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Editors.IComplexListEditor.Setup(DevExpress.ExpressApp.CollectionSourceBase,DevExpress.ExpressApp.XafApplication)">
            <summary>
                <para>In certain scenarios, a List Editor needs information on the application and Collection Source of the List View that uses the List Editor. This method is used to supply this information to the List Editor.

</para>
            </summary>
            <param name="collectionSource">
		A <see cref="T:DevExpress.ExpressApp.CollectionSourceBase"/> object that represents the Collection Source of the List View that uses the List Editor.


            </param>
            <param name="application">
		An <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that can be used to manage the current application.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.ObjectManipulatingEventArgs">

            <summary>
                <para>Represents arguments passed to the events that involve manipulating an object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ObjectManipulatingEventArgs.#ctor(System.Object)">
            <summary>
                <para>Creates and initializes a new instance of the ObjectManipulatingEventArgs class.
</para>
            </summary>
            <param name="theObject">
		An object that is being manipulated. This argument is used to initialize the <see cref="P:DevExpress.ExpressApp.ObjectManipulatingEventArgs.Object"/> property.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectManipulatingEventArgs.Object">
            <summary>
                <para>Provides access to the object that is being manipulated.
</para>
            </summary>
            <value>An object that is being manipulated.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.NewItemRowPosition">

            <summary>
                <para>Contains values that specify the positions of a new item row within a List Editor that supports the <b>ISupportNewItemRowPosition</b> interface. 
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.NewItemRowPosition.Bottom">
            <summary>
                <para>The new item row is positioned at the bottom of a List Editor.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.NewItemRowPosition.None">
            <summary>
                <para>The new item row is not displayed in a List Editor.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.NewItemRowPosition.Top">
            <summary>
                <para>The new item row is positioned at the top of a List Editor.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.ValidateObjectEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.ListView.ValidateObject"/> and <see cref="E:DevExpress.ExpressApp.Editors.ListEditor.ValidateObject"/> events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ValidateObjectEventArgs.#ctor(System.Object,System.Boolean)">
            <summary>
                <para>Creates and initializes a new instance of the ValidateObjectEventArgs class.
</para>
            </summary>
            <param name="obj">
		An object that must be validated. This object is used to initialize the <see cref="P:DevExpress.ExpressApp.ObjectManipulatingEventArgs.Object"/> property.

            </param>
            <param name="valid">
		A Boolean value that specifies whether the object being checked is valid. This value is used to initialize the <see cref="P:DevExpress.ExpressApp.ValidateObjectEventArgs.Valid"/> property.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ValidateObjectEventArgs.Valid">
            <summary>
                <para>Specifies whether the object that is being checked is valid or not.
</para>
            </summary>
            <value><b>true</b> if the object that is being checked is valid; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ValidateObjectEventArgs.ErrorText">
            <summary>
                <para>Specifies the message that must be displayed in a UI when the object being checked isn't valid.
</para>
            </summary>
            <value>A message that must be displayed in a UI when the object being checked isn't valid.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SelectionType">

            <summary>
                <para>Contains values that specify the selection types that a List Editor or a View supports.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.SelectionType.FocusedObject">
            <summary>
                <para>A List Editor or a View supports selection of a single object only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SelectionType.Full">
            <summary>
                <para>A List Editor or a View supports single and multiple selection.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SelectionType.MultipleSelection">
            <summary>
                <para>A List Editor or a View supports selection of multiple objects only.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SelectionType.None">
            <summary>
                <para>A List Editor or a View doesn't support selection.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.EditMode">

            <summary>
                <para>Contains values that specify the edit modes of List Editors.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.EditMode.Editable">
            <summary>
                <para>Editing data that is bound to a List Editor is allowed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.EditMode.ReadOnly">
            <summary>
                <para>A List Editor's control can only view its bound data.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.EditMode.ReadOnlyEditors">
            <summary>
                <para>A List Editor's control represents bound data via in-place editors, but editing is prohibited.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.FrameContext">

            <summary>
                <para>Contains values that specify the kind of a <see cref="T:DevExpress.ExpressApp.Frame"/> from which the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method has been invoked.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.FrameContext.Common">
            <summary>
                <para>The <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method is invoked from a <see cref="T:DevExpress.ExpressApp.Frame"/> that displays a root View.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.FrameContext.Lookup">
            <summary>
                <para>The <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method is invoked from a lookup <see cref="T:DevExpress.ExpressApp.Window"/>.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.FrameContext.Nested">
            <summary>
                <para>The <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method is invoked from a <see cref="T:DevExpress.ExpressApp.Frame"/> that dispays a nested View.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.ShowViewSource">

            <summary>
                <para>Represents a set of parameters that specify the context from which the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method has been invoked.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewSource.#ctor(DevExpress.ExpressApp.Frame,DevExpress.ExpressApp.Actions.ActionBase)">
            <summary>
                <para>Creates and initializes an instance of the ShowViewSource class with the specified parameters.
</para>
            </summary>
            <param name="sourceFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> from which the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method is called. This parameter's value is used to initialize the <see cref="P:DevExpress.ExpressApp.ShowViewSource.SourceFrame"/> property.

            </param>
            <param name="sourceAction">
		If a View has to be created as the result of an Action, this parameter should contain a reference to the Action's instance. This parameter's value is used to initialize the <see cref="P:DevExpress.ExpressApp.ShowViewSource.SourceAction"/> property.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewSource.SourceAction">
            <summary>
                <para>This property references the Action's instance, if a View is displayed as the result of an Action, 

</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> descendant object that specifies the Action which invoked the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewSource.SourceController">
            <summary>
                <para>This property references the instance of the Action's <see cref="T:DevExpress.ExpressApp.Controller"/>, if a View has to be displayed as the result of an Action, 

</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Controller"/>  descendant object that specifies the Controller of the Action which invoked the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewSource.SourceFrame">
            <summary>
                <para>Contains a reference to the <see cref="T:DevExpress.ExpressApp.Frame"/>, from which the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method is invoked.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Frame"/> from which the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method is invoked.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewSource.SourceView">
            <summary>
                <para>Contains a reference to the View represented by the <see cref="T:DevExpress.ExpressApp.Frame"/>, from which the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method is invoked.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.View"/> that is represented by the <b>Frame</b>, from which the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method is invoked.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.ShowViewStrategyBase">

            <summary>
                <para>An abstract class that serves as the base class for the Show View Strategy classes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewStrategyBase.#ctor(DevExpress.ExpressApp.XafApplication)">
            <summary>
                <para>The constructor which provides basic functionality for the classes derived from the ShowViewStrategyBase class.
</para>
            </summary>
            <param name="application">
		An <see cref="T:DevExpress.ExpressApp.XafApplication"/> descendant object that represents the application that will use the instantiated Show View Strategy.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewStrategyBase.Dispose">
            <summary>
                <para>Releases all the resources allocated by the current Show View Strategy.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewStrategyBase.GetObjectSpaceToShowViewFrom(DevExpress.ExpressApp.Frame)">
            <summary>
                <para>Returns an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> in which a Detail View should be created to be displayed via the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method.
</para>
            </summary>
            <param name="sourceFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> from which the <b>ShowView</b> method will be invoked.

            </param>
            <returns>An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> in which a Detail View should be created to be displayed via the <b>ShowView</b> method.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewStrategyBase.IsViewShownFromNestedObjectSpace(DevExpress.ExpressApp.Frame)">
            <summary>
                <para>This method is used internally in <b>XAF</b> and isn't intended to be called from your code.
</para>
            </summary>
            <param name="sourceFrame">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowDetailViewFrom(DevExpress.ExpressApp.Frame)">
            <summary>
                <para>Indicates whether a Detail View invoked from the specified <see cref="T:DevExpress.ExpressApp.Frame"/> can be displayed in a new <see cref="T:DevExpress.ExpressApp.Window"/>.
</para>
            </summary>
            <param name="sourceFrame">
		The currently active <see cref="T:DevExpress.ExpressApp.Frame"/> from which a Detail View will be invoked.

            </param>
            <returns><b>true</b> if a Detail View can be displayed in a new Window; <b>false</b> if a Detail View can be displayed in the specified Frame only.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView(DevExpress.ExpressApp.ShowViewParameters,DevExpress.ExpressApp.ShowViewSource)">
            <summary>
                <para>Displays the View that is specified via the <i>parameters</i> argument, in a UI.
</para>
            </summary>
            <param name="parameters">
		A <see cref="T:DevExpress.ExpressApp.ShowViewParameters"/> object that represents a set of parameters used to display a new View.

            </param>
            <param name="showViewSource">
		A <see cref="T:DevExpress.ExpressApp.ShowViewSource"/> object that specifies the context from which the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method was invoked.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewStrategyBase.Manager">
            <summary>
                <para>This property is obsolete and cannot be used in your applications.
</para>
            </summary>
            <value>@nbsp;
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.RefreshController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant that contains the <b>Refresh</b> Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.RefreshController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.RefreshController.RefreshAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.RefreshController"/>'s <b>Refresh</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the <b>Refresh</b> Action.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.LookupEditPropertyCollectionSource">

            <summary>
                <para>The Collection Source used for the List Views created by Lookup Property Editors.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Editors.LookupEditPropertyCollectionSource.#ctor(DevExpress.ExpressApp.ObjectSpace,System.Type,System.Object,DevExpress.ExpressApp.DC.IMemberInfo,DevExpress.Persistent.Base.DataSourcePropertyIsNullMode,System.String)">
            <summary>
                <para>Creates and initializes an instance of the LookupEditPropertyCollectionSource class with the specified parameters.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> used by the Collection Source to interact with the database.

            </param>
            <param name="masterObjectType">
		The type of an object which owns the property whose possible values the created Collection Source will represent.

            </param>
            <param name="masterObject">
		An object which owns the property whose possible values the created Collection Source will represent.



            </param>
            <param name="memberDescriptor">
		An <b>IMemberInfo</b> object that contains metadata information on the property whose possible values the created Collection Source will represent.



            </param>
            <param name="dataSourcePropertyIsNullMode">
		The <b>DataSourcePropertyIsNullMode</b> attribute's value of the Application Model's Application | BOModel | <b>Class</b> | <b>Member</b> node that corresponds to the property whose possible values the created Collection Source will represent.

            </param>
            <param name="dataSourcePropertyIsNullCriteria">
		The <b>DataSourcePropertyIsNullCriteria</b> attribute's value of the Application Model's Application | BOModel | <b>Class</b> | <b>Member</b> node that corresponds to the property whose possible values the created Collection Source will represent.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.LookupEditPropertyCollectionSource.Mode">
            <summary>
                <para>Provides access to the <b>LookupEditCollectionSourceMode</b> enumeration value that specifies the kind of the List View that uses the LookupEditPropertyCollectionSource.
</para>
            </summary>
            <value><para>A <b>LookupEditCollectionSourceMode</b> enumeration value that specifies the kind of the List View that uses the <b>LookupEditPropertyCollectionSource</b>. The possible values:</para>
<list>
<item><term><b>LookupEditCollectionSourceMode.Lookup</b> - the Collection Source is used by a Lookup Property Editor's List View.</term></item>
<item><term><b>LookupEditCollectionSourceMode.Link</b> - the Collection Source is used by a List View invoked via the <see cref="P:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.LinkAction"/>.</term></item>
</list>
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.ProxiedPropertyCollectionSource">

            <summary>
                <para>The Collection Source that can be used as an alternative to the <see cref="T:DevExpress.ExpressApp.PropertyCollectionSource"/>. Provides different behavior when filtering is applied to the collection property that a <b>ProxiedPropertyCollectionSource</b> represents.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ProxiedPropertyCollectionSource.#ctor(DevExpress.ExpressApp.ObjectSpace,System.Type,System.Object,DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
                <para>Creates and initializes an instance of the ProxiedPropertyCollectionSource class with the specified parameters.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> used by the Collection Source to interact with the database.

            </param>
            <param name="masterObjectType">
		The type of an object, whose collection property the created ProxiedPropertyCollectionSource will represent.

            </param>
            <param name="masterObject">
		An object, whose collection property the created ProxiedPropertyCollectionSource will represent.

            </param>
            <param name="memberDescriptor">
		An <b>IMemberInfo</b> object that contains metadata information on the collection property the created ProxiedPropertyCollectionSource will represent.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ProxiedPropertyCollectionSource.Reload">
            <summary>
                <para>Reloads the current Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.PropertyCollectionSource">

            <summary>
                <para>Serves as the data source for the nested List Views that display collection properties.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.PropertyCollectionSource.#ctor(DevExpress.ExpressApp.ObjectSpace,System.Type,System.Object,DevExpress.ExpressApp.DC.IMemberInfo)">
            <summary>
                <para>Creates and initializes an instance of the PropertyCollectionSource class with the specified parameters.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> used by the Collection Source to interact with the database.

            </param>
            <param name="masterObjectType">
		The type of an object, whose collection property the created PropertyCollectionSource will represent.

            </param>
            <param name="masterObject">
		An object, whose collection property the created PropertyCollectionSource will represent.

            </param>
            <param name="memberDescriptor">
		An <b>IMemberInfo</b> object that contains metadata information on the collection property the created PropertyCollectionSource will represent.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.PropertyCollectionSource.MasterObjectChanged">
            <summary>
                <para>Occurs after the <see cref="P:DevExpress.ExpressApp.PropertyCollectionSource.MasterObject"/> has been changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.PropertyCollectionSource.Dispose">
            <summary>
                <para>Releases all the resources allocated by the current PropertyCollectionSource.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.PropertyCollectionSource.GetCount">
            <summary>
                <para>Returns the number of objects contained in the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>
            <returns>The number of objects that are contained in the current Collection Source's collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.PropertyCollectionSource.GetManyToManyCriteria">
            <summary>
                <para>The <a href="http://www.devexpress.com/Help/?document=XtraData/clsDevExpressDataFilteringCriteriaOperatortopic.htm">Criteria Operator</a> (requires Internet connection) returned by this method can only be used if the <see cref="P:DevExpress.ExpressApp.PropertyCollectionSource.MasterObjectType"/> class participates in a many-to-many relationship. This Criteria Operator can be applied to a collection of the associated-type objects to leave only the objects associated with the <see cref="P:DevExpress.ExpressApp.PropertyCollectionSource.MasterObject"/>.

</para>
            </summary>
            <returns>A Criteria Operator that can be applied to a collection of the associated-type objects to leave only the objects associated with the <b>MasterObject</b>.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.PropertyCollectionSource.CanApplyCriteria">
            <summary>
                <para>Returns the value that indicates whether the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> can be filtered.
</para>
            </summary>
            <value><b>true</b> if the Collection Source's collection can be filtered; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.PropertyCollectionSource.DeclaredType">
            <summary>
                <para>Returns the type in which the collection property represented by the current PropertyCollectionSource is declared. 
</para>
            </summary>
            <value>The type in which the collection property represented by the current <b>PropertyCollectionSource</b> is declared. 
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.PropertyCollectionSource.MasterObject">
            <summary>
                <para>Provides access to the object, whose collection property is represented by the current PropertyCollectionSource.
</para>
            </summary>
            <value>An object, whose collection property is represented by the current PropertyCollectionSource.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.PropertyCollectionSource.MasterObjectType">
            <summary>
                <para>Returns the type of the object, whose collection property is represented by the current PropertyCollectionSource.
</para>
            </summary>
            <value>The type of the object, whose collection property is represented by the current PropertyCollectionSource.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.PropertyCollectionSource.MemberInfo">
            <summary>
                <para>Provides access to the <b>IMemberInfo</b> object that contains metadata information on the collection property represented by the PropertyCollectionSource. 
</para>
            </summary>
            <value>An <b>IMemberInfo</b> object that contains metadata information on the collection property represented by the <b>PropertyCollectionSource</b>. 
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.PropertyCollectionSource.ObjectTypeInfo">
            <summary>
                <para>Provides metadata information on the type of the objects contained in the PropertyCollectionSource's collection.
</para>
            </summary>
            <value>An <b>ITypeInfo</b> object that provides information on the type of the objects contained in the Collection Source's collection.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.ServerCollectionSource">

            <summary>
                <para>Used for the root List Views that have the <b>UseServerMode</b> attribute of the Application Model's  Application | Views | <b>ListView</b> node set to <b>true</b>. All the data processing takes place on the database server side. Only the data that must be displayed in a UI at any given time is retrieved from the database. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ServerCollectionSource.#ctor(DevExpress.ExpressApp.ObjectSpace,System.Type)">
            <summary>
                <para>Creates and initializes an instance of the ServerCollectionSource class with the specified parameters.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> used by the Collection Source to interact with the database.

            </param>
            <param name="objectType">
		A type of the objects that will be contained in the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ServerCollectionSource.Add(System.Object)">
            <summary>
                <para>Adds the specified object to the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>
            <param name="obj">
		An object that must be added to the Collection Source's collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ServerCollectionSource.IsObjectFitForCollection(System.Object)">
            <summary>
                <para>Tries to determine whether the specified object satisfies the criteria contained in the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary.
</para>
            </summary>
            <param name="obj">
		An object that must be checked against the criteria contained in the <b>Criteria</b> dictionary.

            </param>
            <returns><b>true</b> if the specified object satisfies the criteria contained in the <b>Criteria</b> dictionary; <b>false</b> if the object doesn't satisfies the criteria; <b>null</b> if it cannot be determined.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ServerCollectionSource.Reload">
            <summary>
                <para>Reloads the current Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ServerCollectionSource.Remove(System.Object)">
            <summary>
                <para>Removes the specified object from the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>
            <param name="obj">
		An object that must be removed from the Collection Source's collection.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ServerCollectionSource.ObjectTypeInfo">
            <summary>
                <para>Provides metadata information on the type of the objects contained in the ServerCollectionSource's collection.
</para>
            </summary>
            <value>An <b>ITypeInfo</b> object that provides information on the type of the objects contained in the Collection Source's collection.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.CollectionSource">

            <summary>
                <para>The Collection Source used by default for the List Views that display collections of persistent objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSource.#ctor(DevExpress.ExpressApp.ObjectSpace,System.Type)">
            <summary>
                <para>Creates and initializes an instance of the CollectionSource class with the specified parameters.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> used by the Collection Source to interact with the database.

            </param>
            <param name="objectType">
		A type of the objects that will be contained in the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSource.ObjectTypeInfo">
            <summary>
                <para>Provides metadata information on the type of the objects contained in the CollectionSource's collection.
</para>
            </summary>
            <value>An <b>ITypeInfo</b> object that provides information on the type of the objects contained in the Collection Source's collection.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.CollectionSourceBase">

            <summary>
                <para>An abstract class that serves as the base class for Collection Source classes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.EndInit">
            <summary>
                <para>Ends initialization of the Collection Source. While the Collection Source is initializing, the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> property may return <i>null</i> (<i>Nothing</i> in VB).

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.GetCount">
            <summary>
                <para>Returns the number of objects contained in the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>
            <returns>The number of objects that are contained in the current Collection Source's collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.IsObjectFitForCollection(System.Object)">
            <summary>
                <para>Tries to determine whether the specified object satisfies the criteria contained in the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary.
</para>
            </summary>
            <param name="obj">
		An object that must be checked against the criteria contained in the <b>Criteria</b> dictionary.

            </param>
            <returns><b>true</b> if the specified object satisfies the criteria contained in the <b>Criteria</b> dictionary; <b>false</b> if the object doesn't satisfies the criteria; <b>null</b> if it cannot be determined.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.Reload">
            <summary>
                <para>Reloads the current Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.Remove(System.Object)">
            <summary>
                <para>Removes the specified object from the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>
            <param name="obj">
		An object that must be removed from the Collection Source's collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.ResetCollection">
            <summary>
                <para>Recreates a Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.SetAllowAdd(System.Boolean)">
            <summary>
                <para>Sets the value that specifies whether it's possible to add objects to the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> or not.
</para>
            </summary>
            <param name="allowAdd">
		A Boolean value that specifies whether it's possible to add objects to the Collection Source's collection or not. <b>true</b> if it's possible to add objects, otherwise <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.SetAllowRemove(System.Boolean)">
            <summary>
                <para>Sets the value that specifies whether it's possible to remove objects from the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> or not.
</para>
            </summary>
            <param name="allowRemove">
		A Boolean value that specifies whether it's possible to remove objects from the Collection Source's collection or not. <b>true</b> if it's possible to remove objects, otherwise <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.AllowAdd">
            <summary>
                <para>Returns the value that indicates whether it's possible to add objects to the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> or not.
</para>
            </summary>
            <value>A Boolean value that indicates whether it's possible to add objects to the Collection Source's collection or not. <b>true</b> if it's possible to add objects, otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.AllowRemove">
            <summary>
                <para>Returns the value that indicates whether it's possible to remove objects from the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> or not.
 
</para>
            </summary>
            <value>A Boolean value that indicates whether it's possible to remove objects from the Collection Source's collection or not. <b>true</b> if it's possible to remove objects, otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.CanApplyCriteria">
            <summary>
                <para>Returns the value that indicates whether the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> can be filtered.
</para>
            </summary>
            <value><b>true</b> if the Collection Source's collection can be filtered; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.Collection">
            <summary>
                <para>Provides access to the Collection Source's (see CollectionSourceBase) collection of objects.
</para>
            </summary>
            <value>An object that implements the <b>IList</b> interface and represents the Collection Source's collection of objects.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria">
            <summary>
                <para>Provides access to the Collection Source's dictionary of the <a href="http://www.devexpress.com/Help/?document=XtraData/clsDevExpressDataFilteringCriteriaOperatortopic.htm">Criteria Operators</a> (requires Internet connection) that define the way in which the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> is filtered.
</para>
            </summary>
            <value>A <b>LightDicationary</b> of the <a href="http://www.devexpress.com/Help/?document=XtraData/clsDevExpressDataFilteringCriteriaOperatortopic.htm">Criteria Operators</a> (requires Internet connection) that define the way in which the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> is filtered.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.DisplayableProperties">
            <summary>
                <para>Provides access to the semicolon-delimited list of the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>'s <a href="http://www.devexpress.com/Help/?document=XPO/CustomDocument3113.htm">property descriptors</a> (<b>XPO</b> online documentation, requires Internet connection).
</para>
            </summary>
            <value>A semicolon-delimited list of the collection's property descriptors.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.IsCriteriaLocked">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value>@nbsp;
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.IsLoaded">
            <summary>
                <para>Indicates whether the Collection Source's collection has been instantiated.
</para>
            </summary>
            <value><b>true</b> if the current Collection Source's collection is instantiated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.ObjectSpace">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> used by the Collection Source to interact with the database.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object used by the Collection Source to interact with the database.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.ObjectType">
            <summary>
                <para>Returns the type of the objects that are contained in the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>
            <value>The type of the objects contained in a Collection Source's collection.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.ObjectTypeInfo">
            <summary>
                <para>Provides metadata information on the type of the objects contained in the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>
            <value>An <b>ITypeInfo</b> object that provides information on the type of the objects contained in the Collection Source's collection.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.CollectionReloaded">
            <summary>
                <para>Occurs after the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> has been reloaded.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.CollectionReloading">
            <summary>
                <para>Occurs before the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> has been reloaded.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.AfterApplyCriteria">
            <summary>
                <para>Occurs after the Collection Source's collection has been filtered using the <a href="http://www.devexpress.com/Help/?document=XtraData/clsDevExpressDataFilteringCriteriaOperatortopic.htm">Criteria Operators</a> (requires Internet connection) contained in the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.BeforeApplyCriteria">
            <summary>
                <para>Occurs before the Collection Source's collection has been filtered using the <a href="http://www.devexpress.com/Help/?document=XtraData/clsDevExpressDataFilteringCriteriaOperatortopic.htm">Criteria Operators</a> (requires Internet connection) contained in the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.CollectionChanged">
            <summary>
                <para>Occurs after the Collection Source's collection has been recreated.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.CollectionChanging">
            <summary>
                <para>Occurs before the Collection Source's collection has been recreated.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.CollectionLoaded">
            <summary>
                <para>Occurs after the Collection Source's collection has been recreated. 
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.CriteriaApplied">
            <summary>
                <para>Occurs after the Collection Source's collection has been filtered using the <a href="http://www.devexpress.com/Help/?document=XtraData/clsDevExpressDataFilteringCriteriaOperatortopic.htm">Criteria Operators</a> (requires Internet connection) contained in the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.CriteriaApplying">
            <summary>
                <para>Occurs before the Collection Source's collection has been filtered using the <a href="http://www.devexpress.com/Help/?document=XtraData/clsDevExpressDataFilteringCriteriaOperatortopic.htm">Criteria Operators</a> (requires Internet connection) contained in the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.CollectionSourceBase.Disposed">
            <summary>
                <para>Occurs after a Collection Source has been disposed of. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.CollectionSourceBase.EmptyCollectionCriteria">
            <summary>
                <para>Returns a <a href="http://www.devexpress.com/Help/Content.aspx?help=XtraData@document=clsDevExpressDataFilteringCriteriaOperatortopic.htm">Criteria Operator</a> (requires Internet connection) that represents a criterion that can never be satisfied. If you add this Criteria Operator to a Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary, the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> will contain no objects at all.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.Add(System.Object)">
            <summary>
                <para>Adds the specified object to the Collection Source's <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/>.
</para>
            </summary>
            <param name="obj">
		An object that must be added to the Collection Source's collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.ApplyCriteria">
            <summary>
                <para>Filters the Collection Source's collection using the <a href="http://www.devexpress.com/Help/?document=XtraData/clsDevExpressDataFilteringCriteriaOperatortopic.htm">CriteriaOperator</a> (requires Internet connection) descendants contained in the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.BeginInit">
            <summary>
                <para>Begins initialization of the Collection Source. While the Collection Source is initializing, the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> property may return <i>null</i> (<i>Nothing</i> in VB).
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.CollectionSourceBase.Dispose">
            <summary>
                <para>Releases all the resources allocated by the current Collection Source. 
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.CollectionSourceBase.IsInitialization">
            <summary>
                <para>Specifies whether the Collection Source is in the initialization state. While the Collection Source is initializing, the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Collection"/> property may return <i>null</i> (<i>Nothing</i> in VB).
</para>
            </summary>
            <value><b>true</b> if the Collection Source is in the initialization state; otherwise <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.CustomGetValueEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.Persistent.Base.ObjectFormatter.CustomGetValue"/> event. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.CustomGetValueEventArgs.#ctor(System.String,System.Object)">
            <summary>
                <para>Creates and initializes an instance of the CustomGetValueEventArgs class.
</para>
            </summary>
            <param name="memberPath">
		A name of the property that is being queried for its value. This parameter is assigned to the <see cref="P:DevExpress.Persistent.Base.CustomGetValueEventArgs.MemberPath"/> property.

            </param>
            <param name="obj">
		An object whose property value must replace the currently processed format item in the format string. This parameter is assigned to the <see cref="P:DevExpress.Persistent.Base.CustomGetValueEventArgs.Object"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.CustomGetValueEventArgs.MemberPath">
            <summary>
                <para>Returns the name of the property that is being queried for its value.
</para>
            </summary>
            <value>A name of the property that is being queried for its value.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CustomGetValueEventArgs.Object">
            <summary>
                <para>Returns an object whose property value must replace the currently processed format item in the format string.
</para>
            </summary>
            <value>An object whose property value must replace the currently processed format item in the format string.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CustomGetValueEventArgs.Value">
            <summary>
                <para>Returns the custom value that must replace the corresponding format item in the string processed by the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method.
</para>
            </summary>
            <value>A custom value that must replace the corresponding format item in the string processed by the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.CustomFormatObjectEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.Persistent.Base.ObjectFormatter.CustomFormatObject"/> event. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.CustomFormatObjectEventArgs.#ctor(System.String,System.Object,DevExpress.Persistent.Base.EmptyEntriesMode)">
            <summary>
                <para>Creates and initializes an instance of the CustomFormatObjectEventArgs class.
</para>
            </summary>
            <param name="formatString">
		A format string that is being processed. This parameter is assigned to the <see cref="P:DevExpress.Persistent.Base.CustomFormatObjectEventArgs.FormatString"/> property.

            </param>
            <param name="obj">
		An object whose property values must replace the format items in the format string. This parameter is assigned to the <see cref="P:DevExpress.Persistent.Base.CustomFormatObjectEventArgs.Object"/> property.

            </param>
            <param name="emptyEntriesMode">
		An <see cref="T:DevExpress.Persistent.Base.EmptyEntriesMode"/> enumeration value that defines the processing behavior.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.CustomFormatObjectEventArgs.EmptyEntriesMode">
            <summary>
                <para>Returns the <see cref="T:DevExpress.Persistent.Base.EmptyEntriesMode"/> enumeration value that defines the processing behavior.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Persistent.Base.EmptyEntriesMode"/> enumeration value that defines the processing behavior.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CustomFormatObjectEventArgs.FormatString">
            <summary>
                <para>Returns the format string that is being processed.
</para>
            </summary>
            <value>A format string that is being processed.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CustomFormatObjectEventArgs.Object">
            <summary>
                <para>Returns the object whose property values must replace the format items in the format string.
</para>
            </summary>
            <value>An object whose property values must replace the format items in the format string.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CustomFormatObjectEventArgs.Result">
            <summary>
                <para>Returns the resulting string that must be returned by the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method.
</para>
            </summary>
            <value>A resulting string that must be returned by the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.EmptyEntriesMode">

            <summary>
                <para>Specifies the behavior of the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method, when a format item in the string passed to it corresponds to a property that contains a <i>null</i>(<i>Nothing</i> in VB) or empty value.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Persistent.Base.EmptyEntriesMode.Default">
            <summary>
                <para>Considered when a string passed to the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method contains format items that must be replaced by <i>null</i>(<i>Nothing</i> in VB) or empty values.
Specifies that such format items must be simply removed.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Persistent.Base.EmptyEntriesMode.RemoveDelimeterWhenEntryIsEmpty">
            <summary>
                <para>Considered when a string passed to the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method contains format items that must be replaced by the <i>null</i>(<i>Nothing</i> in VB) or empty values.
Specifies that such format items and the delimiter strings that precede them must be removed.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Persistent.Base.ObjectFormatter">

            <summary>
                <para>Represents a string formatter. Exposes the static helper <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method that replaces format items in the specified string with the property values of the specified object.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ObjectFormatter.#ctor">
            <summary>
                <para>Creates an instance of the ObjectFormatter class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Persistent.Base.ObjectFormatter.CustomFormatObject">
            <summary>
                <para>Occurs when the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method is called. Allows you to perform the custom processing of the string passed to the <b>Format</b> method.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Persistent.Base.ObjectFormatter.CustomGetValue">
            <summary>
                <para>Occurs when the <see cref="M:DevExpress.Persistent.Base.ObjectFormatter.Format"/> method processes a format item. Allows you to provide a custom value that will replace the format item in the resulting string.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Persistent.Base.ObjectFormatter.Format(System.String,System.Object)">
            <summary>
                <para>Replaces format items in the specified string with the values of the specified object's properties. Uses the <see cref="T:DevExpress.Persistent.Base.EmptyEntriesMode"/>.Default mode of processing the passed string.
</para>
            </summary>
            <param name="format">
		A string that contains zero or more format items.

            </param>
            <param name="obj">
		An object whose property values are used in the formatting of the passed string.

            </param>
            <returns>A string in which the format items have been replaced by the string representations of the specified object's property values.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.ObjectFormatter.Format(System.String,System.Object,DevExpress.Persistent.Base.EmptyEntriesMode)">
            <summary>
                <para>Replaces format items in the specified string with the values of the specified object's properties. Allows you to specify the <see cref="T:DevExpress.Persistent.Base.EmptyEntriesMode"/> mode of processing the passed string.
</para>
            </summary>
            <param name="format">
		A string that contains zero or more format items.

            </param>
            <param name="obj">
		An object whose property values are used in the formatting of the passed string.

            </param>
            <param name="mode">
		An <see cref="T:DevExpress.Persistent.Base.EmptyEntriesMode"/> enumeration value that specifies the mode of processing the passed string.

            </param>
            <returns>A string in which the format items have been replaced by the string representations of the specified object's property values.
</returns>


        </member>
        <member name="T:DevExpress.Persistent.Base.ParametersFactory">

            <summary>
                <para>Handles the registration and instantiation of read-only parameters.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ParametersFactory.#ctor">
            <summary>
                <para>Creates a new instance of the ParametersFactory class.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Persistent.Base.ParametersFactory.RegistrationErrorText">
            <summary>
                <para>When an attempt to register an already registered read-only parameter in the <see cref="T:DevExpress.Persistent.Base.ParametersFactory"/> is made, an exception is thrown. The <b>RegistrationErrorText</b> specifies the exception's message template.
</para>
            </summary>
            <returns></returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.ParametersFactory.CreateParameter(System.String)">
            <summary>
                <para>Creates an instance of the specified read-only parameter.
</para>
            </summary>
            <param name="parameterName">
		The name of the parameter that must be instantiated.

            </param>
            <returns>An instance of the specified read-only parameter.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.ParametersFactory.GetRegisteredParameterNames">
            <summary>
                <para>Returns a collection that contains the names of the read-only parameters registered in the ParametersFactory.
</para>
            </summary>
            <returns>A collection that contains the names of the read-only parameters registered in the ParametersFactory.

</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.ParametersFactory.RegisterParameter(DevExpress.Persistent.Base.ParameterBase)">
            <summary>
                <para>Registers the specified read-only parameter in the ParametersFactory.
</para>
            </summary>
            <param name="parameter">
		The name of the parameter that must be registered in the ParametersFactory.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant that contains the <b>Delete</b> Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController"/> class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController.Deleting">
            <summary>
                <para>Occurs before deleting objects.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController.AutoCommit">
            <summary>
                <para>Specifies whether to remove objects immediately.
</para>
            </summary>
            <value><b>true</b> if objects are deleted from the database immediately; <b>false</b> if objects are deleted immediately from root Views, and deleted at the next committing of the changes collected by the Object Space, if the object(s) are from a nested View.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController.DeleteAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController"/>'s <b>Delete</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the <b>Delete</b> Action.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Filtering.LocalizedCriteriaWrapper">

            <summary>
                <para>Represents a wrapper class for a <b>CriteriaOperator</b> object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Filtering.LocalizedCriteriaWrapper.#ctor(System.Type,System.String)">
            <summary>
                <para>Creates an instance of the LocalizedCriteriaWrapper class for the specified criterion.
</para>
            </summary>
            <param name="objectsType">
		The type of the objects for which the passed criterion string is constructed.

            </param>
            <param name="criteriaString">
		The string representation of a <b>CriteriaOperator</b> for which the LocalizedCriteriaWrapper instance must be created.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Filtering.LocalizedCriteriaWrapper.#ctor(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates an instance of the LocalizedCriteriaWrapper class for the specified criterion.
</para>
            </summary>
            <param name="objectsType">
		The type of the objects for which the passed <b>CriteriaOperator</b> is constructed.

            </param>
            <param name="criteriaOperator">
		The <b>CriteriaOperator</b> for which the LocalizedCriteriaWrapper instance must be created.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant that contains the <b>Open</b> Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController"/> class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController.CustomProcessSelectedItem">
            <summary>
                <para>Occurs when the <b>Open</b> Action (<see cref="P:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController.ProcessCurrentObjectAction"/>) is about to be executed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController.ListViewShowObjectActionId">
            <summary>
                <para>Specifies the identifier of the <see cref="P:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController.ProcessCurrentObjectAction"/>. By default, it's set to <b>ListViewShowObject</b>.
</para>
            </summary>
            <returns>$
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController.ShowObject(System.Object,DevExpress.ExpressApp.ShowViewParameters,DevExpress.ExpressApp.XafApplication,DevExpress.ExpressApp.Frame,DevExpress.ExpressApp.View)">
            <summary>
                <para>Creates a Detail View for the currently selected object.  Assigns the View to the <see cref="P:DevExpress.ExpressApp.ShowViewParameters.CreatedView"/> property of the passed <b>ShowViewParameters</b> object.
</para>
            </summary>
            <param name="obj">
		An object for which a Detail View must be created.

            </param>
            <param name="showViewParameters">
		A <see cref="T:DevExpress.ExpressApp.ShowViewParameters"/> object used to invoke a Detail View for the specified object.

            </param>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application.

            </param>
            <param name="sourceFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents the Frame whose View contains the specified object.

            </param>
            <param name="sourceView">
		A <see cref="T:DevExpress.ExpressApp.View"/> object that represents the View which contains the specified object.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.ListViewProcessCurrentObjectController.ProcessCurrentObjectAction">
            <summary>
                <para>Provides access to the <b>Open</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the <b>Open</b> Action.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.CriteriaWrapper">

            <summary>
                <para>Represents a wrapper class for a <b>CriteriaOperator</b> object. Exposes helper methods that allow you to work with read-only parameters.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.#ctor(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates an instance of the CriteriaWrapper class for the specified criterion.
</para>
            </summary>
            <param name="objectType">
		The type of the objects for which the passed <b>CriteriaOperator</b> is constructed.

            </param>
            <param name="criteriaOperator">
		The <b>CriteriaOperator</b> for which the CriteriaWrapper instance must be created.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.#ctor(System.Type,System.String)">
            <summary>
                <para>Creates an instance of the CriteriaWrapper class for the specified criterion.
</para>
            </summary>
            <param name="objectType">
		The type of the objects for which the passed criterion string is constructed.

            </param>
            <param name="criteriaString">
		The string representation of a <b>CriteriaOperator</b> for which the CriteriaWrapper instance must be created.

            </param>


        </member>
        <member name="F:DevExpress.Persistent.Base.CriteriaWrapper.ParameterPrefix">
            <summary>
                <para>Returns a prefix used by <b>XAF</b> to detect parameters in a criterion's string representation. By default, it's set to the '<b>@</b>' character.

</para>
            </summary>
            <returns>
</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.GetParameterOperands(DevExpress.Persistent.Base.IParameter)">
            <summary>
                <para>Returns the operand values of the specified parameter from the <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.Parameters"/> list.
</para>
            </summary>
            <param name="parameter">
		The <b>IParameter</b> object that represents the parameter that must be evaluated.

            </param>
            <returns>An array of the <b>OperandValue</b> objects that represent the specified parameter's operand values.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.GetParameterValue(System.Int32)">
            <summary>
                <para>Returns the current value of the specified parameter.
</para>
            </summary>
            <param name="index">
		The zero-based index of the parameter.

            </param>
            <returns>The current value of the specified parameter.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.GetParameterValue(System.String)">
            <summary>
                <para>Returns the current value of the specified parameter.
</para>
            </summary>
            <param name="name">
		The parameter's name.

            </param>
            <returns>The current value of the specified parameter.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.ParseCriteriaWithReadOnlyParameters(System.String,System.Type)">
            <summary>
                <para>Converts a criterion's string representation to an instance of the <a href="http://www.devexpress.com/Help/Content.aspx?help=XtraData@document=clsDevExpressDataFilteringCriteriaOperatortopic.htm">CriteriaOperator</a> (requires Internet connection) class. Allows you to convert a criterion string representation that contains read-only parameters.
</para>
            </summary>
            <param name="criteriaText">
		The string representation of a criterion.

            </param>
            <param name="targetObjectType">
		The type of the objects for which the passed string representation of a criterion is defined.

            </param>
            <returns>An instance of the <b>CriteriaOperator</b> class that represents the passed string criterion.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.TryGetReadOnlyParameterValue(System.Object)">
            <summary>
                <para>Returns the current value of the specified read-only parameter.
</para>
            </summary>
            <param name="value">
		An object that can be cast to the <b>string</b> type to get the parameter's name prefixed by the <see cref="F:DevExpress.Persistent.Base.CriteriaWrapper.ParameterPrefix"/>. In the simplest case, a string that represents a parameter's name prefixed by the parameter prefix.


            </param>
            <returns>The specified parameter's current value.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.UpdateParametersValues">
            <summary>
                <para>Refreshes the values of the parameters used in the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/>.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator">
            <summary>
                <para>Returns the <b>CriteriaOperator</b> object for which the CriteriaWrapper instance is constructed.

</para>
            </summary>
            <value>The <b>CriteriaOperator</b> object for which the CriteriaWrapper instance is constructed.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CriteriaWrapper.EditableParameters">
            <summary>
                <para>Returns the <b>ParameterList</b> dictionary of editable parameters used in the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/>.
</para>
            </summary>
            <value>The <b>ParameterList</b> dictionary of editable parameters used in the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CriteriaWrapper.HasVisibleParameters">
            <summary>
                <para>Indicates whether editable parameters are used in the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/>. 
</para>
            </summary>
            <value>Returns <b>true</b> if the current CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/> contains parameters with the <b>IParameter.Visible</b> property set to <b>true</b>. Otherwise, returns <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CriteriaWrapper.ObjectsType">
            <summary>
                <para>Returns the type of objects for which the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/> is constructed.
</para>
            </summary>
            <value>The type of objects for which the current CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/> is constructed.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CriteriaWrapper.Parameters">
            <summary>
                <para>Returns the list of the parameters used in the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/>.
</para>
            </summary>
            <value>The list of <b>IParameter</b> objects used in the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/>.

</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CriteriaWrapper.PropertyNames">
            <summary>
                <para>Returns the enumerator that allows you to iterate over the collection of property names used in the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/>.

</para>
            </summary>
            <value>The <b>IEnumerable@lt;string@gt;</b> object that allows you to iterate over the property names used in the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/>.

</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.CriteriaWrapper.ObjectType">
            <summary>
                <para>Returns the type of objects for which the CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/> is constructed.
</para>
            </summary>
            <value>The type of objects for which the current CriteriaWrapper's <see cref="P:DevExpress.Persistent.Base.CriteriaWrapper.CriteriaOperator"/> is constructed.
</value>


        </member>
        <member name="M:DevExpress.Persistent.Base.CriteriaWrapper.#ctor(System.Type,System.String,System.Boolean)">
            <summary>
                <para>Creates an instance of the CriteriaWrapper class for the specified criterion.
</para>
            </summary>
            <param name="objectType">
		The type of the objects for which the passed <b>CriteriaOperator</b> is constructed.

            </param>
            <param name="criteriaString">
		The string representation of a <b>CriteriaOperator</b> for which the CriteriaWrapper instance must be created.

            </param>
            <param name="updateParameters">
		A Boolean value that specifies whether the <see cref="M:DevExpress.Persistent.Base.CriteriaWrapper.UpdateParametersValues"/> method must be called after an instance of the <b>CriteriaWrapper</b> has been created. <b>true</b> to call the <b>UpdateParametersValues</b> method; otherwise <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.ListEditor">

            <summary>
                <para>Represents a base class for List Editors.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.ControlsCreated">
            <summary>
                <para>Occurs after a ListEditor's control is created.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.DataSourceChanged">
            <summary>
                <para>Occurs after the <see cref="P:DevExpress.ExpressApp.Editors.ListEditor.DataSource"/> property's value has been changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.FocusedObjectChanged">
            <summary>
                <para>Occurs after the focused object has been changed in a List Editor's control.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.FocusedObjectChanging">
            <summary>
                <para>Occurs before the focused object is changed in a List Editor's control.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.NewObjectAdding">
            <summary>
                <para>Occurs before a new object is created in a List Editor.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.NewObjectCanceled">
            <summary>
                <para>Occurs after creation of a new object is cancelled in a List Editor.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.NewObjectCreated">
            <summary>
                <para>Occurs after a new object has been created in a List Editor.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.ObjectChanged">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.ProcessSelectedItem">
            <summary>
                <para>Occurs after an object is selected in the List Editor's control and an end-user presses Enter or double-clicks the object.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.RequiredPropertiesChanged">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.SelectionChanged">
            <summary>
                <para>Occurs after the selection has been changed in a List Editor's control.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.SelectionTypeChanged">
            <summary>
                <para>Occurs after a List Editor's supported selection type is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.ShownPropertiesChanged">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.BreakLinksToControls">
            <summary>
                <para>Removes references to the ListEditor's control and its event handlers.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.CreateControls">
            <summary>
                <para>Creates the current List Editor's control that represents a List View in a UI.
</para>
            </summary>
            <returns>An object which represents the current List Editor's control. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.DataBind">
            <summary>
                <para>This method is not used in XAF any more.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.Dispose">
            <summary>
                <para>Releases all resources used by a ListEditor object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.GetSelectedObjects">
            <summary>
                <para>Provides access to the collection of objects that are currently selected in the List Editor's control.
</para>
            </summary>
            <returns>A list of the selected objects.
</returns>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.EditModeChanged">
            <summary>
                <para>Occurs after the ListEditor's <see cref="P:DevExpress.ExpressApp.Editors.ListEditor.EditMode"/> property has changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.GetVisibleProperties">
            <summary>
                <para>This method is obsolete. Use the <see cref="P:DevExpress.ExpressApp.Editors.ListEditor.ShownProperties"/> and <see cref="P:DevExpress.ExpressApp.Editors.ListEditor.RequiredProperties"/> properties instead.
</para>
            </summary>
            <returns>A list of property names.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.OnRequiredPropertiesChanged">
            <summary>
                <para>Raises the <see cref="E:DevExpress.ExpressApp.Editors.ListEditor.RequiredPropertiesChanged"/> event.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.OnShownPropertiesChanged">
            <summary>
                <para>Raises the <see cref="E:DevExpress.ExpressApp.Editors.ListEditor.ShownPropertiesChanged"/> event.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.Refresh">
            <summary>
                <para>Refreshes the bound data source of a List Editor's control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.StartIncrementalSearch(System.String)">
            <summary>
                <para>Starts an incremental search for the specified string. 
</para>
            </summary>
            <param name="searchString">
		The text to locate.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.ListEditor.SynchronizeInfo">
            <summary>
                <para>Writes information on a List Editor's control to the Application Model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.ContextMenuTemplate">
            <summary>
                <para>Provides access to a List Editor's Context Menu Template.
</para>
            </summary>
            <value>A control which implements the <b>IContextMenuTemplate</b> interface and represents a List Editor's Context Menu Template.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.Control">
            <summary>
                <para>Provides access to the control that is used by the current List Editor to represent a List View in a UI.
</para>
            </summary>
            <value>An object which represents the current List Editor's control. 
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.DataSource">
            <summary>
                <para>Specifies a List Editor's data source.
</para>
            </summary>
            <value>An <b>IList</b> collection that contains the objects displayed by the List Editor's control.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.EditMode">
            <summary>
                <para>Gets or sets the edit mode of the List Editor.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.EditMode"/> enumeration value that represents the edit mode of the current List Editor. The default value is specified by the <b>EditMode</b> attribute of the Application Model's Application Node | Views Node | <b>ListView</b> node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.ErrorMessages">
            <summary>
                <para>Provides access to the current ListEditor's error message collection, populated when Validation Rules are broken.

</para>
            </summary>
            <value>An <b>ErrorMessages</b> object which is used to access the messages about currently broken Validation Rules.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.FocusedObject">
            <summary>
                <para>Gets or sets the focused object in a List Editor.
</para>
            </summary>
            <value>The focused object.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.IsDisposed">
            <summary>
                <para>Indicates whether a List Editor has been disposed of.
</para>
            </summary>
            <value><b>true</b> if the current List Editor has been disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.Model">
            <summary>
                <para>Provides access to the wrapper of the Application Model node that defines the List View represented by the current List Editor.
</para>
            </summary>
            <value>A <b>ListViewInfoNodeWrapper</b> object that allows you to access the List View settings stored in the Application Model.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.Name">
            <summary>
                <para>Specifies a List Editor's name.
</para>
            </summary>
            <value>A <b>String</b> value representing the current List Editor's name.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.ProcessSelectedItemAction">
            <summary>
                <para>Specifies an Action which is executed when an object is selected in the current List Editor's control and an end-user presses Enter or double-clicks the object.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object representing an Action. 
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.ProtectedContentText">
            <summary>
                <para>Specifies the text that is used by a List Editor to display a property which is prohibited for viewing to the current end-user.
</para>
            </summary>
            <value>A <b>string</b> value that represents text to be displayed by a List Editor if a user doesn't have permission to view an object's property. The default value is specified by the <b>ProtectedContentText</b> attribute of the Application Model's <b>Application</b> node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.RequiredProperties">
            <summary>
                <para>Returns an array of descriptors for the properties considered bindable by the List Editor's Collection Source.
</para>
            </summary>
            <value>An array of descriptors for the properties considered bindable by the List Editor's Collection Source.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.SelectionType">
            <summary>
                <para>Returns the selection type supported by the current List Editor.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.SelectionType"/> enumeration value that represents the selection type supported by the current List Editor.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.ShownProperties">
            <summary>
                <para>Returns a list of property names that are used in Lookup Property Editors when searching an object.
</para>
            </summary>
            <value>A list of the property names used in building search criteria.



</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.ListEditor.SupportSelection">
            <summary>
                <para>Returns the selection type supported by the current List Editor.

</para>
            </summary>
            <value>A <b>SupportSelectionType</b> enumeration value that represents the selection type supported by the current List Editor.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.ListEditor.ValidateObject">
            <summary>
                <para>Occurs when the object represented by the ListEditor's focused row must be validated.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.PropertyEditorAttribute">

            <summary>
                <para>Specifies the data type for which the target Property Editor is designed.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditorAttribute.#ctor(System.Type,System.Boolean)">
            <summary>
                <para>Creates an instance of the PropertyEditorAttribute class, initializing the <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditorAttribute.PropertyType"/> and <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditorAttribute.DefaultEditor"/> properties.
</para>
            </summary>
            <param name="propertyType">
		A type of the property for which the target Property Editor is designed.

            </param>
            <param name="defaultEditor">
		<b>true</b> if the target Property Editor should be used for the properties of the specified type by default; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditorAttribute.#ctor(System.Type)">
            <summary>
                <para>Creates an instance of the PropertyEditorAttribute class, initializing the <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditorAttribute.PropertyType"/> property.
</para>
            </summary>
            <param name="propertyType">
		The type of properties for which the target Property Editor is designed.


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditorAttribute.#ctor">
            <summary>
                <para>Creates an instance of the PropertyEditorAttribute class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditorAttribute.DefaultEditor">
            <summary>
                <para>Indicates whether the target Property Editor should be automatically used for the properties of the specified type.
</para>
            </summary>
            <value><b>true</b> if the target Property Editor should be used for the properties of the specified type by default; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditorAttribute.PropertyType">
            <summary>
                <para>Specifies the type of properties that the target Property Editor can display.

</para>
            </summary>
            <value>The type of properties for which the target Property Editor is designed.

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.PropertyEditor">

            <summary>
                <para>Represents a base class for Property Editors.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.Editors.PropertyEditor.ControlModified">
            <summary>
                <para>Occurs after the current Property Editor's control value has changed.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.PropertyEditor.ControlValueChanged">
            <summary>
                <para>In the PropertyEditor class's descendants, can be raised after the control's value has been changed.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.PropertyEditor.ReadOnlyChanged">
            <summary>
                <para>Occurs after changing a Property Editor's <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditor.ReadOnly"/> state.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.PropertyEditor.ValueRead">
            <summary>
                <para>Occurs after the property value has been read to the current Property Editor's control.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.PropertyEditor.ValueStored">
            <summary>
                <para>Occurs after the value of the Property Editor's control is set for the bound property.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.PropertyEditor.ValueStoring">
            <summary>
                <para>Occurs before the value of the Property Editor's control is set for the bound property.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditor.ReadValue">
            <summary>
                <para> Reads a value to the current Property Editor's control.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditor.Refresh">
            <summary>
                <para>Refreshes the current Property Editor's control value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditor.RemoveReadOnlyItem(System.String)">
            <summary>
                <para>Removes a specified item from a Property Editor's <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditor.ReadOnly"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents the key of the <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditor.ReadOnly"/> collection item to be removed.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditor.SetReadOnlyByKey(System.String,System.Boolean)">
            <summary>
                <para>Adds an item to the <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditor.ReadOnly"/> collection of the current Property Editor to make it read-only or editable.

</para>
            </summary>
            <param name="key">
		A string value that specifies the reason for making the current Property Editor read-only or editable.

            </param>
            <param name="value">
		A Boolean value that indicates whether to make the current Property Editor read-only.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditor.WriteValue">
            <summary>
                <para>Sets the value that is specified in the current Property Editor's control for the bound property.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.Caption">
            <summary>
                <para>Returns the current Property Editor's caption.
</para>
            </summary>
            <value>A string value representing the current Property Editor's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.ControlValue">
            <summary>
                <para>Returns the value that is set to the current Property Editor's control.
</para>
            </summary>
            <value>An object representing the value that is set in the current Property Editor's control.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.DisplayFormat">
            <summary>
                <para>Specifies the pattern for formatting values of the current Property Editor.
</para>
            </summary>
            <value>A string representing the format pattern.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.EditMask">
            <summary>
                <para>Specifies a mask expression for the current Property Editor's control.
</para>
            </summary>
            <value>A string value representing a mask expression for the current Property Editor' control.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.EditMaskType">
            <summary>
                <para>Specifies the type of the mask used to format the current Property Editor's property values.
</para>
            </summary>
            <value>An <b>EditMaskType</b> enumeration value used to determine the type of mask specified by the <see cref="P:DevExpress.ExpressApp.Editors.PropertyEditor.EditMask"/> property.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.ErrorMessage">
            <summary>
                <para>Specifies the message about validation rules broken because of the current Property Editor's bound property.


</para>
            </summary>
            <value>A string value representing the text shown in the Property Editor's tooltip when a validation rule is broken.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.Id">
            <summary>
                <para>Gets the identifier of the current Property Editor.
</para>
            </summary>
            <value>A string value representing the current Property Editor's identifier.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.ImmediatePostData">
            <summary>
                <para>Specifies whether the property value is updated immediately when changes occur in the current Property Editor's bound control.

</para>
            </summary>
            <value><b>true</b> if the data source should be updated whenever the value of the Property Editor's control changes; <b>false</b> if it should be updated after the control value is validated.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.IsCaptionVisible">
            <summary>
                <para>Indicates whether the caption of the current Property Editor should be visible in a UI.
</para>
            </summary>
            <value><b>true</b> if the current Property's caption is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.IsPassword">
            <summary>
                <para>Specifies whether the current Property Editor represents a password.

</para>
            </summary>
            <value><b>true</b> if the current Property Editor's value represents a password; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.MaxLength">
            <summary>
                <para>Specifies the maximum length that the current Property Editor's value can have.
</para>
            </summary>
            <value>A positive integer value specifying the maximum number of characters end users can enter.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.PropertyName">
            <summary>
                <para>Specifies the name of the property that is represented by the current Property Editor.
</para>
            </summary>
            <value>A string value representing the name of the property bound to the current Property Editor.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.PropertyValue">
            <summary>
                <para>Specifies the value of the property represented by the current Property Editor.
</para>
            </summary>
            <value>An object representing the current value of the Property Editor's bound property.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.ReadOnly">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make the current Property Editor read-only/editable, or determine its read-only state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.ReadOnlyList">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make the current Property Editor read-only/editable, or determine its read-only state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.MemberDescriptor">
            <summary>
                <para>Provides access to the <b>IMemberInfo</b> object that contains information on the property represented by the current Property Editor.
</para>
            </summary>
            <value>A <b>IMemberInfo</b> object providing full information on the property represented by the current Property Editor.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.MemberInfo">
            <summary>
                <para>Provides access to the <b>IMemberInfo</b> object that contains information on the property represented by the current Property Editor.
</para>
            </summary>
            <value>A <b>IMemberInfo</b> object providing full information on the property represented by the current Property Editor.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.PropertyEditor.GetUnderlyingType">
            <summary>
                <para>Specifies the underlying type of the property represented by the current Property Editor.
</para>
            </summary>
            <returns>A <b>System.Type</b> object representing the underlying type of the property represented by the current Property Editor.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.PropertyEditor.AllowNull">
            <summary>
                <para>Indicates whether a property represented by the current Property Editor can be set to <b>null</b> (<i>Nothing</i> in VB).
</para>
            </summary>
            <value><b>true</b> if the property is a reference property or a nullable type property; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.DetailViewItem">

            <summary>
                <para>Represents a base class for Detail View Items.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.Editors.DetailViewItem.ControlCreated">
            <summary>
                <para>Occurs after a control has been created for the current Detail View Item.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.DetailViewItem.ControlCreating">
            <summary>
                <para>Occurs before a control is created for the current Detail View Item.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.DetailViewItem.BreakLinksToControl(System.Boolean)">
            <summary>
                <para>Disposes the current Detail View Item's control, or simply unsubscribes the events, dependent on the passed parameter value.

</para>
            </summary>
            <param name="unwireEventsOnly">
		<b>true</b> if only the events should be unsubscribed; <b>false</b>, if the control should be disposed. 


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.DetailViewItem.CreateControl">
            <summary>
                <para>Creates a control that represents the current Detail View Item in a UI.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.DetailViewItem.DataBind">
            <summary>
                <para>This method is not used in XAF any more.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.DetailViewItem.Dispose">
            <summary>
                <para>Releases all resources used by this DetailViewItem object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.DetailViewItem.Refresh">
            <summary>
                <para>Refreshes the current Detail View Item.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.DetailViewItem.RefreshControlValue">
            <summary>
                <para>Refreshes the current Detail View Item.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Editors.DetailViewItem.SynchronizeInfo">
            <summary>
                <para>Saves the required information on the current state of the Detail View Item to the Application Model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.Caption">
            <summary>
                <para>Returns the current Detail View Item's caption.
</para>
            </summary>
            <value>A string value representing the current Detail View Item's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.Control">
            <summary>
                <para>Provides access to the control that represents the current Detail View Item in a UI.
</para>
            </summary>
            <value>An object that represents a control used to display the current Detail View Item in a UI.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.CurrentObject">
            <summary>
                <para>Specifies the object for which the current Detail View Item's View is created.
</para>
            </summary>
            <value>An object represented by the View where the current Detail View Item is contained.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.Id">
            <summary>
                <para>Gets the identifier of the current Detail View Item.
</para>
            </summary>
            <value>A string value representing the current Detail View Item's identifier.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.Info">
            <summary>
                <para>Returns the Application Model's Views | <b>DetailView</b> | <b>Items</b> | <b>DetailViewItem</b> node that defines the current Detail View Item.
</para>
            </summary>
            <value>A <b>DictionaryNode</b> object that represents the Application Model's node defining the current Detail View Item.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.IsCaptionVisible">
            <summary>
                <para>Indicates whether the caption of the current Detail View Item should be visible.
</para>
            </summary>
            <value><b>true</b> if the current Detail View Item's caption is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.ObjectType">
            <summary>
                <para>Specifies the type of object for which the current Detail View Item's View is created.

</para>
            </summary>
            <value>The type of the business object that is represented by the View where the current Detail View Item is contained.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.View">
            <summary>
                <para>Specifies the Detail View that contains the current Detail View Item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.DetailView"/> object representing the Detail View where the current Detail View Item is created.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.DetailViewItem.CurrentObjectChanged">
            <summary>
                <para>Occurs after changing the object for which the current Detail View Item's View is created. 
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Editors.DetailViewItem.CurrentObjectChanging">
            <summary>
                <para>Occurs before changing the object for which the current Detail View Item's View is created. 
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Editors.DetailViewItem.ObjectTypeInfo">
            <summary>
                <para>Provides access to the information on the type of the object which is represented by the current Detail View Item's View.
</para>
            </summary>
            <value>An <b>ItypeInfo</b> object representing information on the type of the business object which is represented by the current Detail View Item's <b>View</b>.

</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.VisibleInReportsAttribute">

            <summary>
                <para>Specifies whether end-users can create reports on objects of the required class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.VisibleInReportsAttribute.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the VisibleInReportsAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.VisibleInReportsAttribute.IsVisible"/> property.
</para>
            </summary>
            <param name="isVisible">
		<b>true</b> if an item should be added to the Data Type drop-down list in the New Report Wizard dialog; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.VisibleInReportsAttribute.#ctor">
            <summary>
                <para>Initializes a new instance of the VisibleInReportsAttribute class with default settings. 
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.Base.VisibleInReportsAttribute.IsVisible">
            <summary>
                <para> Specifies whether an item is added to the Data Type drop-down list in the New Report Wizard dialog.
</para>
            </summary>
            <value><b>true</b> if an item should be added to the Data Type drop-down list in the New Report Wizard dialog; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.VisibleInLookupListViewAttribute">

            <summary>
                <para>Specifies whether the column that corresponds to the target business class property is initially visible in a Lookup Property Editor's List View.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.VisibleInLookupListViewAttribute.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the VisibleInLookupListViewAttribute class.
</para>
            </summary>
            <param name="value">
		<b>true</b> if a column that corresponds to the target business class property is initially visible in a Lookup Property Editor's List View; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Persistent.Base.VisibleInListViewAttribute">

            <summary>
                <para>Specifies whether the column that corresponds to the target business class property is initially visible in a List View.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.VisibleInListViewAttribute.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the VisibleInListViewAttribute class.
</para>
            </summary>
            <param name="value">
		<b>true</b> if a column that corresponds to the target business class property is initially visible in a List View; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Persistent.Base.ObjectCaptionFormatAttribute">

            <summary>
                <para>Specifies a caption format for the target business class' objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ObjectCaptionFormatAttribute.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ObjectCaptionFormatAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.ObjectCaptionFormatAttribute.FormatString"/> property.
</para>
            </summary>
            <param name="formatString">
		A string value that represents a format string for the target business object's caption.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.ObjectCaptionFormatAttribute.FormatString">
            <summary>
                <para>Returns a caption format for the target business class' objects.
</para>
            </summary>
            <value>A string value that represents a format for the target business object's caption.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.NavigationItemAttribute">

            <summary>
                <para>Specifies whether a class will have a corresponding item in the navigation control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.NavigationItemAttribute.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the NavigationItemAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.NavigationItemAttribute.GroupName"/> property.
</para>
            </summary>
            <param name="groupName">
		A string value that represents the name of the group within the navigation control to which an item will be added.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.NavigationItemAttribute.#ctor">
            <summary>
                <para>Initializes a new instance of the NavigationItemAttribute class with default settings. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Persistent.Base.NavigationItemAttribute.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the NavigationItemAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.NavigationItemAttribute.IsNavigationItem"/> property.
</para>
            </summary>
            <param name="isNavigationItem">
		<b>true</b> if an item should be added to the navigation control; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.NavigationItemAttribute.DefaultGroupName">
            <summary>
                <para>Specifies the name of the default group in the navigation control to which the required item is added.
</para>
            </summary>
            <value>A string value representing the default navigation group name.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.NavigationItemAttribute.GroupName">
            <summary>
                <para>Specifies the name of the navigation group to which an item corresponding to the required business class is added.
</para>
            </summary>
            <value>A string value which represents the name of the group within the navigation control.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.NavigationItemAttribute.IsNavigationItem">
            <summary>
                <para>Specifies whether an item is added to the navigation control on the main window.
</para>
            </summary>
            <value><b>true</b> if an item should be added to the navigation control; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.LookupEditorModeAttribute">

            <summary>
                <para>Specifies the mode of the target business class property's Lookup Property Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.LookupEditorModeAttribute.#ctor(DevExpress.Persistent.Base.LookupEditorMode)">
            <summary>
                <para>Initializes a new instance of the LookupEditorModeAttribute class and sets the <see cref="P:DevExpress.Persistent.Base.LookupEditorModeAttribute.Mode"/> property.
</para>
            </summary>
            <param name="mode">
		A <b>LookupEditorMode</b> enumeration value representing a display mode of the target property's Lookup Property Editor.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.LookupEditorModeAttribute.Mode">
            <summary>
                <para>Specifies the mode of the target business class property's Lookup Property Editor. 

</para>
            </summary>
            <value>A <b>LookupEditorMode</b> enumeration value representing a display mode of the target property's Lookup Property Editor.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.ImmediatePostDataAttribute">

            <summary>
                <para>Indicates the refresh behavior for a business class property.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ImmediatePostDataAttribute.#ctor">
            <summary>
                <para>Initializes a new instance of the ImmediatePostDataAttribute class.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Persistent.Base.ImageNameAttribute">

            <summary>
                <para>Specifies the name of the image that is displayed for the target class' objects both in detail forms, and corresponding items in the navigation control and <b>New</b> Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ImageNameAttribute.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ImageNameAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.ImageNameAttribute.ImageName"/> property.
</para>
            </summary>
            <param name="imageName">
		A string value representing a name of the image to be associated with the target business class' objects.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.ImageNameAttribute.ImageName">
            <summary>
                <para>Specifies the name of the image that will be associated with the target business class' objects.

</para>
            </summary>
            <value>A string value representing the name of the image to be associated with the target business class' objects.

</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.FriendlyKeyPropertyAttribute">

            <summary>
                <para>Specifies the property which is considered an analog of the <b>GUID</b> property, to allow use of more suitable values.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.FriendlyKeyPropertyAttribute.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the FriendlyKeyPropertyAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.FriendlyKeyPropertyAttribute.MemberName"/> property.
</para>
            </summary>
            <param name="memberName">
		A string that represents the name of an identifier-like persistent property.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.FriendlyKeyPropertyAttribute.MemberName">
            <summary>
                <para>Indicates the persistent property which the system uses as an identifier-like property.
</para>
            </summary>
            <value>A string that represents the name of an identifier-like persistent property.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.ExpandObjectMembersAttribute">

            <summary>
                <para>Specifies whether the target reference property will be displayed via a Lookup Property Editor or several Property Editors that correspond to the referenced type's properties.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.#ctor(DevExpress.Persistent.Base.ExpandObjectMembers)">
            <summary>
                <para>Initializes a new instance of the ExpandObjectMembersAttribute class and sets the <see cref="P:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.ExpandingMode"/> property.
</para>
            </summary>
            <param name="expandingMode">
		An <b>ExpandObjectMembers</b> enumeration value. This value is set for the <see cref="P:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.ExpandingMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the ExpandObjectMembersAttribute class and sets the <see cref="P:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.Value"/> property.
</para>
            </summary>
            <param name="value">
		<b>true</b> if an <b>Object</b> type property will be displayed via several Property Editors that correspond to the referenced type's properties; <b>false</b> if an <b>Object</b> type property will be displayed via a Lookup Property Editor.

            </param>


        </member>
        <member name="F:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.AggregatedObjectMembersDefaultExpandingMode">
            <summary>
                <para>Specifies the display mode of aggregated reference properties when the <see cref="T:DevExpress.Persistent.Base.ExpandObjectMembersAttribute"/> is not applied. By default, this field value is set to <b>InDetailView</b>, which means that the referenced property will be displayed via separate editors in Detail Views, and via the Lookup Property Editor in List Views.

</para>
            </summary>
            <returns>$
</returns>


        </member>
        <member name="P:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.DefaultExpandAggregatedObjectMembers">
            <summary>
                <para>This constant is obsolete. Use the <see cref="F:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.AggregatedObjectMembersDefaultExpandingMode"/> constant instead.
</para>
            </summary>
            <value>$
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.ExpandingMode">
            <summary>
                <para>Specifies whether to display the target reference property via separate Property Editors presenting the referenced type's properties in List Views and / or Detail Views, or via the Lookup Property Editor.
</para>
            </summary>
            <value>An <b>ExpandObjectMembers</b> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ExpandObjectMembersAttribute.Value">
            <summary>
                <para>Specifies whether the target reference property will be displayed via a Lookup Property Editor, or several Property Editors that correspond to the referenced type's properties.

</para>
            </summary>
            <value><b>true</b> if the target reference property will be displayed via several Property Editors that correspond to the referenced type's properties in Detail Views; <b>false</b> if the property will be displayed via a Lookup Property Editor in Detail and List Views.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.DetailViewCaptionFormatAttribute">

            <summary>
                <para>Specifies a caption format for the target business class' objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.DetailViewCaptionFormatAttribute.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the DetailViewCaptionFormatAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.ObjectCaptionFormatAttribute.FormatString"/> property.
</para>
            </summary>
            <param name="formatString">
		A string value that represents a format string for the target business object's caption.

            </param>


        </member>
        <member name="T:DevExpress.Persistent.Base.DefaultClassOptionsAttribute">

            <summary>
                <para>Sets default options for a class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.DefaultClassOptionsAttribute.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Persistent.Base.CreatableItemAttribute"/> class with default settings. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Persistent.Base.DataSourcePropertyAttribute">

            <summary>
                <para>Specifies the business class collection property that serves as the data source for the target reference business class property. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.DataSourcePropertyAttribute.#ctor(System.String,DevExpress.Persistent.Base.DataSourcePropertyIsNullMode,System.String)">
            <summary>
                <para>Initializes a new instance of the DataSourcePropertyAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty"/>, <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourcePropertyIsNullMode"/> and <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourcePropertyIsNullCriteria"/> properties.
</para>
            </summary>
            <param name="dataSourceProperty">
		A string value representing the name of a business class collection property which serves as a source for the Lookup Property Editor of the target Object type business class property.

            </param>
            <param name="dataSourcePropertyIsNullMode">
		The <b>DataSourcePropertyIsNullMode.CustomCriteria</b> enumeration value representing the display mode for the target property's Lookup Property Editor, in case the <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty"/> is not specified.


            </param>
            <param name="dataSourcePropertyIsNullCriteria">
		A string value representing criteria for filtering the List View of the target property's Lookup Property Editor in case the <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty"/> is not specified.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.DataSourcePropertyAttribute.#ctor(System.String,DevExpress.Persistent.Base.DataSourcePropertyIsNullMode)">
            <summary>
                <para>Initializes a new instance of the DataSourcePropertyAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty"/> and <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourcePropertyIsNullMode"/> properties.
</para>
            </summary>
            <param name="dataSourceProperty">
		A string value representing the name of a business class collection property, which serves as a source for the Lookup Property Editor of the target Object type business class property.


            </param>
            <param name="mode">
		A <b>DataSourcePropertyIsNullMode</b> enumeration value representing the display mode for the target property's Lookup Property Editor, in case the <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty"/> is not specified.


            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.DataSourcePropertyAttribute.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the DataSourcePropertyAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty"/> property.
</para>
            </summary>
            <param name="dataSourceProperty">
		A string value representing the name of a business class collection property which serves as a source for the Lookup Property Editor of the target Object type business class property.


            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty">
            <summary>
                <para>Returns a name of a business class collection property, serving as a source for the Lookup Property Editor of the target Object type business class property.

</para>
            </summary>
            <value>A string value representing the name of the source collection property for the target Object type property.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourcePropertyIsNullCriteria">
            <summary>
                <para>Indicates criteria for filtering the List View of the target property's Lookup Property Editor, in case the <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty"/> is not specified.

</para>
            </summary>
            <value>A string value that represents criteria for filtering the List View of the target property's Lookup Property Editor.

</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourcePropertyIsNullMode">
            <summary>
                <para>Indicates the display mode for the target property's Lookup Property Editor, in case the <see cref="P:DevExpress.Persistent.Base.DataSourcePropertyAttribute.DataSourceProperty"/> is not specified.

</para>
            </summary>
            <value>A <b>DataSourcePropertyIsNullMode</b> enumeration value that represents a display mode for the target property's Lookup Property Editor.

</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.DataSourceCriteriaAttribute">

            <summary>
                <para>Specifies the criteria according to which a List View in an <b>Object</b> type property's Lookup Property Editor is filtered.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.DataSourceCriteriaAttribute.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the DataSourceCriteriaAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.DataSourceCriteriaAttribute.DataSourceCriteria"/> property.
</para>
            </summary>
            <param name="dataSourceCriteria">
		A string value representing criteria for filtering the List View of the target Object type property's Lookup Property Editor.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.DataSourceCriteriaAttribute.DataSourceCriteria">
            <summary>
                <para>Returns criteria for filtering the List View of the target Object type property's Lookup Property Editor.
</para>
            </summary>
            <value>A string value that represents a criteria for filtering a Lookup Property Editor's List View.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.CreatableItemAttribute">

            <summary>
                <para>Specifies whether a class will have a corresponding item in the <b>New</b> Action's item list.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.CreatableItemAttribute.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the CreatableItemAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.CreatableItemAttribute.IsCreatableItem"/> property.

</para>
            </summary>
            <param name="isCreatableItem">
		<b>true</b> if an item should be added to the <b>New</b> Action's item list; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.CreatableItemAttribute.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Persistent.Base.CreatableItemAttribute"/> class with default settings. 

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.Base.CreatableItemAttribute.IsCreatableItem">
            <summary>
                <para>Specifies whether an item is added to the New Action's item list.
</para>
            </summary>
            <value><b>true</b> if an item should be added to the <b>New</b> Action's item list; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.BackColorAttribute">

            <summary>
                <para>Specifies a background color for a business class' Detail and List Views in an ASP.NET Web application.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.BackColorAttribute.#ctor(System.Drawing.KnownColor)">
            <summary>
                <para>Initializes a new instance of the BackColorAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.BackColorAttribute.KnownColor"/> property.
</para>
            </summary>
            <param name="knownColor">
		A <b>System.Drawing.KnownColor</b> enumeration value specifying a color for the target business class' List and Detail Views.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.Base.BackColorAttribute.KnownColor">
            <summary>
                <para>Returns the color used for the <b>BackColor</b> attribute's target class in an ASP.NET application.
</para>
            </summary>
            <value>A <b>System.Drawing.KnownColor</b> enumeration value specifying a color for the target business class' List and Detail Views.
</value>


        </member>
        <member name="T:DevExpress.Persistent.Base.ActionAttribute">

            <summary>
                <para>Converts a persistent class method into a SimpleAction.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.Base.ActionAttribute.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ActionAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.ActionAttribute.Category"/> property.
</para>
            </summary>
            <param name="category">
		A string value which is assigned to the <see cref="P:DevExpress.Persistent.Base.ActionAttribute.Category"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.ActionAttribute.#ctor(DevExpress.Persistent.Base.PredefinedCategory)">
            <summary>
                <para>Initializes a new instance of the ActionAttribute class with the specified <see cref="P:DevExpress.Persistent.Base.ActionAttribute.Category"/> property.
</para>
            </summary>
            <param name="category">
		A <b>PredefinedCategory</b> enumeration value whose string representation is assigned to the <see cref="P:DevExpress.Persistent.Base.ActionAttribute.Category"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.Base.ActionAttribute.#ctor">
            <summary>
                <para>Initializes a new instance of the ActionAttribute class with default settings. 
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.AutoCommit">
            <summary>
                <para>Specifies whether to commit the changes made to data when the <b>Action</b> attribute's target method is executed.
</para>
            </summary>
            <value><b>true</b> if data changes are to be commited; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.Caption">
            <summary>
                <para>Specifies the caption for the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value>A string value that represents a caption for the Simple Action to be generated.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.Category">
            <summary>
                <para>Specifies the category for the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value>A string value that represent the category for the Action to be generated.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.ConfirmationMessage">
            <summary>
                <para>Specifies the confirmation message that will be invoked when an end-user executes the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value>A string value which represents the text of the message that will be displayed before calling the <b>Action</b> attribute's target method.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.EnablingCriteria">
            <summary>
                <para>Specifies the criteria for enabling the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value>A string value that represents a criteria for enabling the Simple Action to be generated.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.ImageName">
            <summary>
                <para>Specifies the name of the image for the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value>A string value that represents the name of the mage for the Simple Action to be generated.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.MultipleObjects">
            <summary>
                <para>Specifies a context for enabling the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value><b>true</b> if the Action is enabled when one or more objects are selected in the current View; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.SelectionDependencyType">
            <summary>
                <para>Specifies a context for enabling the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value>A <b>MethodActionSelectionDependencyType</b> enumeration value identifying a context type.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.TargetObjectsCriteria">
            <summary>
                <para>Specifies the criteria for enabling the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value>A string value that represents a criteria for enabling the Simple Action to be generated.
</value>


        </member>
        <member name="P:DevExpress.Persistent.Base.ActionAttribute.ToolTip">
            <summary>
                <para>Specifies the tooltip for the generated <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/>.
</para>
            </summary>
            <value>A string value that represents a tooltip for the Simple Action to be generated.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Security.ObjectAccess">

            <summary>
                <para>Contains values specifying access levels to an object.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Security.ObjectAccess.AllAccess">
            <summary>
                <para>Represents an access level to an object that includes reading, writing, creating, deleting and navigating via a navigation control. Its index is 31.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ObjectAccess.ChangeAccess">
            <summary>
                <para>Represents an access level to an object that includes writing, creating and deleting. Its index is 14.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ObjectAccess.Create">
            <summary>
                <para>Represents an access level that allows a user to create an object. Its index is 4.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ObjectAccess.Delete">
            <summary>
                <para>Represents an access level that allowsa user to delete an object. Its index is 8.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ObjectAccess.NoAccess">
            <summary>
                <para>Represents an access level that doesn't allow anything. Its index is 0.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ObjectAccess.Read">
            <summary>
                <para>Represents an access level that allows a user to read an object. Its index is 1.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ObjectAccess.Write">
            <summary>
                <para>Represents an access level that allows a user to write an object. Its index is 2.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Security.ObjectAccess.Navigate">
            <summary>
                <para>Represents an access level that allows a user to navigate to a View using the navigation control in the main window. Its index is 16.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.RecordsNavigationController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant, that contains the <b>Previous Object</b> and <b>Next Object</b> Actions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.RecordsNavigationController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.RecordsNavigationController"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.RecordsNavigationController.CanMoveBy">
            <summary>
                <para>Indicates whether you can currently navigate to the previous object and\or next object.
</para>
            </summary>
            <returns>A <b>MovementDirection</b> enumeration value.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.RecordsNavigationController.MoveToPrev">
            <summary>
                <para>Invoked as a result of executing the <b>Previous Object</b> Action.
</para>
            </summary>
            <returns><b>true</b> if movement to the previous object is allowed; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.RecordsNavigationController.NextObjectAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.RecordsNavigationController"/>'s <b>Next Object</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the <b>Next Object</b> Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.RecordsNavigationController.OrderProviderSource">
            <summary>
                <para>Provides access to the <b>RecordsNavigationController</b>'s Order Provider.
</para>
            </summary>
            <value>An OrderProviderSource object representing a service for getting required objects from the specified View.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.RecordsNavigationController.PreviousObjectAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.RecordsNavigationController"/>'s <b>Previous Object</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the <b>Previous Object</b> Action.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.LinkUnlinkController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant, that contains the <b>Link</b> and <b>Unlink</b> Actions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.LinkUnlinkController"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.GetSchema">
            <summary>
                <para>Overrides the <see cref="M:DevExpress.ExpressApp.Controller.GetSchema"/> method.
</para>
            </summary>
            <returns>The <b>Schema</b> object that represents the Schema extension to be added to the application's entire Schema.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.AutoCommit">
            <summary>
                <para>Indicates whether to save changes made to the current List View's collection when the <see cref="P:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.LinkAction"/> or <see cref="P:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.UnlinkAction"/> is executed.
</para>
            </summary>
            <value><b>true</b> if the changes made to the current collection property are saved to the database when the <b>Link</b> or <b>Unlink</b> Action is executed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.LinkObjectAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.LinkUnlinkController"/>'s <b>Link</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowAction"/> object representing the <b>Link</b> Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.UnlinkAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.LinkUnlinkController"/>'s <b>Unlink</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the <b>Unlink</b> Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.LinkUnlinkController.LinkAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.LinkUnlinkController"/>'s <b>Link</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowAction"/> object representing the <b>Link</b> Action.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.FilterController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant that contains the <b>Filter by Text</b>  and <b>Filter</b> Actions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.FilterController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.FilterController"/> class.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.CurrentFilterIdAttributeName">
            <summary>
                <para>Returns the name of the attribute of the Application Model's Views | <b>View</b> | <b>Filters</b> node. This attribute specifies the currently selected item of the <see cref="T:DevExpress.ExpressApp.SystemModule.FilterController"/>'s <b>Filter</b> Action. By default, this attribute is called "CurrentFilterID".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.FilterCriteriaName">
            <summary>
                <para>Returns the name of the item in the Criteria collection of the current List View's CollectionSource. This item is updated each time a new filter is selected via the <see cref="T:DevExpress.ExpressApp.SystemModule.FilterController"/>'s <b>Filter</b> Action. By default, this attribute is called "ListViewFilter".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.FiltersNodeName">
            <summary>
                <para>Returns the name of the Application Model Node that contains information for the <see cref="T:DevExpress.ExpressApp.SystemModule.FilterController"/>'s <b>Filter</b> Action. By default, this node is called "Filters".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.PermanentCriteriaAttributeName">
            <summary>
                <para>This string is obsolete now. Use <see cref="F:DevExpress.ExpressApp.SystemModule.FilterController.FilterActionCriteriaName"/> instead.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.PermanentFilterCriteriaName">
            <summary>
                <para>This string is obsolete. Use <see cref="F:DevExpress.ExpressApp.SystemModule.FilterController.ListViewCriteriaName"/> instead.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.FilterController.GetSchema">
            <summary>
                <para>Overrides the <see cref="M:DevExpress.ExpressApp.Controller.GetSchema"/> method.
</para>
            </summary>
            <returns>The <b>Schema</b> object that represents the Schema extension to be added to the application's entire Schema.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.FilterController.UpdateModel(DevExpress.ExpressApp.Dictionary)">
            <summary>
                <para>Overrides the <see cref="M:DevExpress.ExpressApp.Controller.UpdateModel"/> method.
</para>
            </summary>
            <param name="dictionary">
		A <b>Dictionary</b> object that provides access to the Application Model's nodes.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.FilterController"/>'s <b>Filter by Text</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.ParametrizedAction"/> object representing the <b>Filter by Text</b> Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.FilterController.SetFilterAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.DetailViewController"/>'s <b>Filter</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/> object representing the <b>Filter</b> Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.FilterController.View">
            <summary>
                <para>Provides access to the current List View for which the <see cref="T:DevExpress.ExpressApp.SystemModule.FilterController"/> is activated.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.ListView"/> object representing the current List View to be filtered by the <see cref="T:DevExpress.ExpressApp.SystemModule.FilterController"/>.
</value>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.FilterActionCriteriaName">
            <summary>
                <para>Returns the name of the attribute of the Application Model's Views | <b>View</b> node. This attribute specifies a criteria applied by the <see cref="T:DevExpress.ExpressApp.SystemModule.FilterController"/>. By default, this attribute is called "Criteria".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.ListViewCriteriaName">
            <summary>
                <para>Returns the name of the item in the <b>Criteria</b> collection of the current List View's CollectionSource. This item represents the criteria specified by the <b>Criteria</b> attribute of the Views | <b>View</b> node. By default, this attribute is called "ListViewCriteria".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.FilterController.CustomBuildCriteria">
            <summary>
                <para>Occurs when the <b>Filter by Text</b> Action is executed. Allows you to create a custom <b>CriteriaOperator</b> that will be used by the <b>Filter by Text</b> Action, to filter the current List View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.FilterController.CustomGetFullTextSearchProperties">
            <summary>
                <para>Occurs when the <b>Filter by Text</b> Action is executed. Allows you to specify the properties over which the search is performed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.FullTextSearchActionId">
            <summary>
                <para>Holds the <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/>'s identifier.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.FilterController.FullTextSearchCriteriaName">
            <summary>
                <para>When the <see cref="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextFilterAction"/> is used to filter a List View, a criterion is passes to the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary of the List View's Collection Source. This dictionary requires that each criterion must be accompanied by a description. The <b>FullTextSearchCriteriaName</b> constant holds a description of criterions passed to the <see cref="P:DevExpress.ExpressApp.CollectionSourceBase.Criteria"/> dictionary by the <b>FullTextFilterAction</b>.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextSearchTargetPropertiesMode">
            <summary>
                <para>Specifies the way in which the <b>Filter by Text</b> Actions collects properties to be included in a search crietirion.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.SystemModule.FullTextSearchTargetPropertiesMode"/> enumeration value that specifies the way in which the <b>Filter by Text</b> Action collects properties for the criterion to be generated. The default value is <see cref="F:DevExpress.ExpressApp.SystemModule.FullTextSearchTargetPropertiesMode.AllSearchableMembers"/>.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.FilterController.FullTextSearchMode">
            <summary>
                <para>Specifies the way in which the <b>Filter by Text</b> Actions performs its search.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Filtering.SearchMode"/> enumeration value that specifies the way in which the <b>Filter by Text</b> Action performs its search. The default value is <see cref="F:DevExpress.ExpressApp.Filtering.SearchMode.SearchInObject"/>.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.DetailViewController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant that contains the <b>Cancel</b>, <b>Save</b>, <b>Save and Close</b> and <b>Save and New</b> Actions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.DetailViewController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.DetailViewController"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DetailViewController.CancelAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.DetailViewController"/>'s <b>Cancel</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the <b>Cancel</b> Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DetailViewController.SaveAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.DetailViewController"/>'s <b>Save</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the <b>Save</b> Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DetailViewController.SaveAndCloseAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.DetailViewController"/>'s <b>Save and Close</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object, representing the <b>Save and Close</b> Action.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DetailViewController.SaveAndNewAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.DetailViewController"/>'s <b>Save and New</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/> object representing the <b>Save and New</b> Action.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.WindowController"/> descendant that contains the <b>Navigation</b> Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/> class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.CustomInitializeItems">
            <summary>
                <para>Raised before generating the <b>Items</b> collection of the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigation</b> Action.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.CustomShowNavigationItem">
            <summary>
                <para>Occurs when an end-user clicks a navigation item in the navigation control.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.ItemsInitialized">
            <summary>
                <para>Occurs after the <b>Items</b> collection of the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigation</b> Action has been populated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.NavigationItemsNodeName">
            <summary>
                <para>Returns the name of the Application Model Node that contains information for the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigaiton</b> Action. By default, this node is called "NavigationItems".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.GenerateNavigationItem(DevExpress.ExpressApp.Dictionary,DevExpress.ExpressApp.ViewShortcut,System.String,System.String,System.String)">
            <summary>
                <para>Creates an Application Model's <b>NavigaitonItem</b> node that defines an item of the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigation</b> Action. Sets the specified ID and Caption for the new node.
</para>
            </summary>
            <param name="dictionary">
		A <b>Dictionary</b> object that represents the Application Model.

            </param>
            <param name="viewShortcut">
		A <b>ViewShortcut</b> object that presents key information for creating a new <b>NavigationItem</b> node.

            </param>
            <param name="groupName">
		A string value representing the name of the NavigationGroup node to which the new <b>NavigationItem </b>node will be added.

            </param>
            <param name="navigationItemID">
		A string value that represents an identifier of the new <b>NavigationItem </b>node.

            </param>
            <param name="caption">
		A string value that represents an identifier of the new <b>NavigationItem</b> node.

            </param>
            <returns>A <b>DictionaryNode</b> object representing the Application Model's <b>NavigationItem</b> node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.GenerateNavigationItem(DevExpress.ExpressApp.Dictionary,DevExpress.ExpressApp.ViewShortcut,System.String)">
            <summary>
                <para>Creates an Application Model's <b>NavigaitonItem</b> node that defines an item of the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigation</b> Action.
</para>
            </summary>
            <param name="dictionary">
		A <b>Dictionary</b> object that represents the Application Model.

            </param>
            <param name="viewShortcut">
		A <b>ViewShortcut</b> object that presents key information for creating a new <b>NavigationItem</b> node.

            </param>
            <param name="groupName">
		A string value representing the name of the NavigationGroup node to which the new <b>NavigationItem </b>node will be added.

            </param>
            <returns>A <b>DictionaryNode</b> object representing the Application Model's <b>NavigationItem</b> node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.GetSchema">
            <summary>
                <para>Overrides the <see cref="M:DevExpress.ExpressApp.Controller.GetSchema"/> method.
</para>
            </summary>
            <returns>The <b>Schema</b> object that represents the Schema extension to be added to the application's entire Schema.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.GetStartupNavigationItem">
            <summary>
                <para>Returns the <b>Navigation</b> Action's item to be chosen when starting up the application.
</para>
            </summary>
            <returns>A <b>ChoiceActionItem</b> object representing the item in the navigation control to be chosen when loading the main window.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.UpdateModel(DevExpress.ExpressApp.Dictionary)">
            <summary>
                <para>Overrides the <see cref="M:DevExpress.ExpressApp.Controller.UpdateModel"/> method.
</para>
            </summary>
            <param name="dictionary">
		A <b>Dictionary</b> object that provides access to the Application Model's nodes.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.OpenModuleAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigation</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/> object representing the <b>Navigation</b> Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.ShowNavigationItemAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigation</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/> object representing the <b>Navigation</b> Action.
</value>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.GroupImageAttributeName">
            <summary>
                <para>Returns the name of the NavigationItems | <b>Group</b> node's attribute that specifies the name of the image that is displayed for a group in the navigation control. By default, this node is called "ImageName".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.GroupNodeName">
            <summary>
                <para>Returns the name of the NavigationItems node's child node that contains information on a navigation group of the application's navigation control. This group corresponds to the first level of items in the <b>Items</b> collection of the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigaiton</b> Action. By default, this child node is called "Group".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.GenerateNavigationItemNode(DevExpress.ExpressApp.Dictionary,DevExpress.ExpressApp.ViewShortcut,System.String,System.String,System.String)">
            <summary>
                <para>Creates an Application Model's <b>NavigaitonItem</b> node that defines an item of the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigation</b> Action. Sets the specified ID and Caption for the new node.
</para>
            </summary>
            <param name="dictionary">
		A <b>Dictionary</b> object that represents the Application Model.

            </param>
            <param name="viewShortcut">
		A <b>ViewShortcut</b> object that presents key information for creating a new <b>NavigationItem</b> node.

            </param>
            <param name="groupName">
		A string value representing the name of the NavigationGroup node to which the new <b>NavigationItem </b>node will be added.

            </param>
            <param name="navigationItemID">
		A string value that represents an identifier of the new <b>NavigationItem </b>node.

            </param>
            <param name="caption">
		A string value that represents an identifier of the new <b>NavigationItem</b> node.

            </param>
            <returns>A <b>DictionaryNode</b> object representing the Application Model's <b>NavigationItem</b> node.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.GenerateNavigationItemNode(DevExpress.ExpressApp.Dictionary,DevExpress.ExpressApp.ViewShortcut,System.String)">
            <summary>
                <para>Creates an Application Model's <b>NavigaitonItem</b> node that defines an item of the <see cref="T:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController"/>'s <b>Navigation</b> Action.
</para>
            </summary>
            <param name="dictionary">
		A <b>Dictionary</b> object that represents the Application Model.

            </param>
            <param name="viewShortcut">
		A <b>ViewShortcut</b> object that presents key information for creating a new <b>NavigationItem</b> node.

            </param>
            <param name="groupName">
		A string value representing the name of the NavigationGroup node to which the new <b>NavigationItem </b>node will be added.

            </param>
            <returns>A <b>DictionaryNode</b> object representing the Application Model's <b>NavigationItem</b> node.
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.SecurityVisibleKey">
            <summary>
                <para>Returns a key used to create an item in the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Active"/> collection of the <see cref="P:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.ShowNavigationItemAction"/>'s item. This key specifies a reason for activating /deactivating the item when the security allows/denies access to navigate to the View associated with the item. By default, this key is set to "HasRights".

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.SynchronizeItemsWithSecurity">
            <summary>
                <para>Makes the <see cref="P:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.ShowNavigationItemAction"/>'s items disabled if the Security System prohibits reading and navigating to the object type associated with the items.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.CustomUpdateSelectedItem">
            <summary>
                <para>Occurs when the <see cref="P:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.ShowNavigationItemAction"/>'s selected item is about to change, to reflect the change of the active View.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.UpdateSelectedItem(DevExpress.ExpressApp.ViewShortcut)">
            <summary>
                <para>Changes the <see cref="P:DevExpress.ExpressApp.SystemModule.ShowNavigationItemController.ShowNavigationItemAction"/>'s selected item to the specified one.
</para>
            </summary>
            <param name="currentViewShortcut">
		A <b>ViewShortcut</b> object that specifies a View which has a corresponding <b>ShowNavigationItemAction</b>'s item.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.NewObjectViewController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.ViewController"/> descendant that contains the <b>New</b> Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.NewObjectViewController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.NewObjectViewController"/> class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.NewObjectViewController.CollectDescendants">
            <summary>
                <para>Occurs when the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s <b>Items</b> List is generated or updated.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.NewObjectViewController.CollectRoot">
            <summary>
                <para>Occurs when the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s <b>Items</b> List is generated or updated.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.NewObjectViewController.ObjectCreated">
            <summary>
                <para>Occurs after the object of the type selected in the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s <b>Items</b> collection has been created and added to the associated object collection.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.NewObjectViewController.QueryNewObject">
            <summary>
                <para>Occurs before creating a new object of the type selected in the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.NewObjectViewController.GetSchema">
            <summary>
                <para>Overrides the <see cref="M:DevExpress.ExpressApp.Controller.GetSchema"/> method.
</para>
            </summary>
            <returns>The <b>Schema</b> object that represents the Schema extension to be added to the application's entire Schema.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.NewObjectViewController.UpdateModel(DevExpress.ExpressApp.Dictionary)">
            <summary>
                <para>Overrides the <see cref="M:DevExpress.ExpressApp.Controller.UpdateModel"/> method.
</para>
            </summary>
            <param name="dictionary">
		A <b>Dictionary</b> object that provides access to the Application Model's nodes.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.SystemModule.NewObjectViewController"/>'s <b>New</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/> object representing the <b>New</b> Action.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.NewObjectViewController.CollectCreatableItemTypes">
            <summary>
                <para>Occurs when the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s <b>Items</b> List is generated or updated.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.NewObjectViewController.CollectDescendantTypes">
            <summary>
                <para>Occurs when the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s <b>Items</b> List is generated or updated.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.NewObjectViewController.ObjectCreating">
            <summary>
                <para>Occurs before creating a new object of the type selected in the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s control.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.NewObjectViewController.CustomAddObjectToCollection">
            <summary>
                <para>Occurs before adding a newly created object of the type selected in the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s control to an assosiated collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewActionId">
            <summary>
                <para>Returns the <see cref="P:DevExpress.ExpressApp.SystemModule.NewObjectViewController.NewObjectAction"/>'s ID. It's value is set for the <b>ID</b> attribute of the Application Model's ActionDesign | <b>Actions</b> | <b>Action</b> node. The default value is "New".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.ListViewFilterAttribute">

            <summary>
                <para> Specifies the filters that an end-user will be able to apply to the List View that displays the target class'objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ListViewFilterAttribute.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
                <para>Creates an instance of the ListViewFilterAttribute class and initializes its properties.
</para>
            </summary>
            <param name="id">
		A string value that represents the ID of the filter to be created.

            </param>
            <param name="criteria">
		A string value that represents criteria for filtering the current List View.


            </param>
            <param name="caption">
		A string value that represents a caption of the filter to be created.

            </param>
            <param name="isCurrentFilter">
		<b>true</b> if the filter to be created will be initially applied to the current List View; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ListViewFilterAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
                <para>Creates an instance of the ListViewFilterAttribute class and initializes its properties.
</para>
            </summary>
            <param name="id">
		A string value that represents the ID of the filter to be created.

            </param>
            <param name="criteria">
		A string value that represents criteria for filtering the current List View

            </param>
            <param name="caption">
		A string value that represents a caption of the filter to be created.

            </param>
            <param name="description">
		A string value that represents a description of the filter to be created. This value will be set for the tooltip of the corresponding Filter Action's item.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ListViewFilterAttribute.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
                <para>Creates an instance of the ListViewFilterAttribute class and initializes its properties.
</para>
            </summary>
            <param name="id">
		A string value that represents the ID of the filter to be created.

            </param>
            <param name="criteria">
		A string value that represents criteria for filtering the current List View.

            </param>
            <param name="caption">
		A string value that represents a caption of the filter to be created.

            </param>
            <param name="description">
		A string value that represents a description of the filter to be created. This value will be set for the tooltip of the corresponding Filter Action's item.

            </param>
            <param name="isCurrentFilter">
		<b>true</b> if the filter to be created will initially be applied to the current List View; otherwise, <b>false</b>.


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ListViewFilterAttribute.#ctor(System.String,System.String)">
            <summary>
                <para>Creates an instance of the ListViewFilterAttribute class and initializes its properties.
</para>
            </summary>
            <param name="id">
		A string value that represents the ID of the filter to be created.

            </param>
            <param name="criteria">
		A string value that represents criteria for filtering the current List View.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ListViewFilterAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
                <para>Creates an instance of the ListViewFilterAttribute class and initializes its properties.
</para>
            </summary>
            <param name="id">
		A string value that represents the ID of the filter to be created.

            </param>
            <param name="criteria">
		A string value that represents criteria for filtering the current List View.

            </param>
            <param name="isCurrentFilter">
		<b>true</b> if the filter to be created will be initially applied to the current List View; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.ListViewFilterAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
                <para>Creates an instance of the ListViewFilterAttribute class and initializes its properties.
</para>
            </summary>
            <param name="id">
		A string value that represents the ID of the filter to be created.

            </param>
            <param name="criteria">
		A string value that represents criteria for filtering the current List View.

            </param>
            <param name="caption">
		A string value that represents a caption of the filter to be created.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.DialogControllerAcceptingEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.SystemModule.DialogController.Accepting"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.DialogControllerAcceptingEventArgs.#ctor(DevExpress.ExpressApp.ShowViewParameters)">
            <summary>
                <para>Initializes a new instance of the DialogControllerAcceptingEventArgs class.
</para>
            </summary>
            <param name="showViewParameters">
		A <see cref="T:DevExpress.ExpressApp.ShowViewParameters"/> object used to specify a View to be displayed after executing the <see cref="E:DevExpress.ExpressApp.SystemModule.DialogController.Accepting"/> event.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DialogControllerAcceptingEventArgs.ShowViewParameters">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.ShowViewParameters"/> object used to specify a View to be displayed after executing the <see cref="E:DevExpress.ExpressApp.SystemModule.DialogController.Accepting"/> event.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.ShowViewParameters"/> object that represents a set of parameters used to display a new View.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.SystemModule.DialogController">

            <summary>
                <para>Represents a <see cref="T:DevExpress.ExpressApp.WindowController"/> descendant that contains Actions for popup Windows.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.SystemModule.DialogController.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.SystemModule.DialogController"/> class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.DialogController.Accepting">
            <summary>
                <para>Occurs when executing the current Dialog Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.AcceptAction"/>.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.DialogController.Cancelling">
            <summary>
                <para>Occurs when executing the current Dialog Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.CancelAction"/>.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.SystemModule.DialogController.WindowTemplateChanged">
            <summary>
                <para>Occurs after setting a Template for the Dialog Controller's popup Window.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.SystemModule.DialogController.DialogActionContainerName">
            <summary>
                <para>Specifies the name of the Action Container that diplays the Dialog Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.AcceptAction"/> and <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.CancelAction"/>.
</para>
            </summary>
            <returns>$
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DialogController.AcceptAction">
            <summary>
                <para>Provides access to the current Dialog Controller's Accept Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the Dialog Controller's Accept Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DialogController.CancelAction">
            <summary>
                <para>Provides access to the current Dialog Controller's Cancel Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the Dialog Controller's Cancel Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DialogController.CanCloseWindow">
            <summary>
                <para>Specifies whether to close the current popup Window when executing the Dialog Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.AcceptAction"/> or <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.CancelAction"/>. 
</para>
            </summary>
            <value><b>true</b> if the current popup Window is closed after using the Dialog Controller's <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.AcceptAction"/> or <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.CancelAction"/>; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DialogController.Controllers">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value>A collection of Controllers.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DialogController.IsAppropriateContext">
            <summary>
                <para>This property is no longer considered. Please don't use it.

</para>
            </summary>
            <value><b>true</b> if the DialogController can be activated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DialogController.SaveOnAccept">
            <summary>
                <para>Specifies whether to save changes made to the object represented by the current popup Window's Detail View when executing the <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.AcceptAction"/>.
</para>
            </summary>
            <value><b>true</b> if the object represented by the current popup Window's Detail View is saved when executing the <see cref="P:DevExpress.ExpressApp.SystemModule.DialogController.AcceptAction"/>; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.SystemModule.DialogController.CloseAction">
            <summary>
                <para>Provides access to the current DialogController's <b>Close</b> Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object representing the DialogController's <b>Close</b> Action.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.TargetWindow">

            <summary>
                <para>Contains values specifying the type of the Window to display a View.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.TargetWindow.Current">
            <summary>
                <para>The taget View will be displayed in the current Window.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.TargetWindow.Default">
            <summary>
                <para>The target View will be displayed in the Window whose type is determined by the active <b>ShowViewStrategy</b>, taking into account the current Window and View type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.TargetWindow.Modal">
            <summary>
                <para>This value is obsolete. Use the <see cref="F:DevExpress.ExpressApp.TargetWindow.NewModalWindow"/> value instead.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.TargetWindow.Popup">
            <summary>
                <para>This value is obsolete. Use the <see cref="F:DevExpress.ExpressApp.TargetWindow.NewWindow"/> value instead.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.TargetWindow.NewModalWindow">
            <summary>
                <para>The View will be displayed in a newly created modal Window.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.TargetWindow.NewWindow">
            <summary>
                <para>The target View will be displayed in a newly created Window.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.ShowViewParameters">

            <summary>
                <para>Represents a set of parameters used to display a new View.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewParameters.#ctor(DevExpress.ExpressApp.View)">
            <summary>
                <para>Creates an instance of the ShowViewParameters class and initializes the <see cref="P:DevExpress.ExpressApp.ShowViewParameters.CreatedView"/> property.
</para>
            </summary>
            <param name="view">
		A <see cref="T:DevExpress.ExpressApp.View"/> object that represents the target View to be displayed.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewParameters.#ctor">
            <summary>
                <para>Creates an instance of the ShowViewParameters class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ShowViewParameters.Assign(DevExpress.ExpressApp.ShowViewParameters)">
            <summary>
                <para>Sets the current object's properties to the specified <see cref="T:DevExpress.ExpressApp.ShowViewParameters"/> object's property values, respectively.
</para>
            </summary>
            <param name="source">
		A <see cref="T:DevExpress.ExpressApp.ShowViewParameters"/> object whose properties serve as a source for the corresponding properties of the current <see cref="T:DevExpress.ExpressApp.ShowViewParameters"/> object.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewParameters.Context">
            <summary>
                <para>Specifies the Template context for the Window that will contain the target View.
</para>
            </summary>
            <value>A <b>TemplateContext</b> object that represents a Template context for the target View's Window.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewParameters.ContextName">
            <summary>
                <para>Specifies the Template context for the Window that will contain the target View.
</para>
            </summary>
            <value>A <b>TemplateContext</b> object that represents a Template context for the target View's Window.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewParameters.Controllers">
            <summary>
                <para>Provides access to a collection of Controllers that should only be activated for the target View or its Window. 

</para>
            </summary>
            <value>A <b>List@lt;Controller@gt;</b> object that represents a collection of Controllers to be activated for the target View or its Window.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewParameters.CreateAllControllers">
            <summary>
                <para>Specifies whether all Controllers that satisfy the target View or its Window must be created.
</para>
            </summary>
            <value><b>true</b> if all Controllers that satisfy the target View or its Window are created; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewParameters.CreatedView">
            <summary>
                <para>Specifies the View to be displayed.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.View"/> object representing a View to be displayed.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ShowViewParameters.TargetWindow">
            <summary>
                <para>Specifies the type of the Window that will embed the target View.


</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.TargetWindow"/> enumeration value representing the type of the target Window.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Editors.ViewEditMode">

            <summary>
                <para>Contains values that specify the display mode for an XAF UI element in an ASP.NET Web application.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Editors.ViewEditMode.Edit">
            <summary>
                <para>An XAF element that supports the View-Edit mode is displayed in the editable mode in ASP.NET applications.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Editors.ViewEditMode.View">
            <summary>
                <para>An XAF element that supports the View-Edit mode is displayed in the read-only mode in ASP.NET applications.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.ModuleBase">

            <summary>
                <para>Provides useful methods for the Application Model customization.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.CreateModule(System.Type,DevExpress.ExpressApp.DictionaryDifferenceStore)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="moduleType">
		The type of the module to be created.

            </param>
            <param name="diffsStore">
		A <b>DictionaryDifferenceStore</b> object that will be used to store changes made in the Application Model within the created module.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.ModuleBase"/> object that represents a module of the specified type.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.CustomizeUIModelAttribute(DevExpress.ExpressApp.CustomizeAttributeEventArgs)">
            <summary>
                <para>Modifies the value of a specified localizable attribute from the Application Model.
</para>
            </summary>
            <param name="e">
		A <b>CustomizeAttributeEventArgs</b> object specifying the attribute and its new value.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.CustomizeXPDictionary(DevExpress.Xpo.Metadata.XPDictionary)">
            <summary>
                <para>Customizes information on business classes before loading it to the Application Model's BOModel node.
</para>
            </summary>
            <param name="xpDictionary">
		An <b>XPDictionary</b> object which holds information on persistent classes to be loaded to the Application Model.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.GetPersistentObjectAssemblies">
            <summary>
                <para>Returns a list of assemblies that contain the declaration of the persistent object types to be loaded into the Application Model.

</para>
            </summary>
            <returns>A <b>System.Collections.Generic.IList</b> collection containing assemlies with persistent object types to be loaded to the Application Model.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.GetPersistentObjectTypes">
            <summary>
                <para>Returns a list of business object types to be loaded to the Application Model.
</para>
            </summary>
            <returns>A <b>System.Collections.Generic.IList</b> collection containing the persistent object types to be loaded to the Application Model.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.GetRequiredModules">
            <summary>
                <para>Returns a list of extra modules to be loaded to the Application Model within the current module.
</para>
            </summary>
            <returns>An array containing assemblies with persistent object types to be loaded to the Application Model.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.GetSchema">
            <summary>
                <para>Returns the Schema extension which is combined with the entire Schema when loading the Application Model.
</para>
            </summary>
            <returns>The <b>Schema</b> object that represents the Schema extension to be added to the application's entire Schema.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.GetStartupActions">
            <summary>
                <para>Returns a list of Popup Window Show Actions that must be executed before loading the application's main Window.
</para>
            </summary>
            <returns>An IList@lt;<see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowAction"/>@gt; object that represents a collection of Actions to be executed before invoking the application's main Window.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.ProcessLocalizedAttributeValue(DevExpress.ExpressApp.CustomizeAttributeEventArgs)">
            <summary>
                <para>Modifies the value of a specified localizable attribute from the Application Model.

</para>
            </summary>
            <param name="e">
		A <b>CustomizeAttributeEventArgs</b> object specifying the attribute and its new value.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.Setup(DevExpress.ExpressApp.XafApplication)">
            <summary>
                <para>Sets up a module after it has been added to the <see cref="P:DevExpress.ExpressApp.XafApplication.Modules"/> collection.
</para>
            </summary>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application. This parameter value is set for the <see cref="P:DevExpress.ExpressApp.ModuleBase.Application"/> property.


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.UpdateModel(DevExpress.ExpressApp.Dictionary)">
            <summary>
                <para>Modifies the Application Model.
</para>
            </summary>
            <param name="model">
		A <b>Dictionary</b> object that provides access to the Application Model's nodes.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.ValidateModel(DevExpress.ExpressApp.Dictionary)">
            <summary>
                <para>Checks whether the nodes and attributes of the currently loaded Application Model satisfy predefined rules.
</para>
            </summary>
            <param name="model">
		A <b>Dictionary</b> object that represents the currently loaded Application Model.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.AssemblyName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value>A string that represents the name of the current module's assembly.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.Description">
            <summary>
                <para>Specifies a textual description of a module.
</para>
            </summary>
            <value>A string value that represents the current module description.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.DiffsStore">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value>A <b>DictionaryDifferenceStore</b> object used to store changes made in the Application Model within the created module.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.Name">
            <summary>
                <para>Gets the full name of a module's type.
</para>
            </summary>
            <value>A string value that represents the current module's full name.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.Version">
            <summary>
                <para>Gets the major, minor, revision, and build numbers of a module's assembly.
</para>
            </summary>
            <value>A <b>System.Reflection.Version</b> object that represents the current module's assembly version.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.#ctor">
            <summary>
                <para>Creates a new instance of the ModuleBase class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.RequiredModuleTypes">
            <summary>
                <para>Provides access to the collection of modules that are added to the current module via the Module Designer.
</para>
            </summary>
            <value>A <b>ModuleTypeList</b> collection of modules used by the current module.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.CustomizeLocalizedAttributeValue(DevExpress.ExpressApp.DictionaryAttribute,System.String)">
            <summary>
                <para>Modifies the value of a specified localizable attribute from the Application Model.
</para>
            </summary>
            <param name="attribute">
		A <b>DictionaryAttribute</b> object representing an Application Model attribute whose value should be modified.

            </param>
            <param name="attributeNewValue">
		A string value that represents a new value generated for the specified attribute by default.

            </param>
            <returns>A string value that represents a new value of the attribute specified by the <i>attribute</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.Setup(DevExpress.ExpressApp.ApplicationModulesManager)">
            <summary>
                <para>Sets up a module after it has been created.
</para>
            </summary>
            <param name="moduleManager">
		An <b>ApplicationModulesManager</b> object that provides methods and properties to manage the current application's modules. This parameter value is set for the <see cref="P:DevExpress.ExpressApp.ModuleBase.ModuleManager"/> property.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.Application">
            <summary>
                <para>Provides access to a <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that can be used to manage the current application.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage an application. 
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.BusinessClassAssemblies">
            <summary>
                <para> Provides access to the collection of assemblies that are all loaded to the Application Model.
</para>
            </summary>
            <value>A <b>BusinessClassAssembliesList</b> object representing a collection of assemblies with business classes.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.BusinessClasses">
            <summary>
                <para>Provides access to the collection of business classes that are all loaded to the Application Model.
</para>
            </summary>
            <value>A <b>PersistentTypesList</b> object that represents a collection of business classes to be loaded to the Application Model.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.ModuleManager">
            <summary>
                <para>Provides access to the <b>ApplicationModulesManager</b> object, which contains information on the modules currenly added to the application.

</para>
            </summary>
            <value>An <b>ApplicationModulesManager</b> object that provides methods and properties to manage the current application's modules. This parameter value is set for the <see cref="P:DevExpress.ExpressApp.ModuleBase.ModuleManager"/> property.

</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.GetRealModuleType(System.Type)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="moduleType">
		A module's type.

            </param>
            <returns>A module's type.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.GetXafResourceLocalizerTypes">
            <summary>
                <para>Returns a collection of Resource Localizer types that can be used in an application that uses the current module.
</para>
            </summary>
            <returns>An <b>ICollection@lt:Type@gt:</b> collection containing the types of the Resource Localizers to be supplied with the current module.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.ResourcesExportedToModel">
            <summary>
                <para>Provides access to a collection of Resource Localizers used in the current module to extend the Application Model's Localization node.
</para>
            </summary>
            <value>An <b>IList@lt;Type@gt;</b> collection of Resource Localizer types.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.AdditionalBusinessClassAssemblies">
            <summary>
                <para>Provides access to the collection of assemblies with business classes. These assemblies are added to the Application Model via the Module Designer.
</para>
            </summary>
            <value>A <b>UniqueItemsCollection</b> collection containing assemblies with persistent object types to be loaded to the Application Model from the Module Designer.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ModuleBase.AdditionalBusinessClasses">
            <summary>
                <para>Provides access to the collection of business classes that will be loaded to the Application Model from the Module Designer.
</para>
            </summary>
            <value>A <b>UniqueItemsCollection</b> collection containing persistent object types to be loaded to the Application Model via the Module Designer.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ModuleBase.CustomizeTypesInfo(DevExpress.ExpressApp.DC.ITypesInfo)">
            <summary>
                <para>Customizes information on business classes before loading it to the Application Model's BOModel node.
</para>
            </summary>
            <param name="typesInfo">
		An <b>ITypesInfo</b> object which holds information on persistent classes to be loaded to the Application Model.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.ObjectSpace">

            <summary>
                <para>Represents an Object Space which is used for data manipulation.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.#ctor(DevExpress.Xpo.IDataLayer)">
            <summary>
                <para>Creates a new instance of the ObjectSpace class and initializes the <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> property.
</para>
            </summary>
            <param name="dataLayer">
		An <b>IDataLayer</b> object that will be used to obtain data from the data store, update the stored data and the schema.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.#ctor(DevExpress.Xpo.Metadata.XPDictionary,System.String)">
            <summary>
                <para>Creates a new instance of the ObjectSpace class and initializes the <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> property.
</para>
            </summary>
            <param name="dictionary">
		An <b>XPDictionary</b> object.

            </param>
            <param name="connectionString">
		A string that represents a connection string used to connect to the application's database.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.#ctor(DevExpress.Xpo.UnitOfWork)">
            <summary>
                <para>Creates a new instance of the ObjectSpace class and initializes the <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> property.
</para>
            </summary>
            <param name="unitOfWork">
		A <b>UnitOfWork</b> object that will be used to load and save persistent objects. 

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.#ctor(DevExpress.ExpressApp.ObjectSpace)">
            <summary>
                <para>Creates a new instance of the ObjectSpace class and initializes the <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> property.
</para>
            </summary>
            <param name="objectSpace">
		An ObjectSpace object which will be used to get the Data Layer of its <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/>.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.Commiting">
            <summary>
                <para>Occurs before saving the persistent objects belonging to the current Object Space to the database.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.Committed">
            <summary>
                <para>Raised after saving changes made to persistent objects belonging to the current Object Space to the database.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.Committing">
            <summary>
                <para>Occurs before saving the persistent objects belonging to the current Object Space to the database.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.Confirmation">
            <summary>
                <para>Occurs when performing refresh or rollback operations with the current Object Space's persistent objects.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.CustomCommitChanges">
            <summary>
                <para>Replaces the default process for committing changes made to persistent objects, with a custom one.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.CustomRefresh">
            <summary>
                <para>Occurs to replace the default processes of refreshing persistent objects with a custom one.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.Disposed">
            <summary>
                <para>Occurs after an Object Space has been disposed of.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ModifiedChanged">
            <summary>
                <para>Occurs when the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.IsModified"/> state is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ObjectChanged">
            <summary>
                <para>Raised when a persistent object is created, changed or deleted.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ObjectDeleted">
            <summary>
                <para>Occurs after the specified objects have been deleted.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ObjectDeleting">
            <summary>
                <para>Occurs when the specified objects are about to be deleted.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ObjectEndEdit">
            <summary>
                <para>Occurs after ending an edit operation taking place on the specified object.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ObjectSaved">
            <summary>
                <para>Occurs after saving changes made to a specified persistent object to the database. 
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ObjectSaving">
            <summary>
                <para>Raised before saving changes made to a specified persistent object to the database.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ObjectsReloaded">
            <summary>
                <para>Occurs after setting a new <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> for the current ObjectSpace.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.Refreshing">
            <summary>
                <para>Occurs before refreshing the current Object Space's persistent objects.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.AssignFilter(System.Collections.IList,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Applies a specified filter to a particular collection.
</para>
            </summary>
            <param name="collection">
		A collection to be filtered.

            </param>
            <param name="filter">
		A <b>CriteriaOperator</b> object representing a filter to be applied to the specified collection. 


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CanAssignFilter(System.Collections.IList)">
            <summary>
                <para>Indicates whether a filter can be applied to the specified collection.
</para>
            </summary>
            <param name="collection">
		A collection to be tested.

            </param>
            <returns><b>true</b> if a filter can be applied to the specified collection; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CanInstantiate(System.Type)">
            <summary>
                <para>Specifies whether the Object Space can instantiate an object of the specified type.
</para>
            </summary>
            <param name="objectType">
		An object type which is supposed to be created by an Object Space.

            </param>
            <returns><b>true</b> if an ObjectSpace object can create an object of the specified type; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CommitChanges">
            <summary>
                <para>Saves all the changes made to the persistent objects belonging to the current Object Space to the database.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CreateCollection(System.Type)">
            <summary>
                <para>Creates and initializes a new instance of the <b>XPCollection</b> class by binding it to the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> and specifying the type of objects to include in the new collection. 

</para>
            </summary>
            <param name="objectType">
		The type of persistent objects to include into the collection.

            </param>
            <returns>A <b>System.Collections.IList</b> collection that includes the persistent objects of the specified type.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CreateCollection(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates and initializes a new instance of the <b>XPCollection</b> class with the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> and criteria-specific options.
</para>
            </summary>
            <param name="objectType">
		The type of persistent objects to include into the collection.

            </param>
            <param name="criteria">
		The <b>DevExpress.Data.Filtering.CriteriaOperator</b> that specifies the criteria for object selection in a data store.


            </param>
            <returns>A <b>System.Collections.IList</b> collection that includes the persistent objects of the specified type. In addition, only objects that satisfy the specified criteria will be retrieved to this collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CreateCollection(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection)">
            <summary>
                <para>Creates and initializes a new instance of the <b>XPCollection</b> class with the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> and criteria-specific options.
</para>
            </summary>
            <param name="objectType">
		The type of persistent objects to include into the collection.

            </param>
            <param name="criteria">
		The <b>DevExpress.Data.Filtering.CriteriaOperator</b> that specifies the criteria for object selection in a data store.


            </param>
            <param name="sortings">
		A <b>SortingCollection</b> object that represents a collection of <b>SortProperty</b> objects used to sort the collection. 

            </param>
            <returns>A <b>System.Collections.IList</b> collection that includes the persistent objects of the specified type. In addition, only objects that satisfy the specified criteria will be retrieved to this collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CreateCollection">
            <summary>
                <para>Returns an <b>IList</b> collection of objects from the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/>.
</para>
            </summary>
            <returns>A <b>System.Collections.IList</b> collection that includes the persistent objects of the specified type.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CreateCollection(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns an <b>IList</b> collection of objects from the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/>.
</para>
            </summary>
            <param name="criteria">
		The <b>DevExpress.Data.Filtering.CriteriaOperator</b> that specifies the criteria for object selection in a data sore.

            </param>
            <returns>A <b>System.Collections.IList</b> collection that includes the persistent objects of the specified type. Only objects that satisfy the specified criteria will be retrieved to this collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CreateObject(System.Type)">
            <summary>
                <para>Creates an object of the specified type.
</para>
            </summary>
            <param name="type">
		A <b>System.Type</b> object which represents the type of the object to be created. 

            </param>
            <returns>An object that represents the created object of the specified type.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CreateObject">
            <summary>
                <para>Creates an object of the type designated by the specified generic type parameter.
</para>
            </summary>
            <returns>An object that represents the created object of the specified type.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.Delete(System.Object)">
            <summary>
                <para>Deletes the specified persistent object and its aggregated objects from persistent storage. 

</para>
            </summary>
            <param name="obj">
		An object which represent the persistent object to be deleted. 

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.Dispose">
            <summary>
                <para>Releases all resources used by an ObjectSpace object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.FindObject(DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
                <para>Searches for the first object of the type designated by the specified generic type parameter which matches the specified criteria. 

</para>
            </summary>
            <param name="criteria">
		A <b>DevExpress.Data.Filtering.CriteriaOperator</b> descendant which represents the criteria for matching persistent objects. 


            </param>
            <param name="inTransaction">
		<b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>.

            </param>
            <returns>An object which represents the first persistent object which matches the specified criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if there is no persistent object which matches the criteria. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.FindObject(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Searches for the first object of the type designated by the specified generic type parameter which matches the specified criteria. 
</para>
            </summary>
            <param name="criteria">
		A <b>DevExpress.Data.Filtering.CriteriaOperator</b> descendant which represents the criteria for matching persistent objects. 


            </param>
            <returns>An object which represents the first persistent object which matches the specified criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if there is no persistent object which matches the criteria. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.FindObject(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Searches for the first object which matches the specified criteria.
</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object which represents the type of objects to search for. 

            </param>
            <param name="criteria">
		A <b>DevExpress.Data.Filtering.CriteriaOperator</b> descendant which represents the criteria to match persistent objects. 

            </param>
            <returns>An object which represents the first persistent object which matches the specified criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if there is no persistent object which matches the criteria.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.FindObject(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
            <summary>
                <para>Searches for the first object which matches the specified criteria.
</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object which represents the type of objects to search for. 

            </param>
            <param name="criteria">
		A <b>DevExpress.Data.Filtering.CriteriaOperator</b> descendant which represents the criteria for matching persistent objects. 


            </param>
            <param name="inTransaction">
		<b>true</b> if all objects (in the database and retrieved) are processed by the specified criteria; otherwise, <b>false</b>.

            </param>
            <returns>An object which represents the first persistent object which matches the specified criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if there is no persistent object which matches the criteria. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetKeyPropertyName(System.Type)">
            <summary>
                <para>Gets the name of the specified type's key property.
</para>
            </summary>
            <param name="type">
		A <b>System.Type</b> object which represents the type of the objects whose key property name is requested. 

            </param>
            <returns>A <b>System.String</b> value which specifies the key property's name.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetKeyPropertyType(System.Type)">
            <summary>
                <para>Gets the type of the specified type objects' key property.
</para>
            </summary>
            <param name="type">
		A <b>System.Type</b> object which represents the type of the objects whose key property type is requested. 

            </param>
            <returns>A <b>System.Type</b> object which represents the type of the specified type objects' key property.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetKeyValue(System.Object)">
            <summary>
                <para>Returns the key property's value of the specified persistent object. 
</para>
            </summary>
            <param name="obj">
		An object which represents the persistent object whose key property's value is returned.

            </param>
            <returns>An object which represents the value of the specified persistent object's key property. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetObject(DevExpress.ExpressApp.ObjectType)">
            <summary>
                <para>Gets an object similar to the specified object from another Object Space, to the current Object Space. The returned object is cast by the type designated by the specified generic type parameter.

</para>
            </summary>
            <param name="objectFromDifferentObjectSpace">
		An object that represents a template object from another Object Space.

            </param>
            <returns>An object retrived from the database to the current Object Space and cast by the specified type.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetObject(System.Object)">
            <summary>
                <para>Gets an object similar to the specified object from another Object Space, to the current Object Space.

</para>
            </summary>
            <param name="objectFromDifferentObjectSpace">
		An object that represents a template object from another Object Space.

            </param>
            <returns>An object retrived from the database via the current Object Space.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetObjectByKey(System.Object)">
            <summary>
                <para>Returns a persistent object of the type designated by the specified generic type parameter, with the specified value for its key property.
</para>
            </summary>
            <param name="key">
		An object that represents the persistent object's key property value.

            </param>
            <returns>An object which represents a persistent object with the specified value for its key property.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetObjectByKey(System.Type,System.Object)">
            <summary>
                <para>Returns the persistent object that has the specified value for its key property.
</para>
            </summary>
            <param name="type">
		A <b>System.Type</b> object which represents the type of objects to search for. 

            </param>
            <param name="key">
		An object that represents the persistent object's key property value. 

            </param>
            <returns>An object which represents the persistent object with the specified value for its key property.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetObjectKey(System.Type,System.String)">
            <summary>
                <para>Converts the key property value string representation into its actual type.
</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object which represents the type of the the object whose key property value is to be converted. 

            </param>
            <param name="objectKeyString">
		A string that represents the string representation of the key property value to be converted.

            </param>
            <returns>An object that represents the value of the specified type object's key property.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetObjectsCount(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the number of objects specified.
</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object that identifies the type of objects against which the calculation will be performed. 

            </param>
            <param name="criteria">
		The <b>DevExpress.Data.Filtering.CriteriaOperator</b> that specifies the criteria for object selection in the database.


            </param>
            <returns>An integer value that represents the count of persistent objects that satisfy the specified criteria.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.HasPermissionTo(System.Type,DevExpress.ExpressApp.Security.ObjectAccess)">
            <summary>
                <para>Indicates whether the current user has permission to manipulate objects of the specified type.

</para>
            </summary>
            <param name="objectType">
		The object type which is tested to determine whether the current user is allowed to perform actions specified by the <i>objectAccessType</i> parameter.


            </param>
            <param name="objectAccessType">
		An <b>ObjectAccess</b> object that specifies which actions are tested to determine whether the current user has permission to perform them.


            </param>
            <returns><b>true</b> if the current user is allowed to perform the specified actions with objects of the specified type; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsFilterAssigned(System.Collections.IList)">
            <summary>
                <para>Indicates whether a filter is applied to the specified collection.
</para>
            </summary>
            <param name="collection">
		An IList collection to be tested.

            </param>
            <returns><b>true</b> if a filter is set for the specified collection; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsNewObject(System.Object)">
            <summary>
                <para>Indicates whether a specified object has been created but has not been saved to the database.
</para>
            </summary>
            <param name="obj">
		A object to be tested.

            </param>
            <returns><b>true</b> if the specified object has not been yet saved to the database; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsObjectBelongTo(System.Object)">
            <summary>
                <para>Indicates whether a specified object belongs to the current Object Space.

</para>
            </summary>
            <param name="obj">
		An object that represents the persistent object to be tested.

            </param>
            <returns><b>true</b> if the specified persistent object belongs to the current Object Space; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsPersistentObject(System.Object)">
            <summary>
                <para>Indicates whether a specified object is persistent. 
</para>
            </summary>
            <param name="obj">
		The object to be tested.

            </param>
            <returns><b>true</b> if the specified object is persistent; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.Refresh">
            <summary>
                <para>Updates the persistent objects belonging to the current Object Space.
</para>
            </summary>
            <returns><b>true</b> if persistent object were refeshed; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.ReloadObject(System.Object)">
            <summary>
                <para>Reloads the state of the specified persistent object and its aggregated objects from the data store.
</para>
            </summary>
            <param name="obj">
		An object which represents the persistent object whose state needs to be reloaded. 

            </param>
            <returns>The object specified by the <i>obj</i> parameter after it's been reloaded.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.Rollback">
            <summary>
                <para>Cancels the changes made to the persistent objects belonging to the current Object Space.
</para>
            </summary>
            <returns><b>true</b> if changes made to persistent objects were canceled; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.SetModified(System.Object)">
            <summary>
                <para>Sets <b>true</b> for the <see cref="P:DevExpress.ExpressApp.ObjectSpace.IsModified"/> property, and adds the passed object to the track list to be committed.
</para>
            </summary>
            <param name="obj">
		A persistent object that has been modified.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.Database">
            <summary>
                <para>Gets the name of the database used when a connection assosiated with the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> is opened. 
</para>
            </summary>
            <value>A string representing the name of the database used when a connection is opened.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.Dictionary">
            <summary>
                <para>Provides access to the <b>XPDictionary</b> object that provides metadata on persistent objects.
</para>
            </summary>
            <value>An <b>XPDictionary</b> object which provides metadata on persistent objects. 
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.IsDisposed">
            <summary>
                <para>Gets a value indicating whether an Object Space has been disposed of. 

</para>
            </summary>
            <value><b>true</b> if the current Object Space has been disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.IsModified">
            <summary>
                <para>Specifies whether objects belonging to the current Object Space are modified.
</para>
            </summary>
            <value><b>true</b> if at least one persistent object is modified; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.ModifiedObjects">
            <summary>
                <para>Returns a collection of objects that have been created, modified or deleted after they were retrieved or committed.

</para>
            </summary>
            <value>An IList collection that contains the modified objects belonging to the current Object Space.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.Session">
            <summary>
                <para>Provides access to a Session that is used to load and save persistent objects. 

</para>
            </summary>
            <value>A <b>DevExpress.Xpo.Session</b> object which is used by the current Object Space to load and save persistent objects.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.ConfirmationRequired">
            <summary>
                <para>Occurs when performing refresh or rollback operations with the current Object Space's persistent objects.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.CustomDeleteObjects">
            <summary>
                <para>Occurs to replace the default processes of deleting persistent objects with a custom one.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.CustomRollBack">
            <summary>
                <para>Occurs to replace the default process of persistent objects rollback with a custom one.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.Reloaded">
            <summary>
                <para>Occurs after setting a new <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> for the current ObjectSpace.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ObjectSpace.RollingBack">
            <summary>
                <para>Occurs before rolling back the changes made to the current Object Space's persistent objects.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.Delete(System.Collections.IList)">
            <summary>
                <para>Deletes the specified persistent objects and their aggregated objects from the database.
</para>
            </summary>
            <param name="objects">
		A collection of persistent objects to be deleted from the database.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsFilterApplied(System.Collections.IList)">
            <summary>
                <para>Indicates whether a filter is applied to the specified collection.
</para>
            </summary>
            <param name="collection">
		An IList collection to be tested.

            </param>
            <returns><b>true</b> if a filter is set for the specified collection; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CombineCriteria(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Groups the specified criteria operators with a logical AND.
</para>
            </summary>
            <param name="criteriaOperators">
		A CriteriaOperator[] array containing criteria operators to be grouped.

            </param>
            <returns>A <b>CriteriaOperator</b> object that represents a <b>GroupOperator</b> object if none of the passed operators represents an EmptyCollectionCriteria.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.Contains(System.Object)">
            <summary>
                <para>Indicates whether a specified object belongs to the current Object Space.
</para>
            </summary>
            <param name="obj">
		An object that represents the persistent object to be tested.

            </param>
            <returns><b>true</b> if the specified persistent object belongs to the current Object Space; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsDeletionDefferedType(System.Type)">
            <summary>
                <para>Indicates whether the specified type supports the Deferred Deletion mode.

</para>
            </summary>
            <param name="type">
		A type to be tested.

            </param>
            <returns><b>true</b> if the type specified as the <i>type</i> parameter supports the Deferred Deletion mode; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.IsCommitting">
            <summary>
                <para>Indicates whether the Object Space is currently committing the changes made to its object(s).
</para>
            </summary>
            <value><b>true</b> if the Object Space is currently committing changes; otherwise, <b>false</b>.

</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsPersistentObject(System.Type)">
            <summary>
                <para>Indicates whether the specified object type is persistent.

</para>
            </summary>
            <param name="objectType">
		The type to be tested.

            </param>
            <returns><b>true</b> if the passed object type is persistent; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.TypesInfo">
            <summary>
                <para>Gets information on the business classes added to the Application Model.
</para>
            </summary>
            <value>An object that implements the <b>ITypesInfo</b> interface.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.#ctor(DevExpress.Xpo.UnitOfWork,DevExpress.ExpressApp.DC.ITypesInfo)">
            <summary>
                <para>Creates a new instance of the ObjectSpace class and initializes the <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/> property.
</para>
            </summary>
            <param name="unitOfWork">
		A <b>UnitOfWork</b> object that will be used to load and save persistent objects. 

            </param>
            <param name="typesInfo">
		An object implementing the <b>ITypesInfo</b> interface.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsDeletedObject(System.Object)">
            <summary>
                <para>Indicates whether the specified persistent object is marked as deleted. 
</para>
            </summary>
            <param name="obj">
		The object to test. 

            </param>
            <returns><b>true</b> if the specified object is marked as deleted; otherwise, <b>false</b>. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetKeyValueAsString(System.Object)">
            <summary>
                <para>Returns the key property's value of the specified persistent object, converted to a string representation.

</para>
            </summary>
            <param name="obj">
		An object which represents the persistent object whose key property's value is returned.

            </param>
            <returns>A string which represents the value of the specified persistent object's key property. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetObjects(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns an <b>IList</b> collection of objects from the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/>.

</para>
            </summary>
            <param name="criteria">
		A <b>DevExpress.Data.Filtering.CriteriaOperator</b> which specifies the criteria for object selection.

            </param>
            <returns>A <b>System.Collections.IList</b> collection that contains the persistent objects of the specified type. Only objects that satisfy the specified criteria will be retrieved to this collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetObjects(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns an <b>IList</b> collection of objects from the current Object Space's <see cref="P:DevExpress.ExpressApp.ObjectSpace.Session"/>.
</para>
            </summary>
            <param name="type">
		The type of the objects to be retrieved.

            </param>
            <param name="criteria">
		A <b>DevExpress.Data.Filtering.CriteriaOperator</b> which specifies the criteria for object selection.

            </param>
            <returns>A <b>System.Collections.IList</b> collection that contains the persistent objects of the specified type. Only objects that satisfy the specified criteria will be retrieved to this collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsObjectFitForCriteria(System.Object,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Specifies whether the specified object satisfies the specified criteria.
</para>
            </summary>
            <param name="obj">
		A persistent object to be tested.

            </param>
            <param name="criteria">
		A <b>CriteriaOperator</b> object representing a criteria to be tested.

            </param>
            <returns><b>true</b> if the specified object passed as the <i>obj</i> parameter satisfies the criteria passed as the <i>criteria</i> parameter; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.IsObjectFitForCriteria(System.Type,System.Object,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Specifies whether a particular object satisfies the specified criteria.
</para>
            </summary>
            <param name="objectType">
		The type of the object to be tested.

            </param>
            <param name="obj">
		A persistent object to be tested.

            </param>
            <param name="criteria">
		A <b>CriteriaOperator</b> object representing a criteria to be tested.

            </param>
            <returns><b>true</b> if the specified object passed as the <i>obj</i> parameter satisfies the criteria passed as the <i>criteria</i> parameter; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.ObjectSpace.IsDeleting">
            <summary>
                <para>Indicates whether the current Object Space is about to delete an object(s).
</para>
            </summary>
            <value><b>true</b> if the current Object Space is deleting an object(s); otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.CreateNestedObjectSpace">
            <summary>
                <para>Creates an instance of the <b>NestedObjectSpace</b> class.
</para>
            </summary>
            <returns>A <b>NestedObjectSpace</b> object that represents a nested Object Space for this method's caller.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ObjectSpace.GetEvaluatorContextDescriptor(System.Type)">
            <summary>
                <para>Creates an instance of the <b>EvaluatorContextDescriptor</b> that is used to supply metadata on the specified type to the <b>ExpressionEvaluator</b> objects.
</para>
            </summary>
            <param name="type">
		A type for which an instance of the <b>EvaluatorContextDescriptor</b> class must be created.

            </param>
            <returns>An <b>EvaluatorContextDescriptor</b> object initialized for the specified type.
</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.EmptyItemsBehavior">

            <summary>
                <para>Contains values specifying how a Choice Action with an empty <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection must be displayed.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Actions.EmptyItemsBehavior.Deactivate">
            <summary>
                <para>A Choice Action's control is invisible if the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection is empty.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.EmptyItemsBehavior.Disable">
            <summary>
                <para>A Choice Action's control is disabled if the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection is empty.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.EmptyItemsBehavior.None">
            <summary>
                <para>A Choice Action's control is displayed with an empty drop-down list if the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection is empty.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.TargetObjectsCriteriaMode">

            <summary>
                <para>Contains values specifying the quantity of selected objects that must satisfy a particular criterion (see <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteria"/>) to enable an Action.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Actions.TargetObjectsCriteriaMode.TrueAtLeastForOne">
            <summary>
                <para>At least one of the selected objects in a View must satisfy the criteria specified by the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteria"/> property to enable the Action.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.TargetObjectsCriteriaMode.TrueForAll">
            <summary>
                <para>All the objects selected in a View must satisfy the criteria specified by the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteria"/> property to enable the Action.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Templates.ISupportStoreSettings">

            <summary>
                <para>Declares members implemented by Frame Templates to support saving their settings to the Application Model.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Templates.ISupportStoreSettings.ReloadSettings">
            <summary>
                <para>Applies settings provided by the Application Model's <b>Template</b> node to a Template at runtime. These settings are provided by the <see cref="M:DevExpress.ExpressApp.Templates.ISupportStoreSettings.SetSettings"/> method.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Templates.ISupportStoreSettings.SaveSettings">
            <summary>
                <para>Saves a Template's settings previously changed by an end-user to the child nodes of the Application Model's <b>Templates</b> node. These child nodes were previously specified by the <see cref="M:DevExpress.ExpressApp.Templates.ISupportStoreSettings.SetSettings"/> method. 

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Templates.ISupportStoreSettings.SetSettings(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Creates and/or provides access to child nodes of the Application Model's <b>Template</b> node where customizations made by an end-user must be stored. To apply these customizations, this method calls the <see cref="M:DevExpress.ExpressApp.Templates.ISupportStoreSettings.ReloadSettings"/> method.
</para>
            </summary>
            <param name="settingsNode">
		A <b>DictionaryNode</b> object that represents the Application Model's <b>Template</b> node, providing settings for the current Template.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ActionMeaning">

            <summary>
                <para>Contains values specifying whether an Action is represented by an accept, cancel or ordinal button in a Window Forms application's popup Windows. 
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionMeaning.Accept">
            <summary>
                <para>An Action which is displayed in a popup Window is executed when an end-user presses ENTER.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionMeaning.Cancel">
            <summary>
                <para>An Action, which is displayed in a popup Window, is executed when an end-user presses ESC.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionMeaning.Unknown">
            <summary>
                <para>An Action which is displayed in a popup Window is executed when an end-user clicks it or uses a predefined shorcut.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.CreateCustomTemplateEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.CreateCustomTemplate"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.CreateCustomTemplateEventArgs.#ctor(DevExpress.ExpressApp.XafApplication,DevExpress.ExpressApp.TemplateContext)">
            <summary>
                <para>Initializes a new instance of the CreateCustomTemplateEventArgs class.
</para>
            </summary>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object which is used to manage the application.

            </param>
            <param name="context">
		A <b>TemplateContext</b> object that represents a context in which a Template is created.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.CreateCustomTemplateEventArgs.Application">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.ExpressApp.XafApplication"/> object.

</para>
            </summary>
            <value>A <b>XafApplication</b> object that represents the object that manages the current application.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CreateCustomTemplateEventArgs.Context">
            <summary>
                <para>Returns the context in which a Template is created.
</para>
            </summary>
            <value>A <b>TemplateContext</b> object that represents a contex in which the Template is created.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CreateCustomTemplateEventArgs.ContextName">
            <summary>
                <para>Returns the context in which a Template is created.
</para>
            </summary>
            <value>A string specifying a Template's context.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CreateCustomTemplateEventArgs.Template">
            <summary>
                <para>Specifies the Template which is created in a <see cref="E:DevExpress.ExpressApp.XafApplication.CreateCustomTemplate"/> event handler.
</para>
            </summary>
            <value>An object that supports the <see cref="T:DevExpress.ExpressApp.Templates.IFrameTemplate"/> interface. This object represents the created Template.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CreateCustomTemplateEventArgs.TemplateInfo">
            <summary>
                <para>This property is obsolete. Use the Template's <b>ISupportStoreSettings.SetSettings</b> method instead.
</para>
            </summary>
            <value>A <b>DictionaryNode</b> object.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.CustomizeTemplateEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.CustomizeTemplate"/> event.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.ExpressApp.CustomizeTemplateEventArgs.Name">
            <summary>
                <para>Returns the name of the context in which the Template to be customized was created.


</para>
            </summary>
            <value>A string specifying a Template's context.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.CustomizeTemplateEventArgs.Template">
            <summary>
                <para>Provides access to the Template to be customized.
</para>
            </summary>
            <value>An object that supports the <see cref="T:DevExpress.ExpressApp.Templates.IFrameTemplate"/> interface. This object  represents the customized Template.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.CustomizeTemplateEventArgs.#ctor(DevExpress.ExpressApp.Templates.IFrameTemplate,DevExpress.ExpressApp.TemplateContext)">
            <summary>
                <para>Initializes a new instance of the CustomizeTemplateEventArgs class.
</para>
            </summary>
            <param name="template">
		An object supporting the <b>IFrameTemplate</b> interface. This object represents the Template to be customized.

            </param>
            <param name="context">
		A <b>TemplateContext</b> object that represents a contex in which the Template was created.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.CustomizeTemplateEventArgs.Context">
            <summary>
                <para>Returns the context in which the Template to be customized was created.
</para>
            </summary>
            <value>A <b>TemplateContext</b> object that represents a context in which the Template was created.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.ViewShownEventArgs">

            <summary>
                <para>Represents arguments passed to an application's <see cref="E:DevExpress.ExpressApp.XafApplication.ViewShown"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ViewShownEventArgs.#ctor(DevExpress.ExpressApp.Frame,DevExpress.ExpressApp.Frame)">
            <summary>
                <para>Initializes a new instance of the ViewShownEventArgs class.
</para>
            </summary>
            <param name="targetFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents the Frame in which a specified View will be displayed.

            </param>
            <param name="sourceFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents the Frame in which the request to create a View was performed.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewShownEventArgs.Frame">
            <summary>
                <para>Provides access to the Frame in which the newly created View is displaed.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents the Frame in which the created View is displayed.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewShownEventArgs.SourceFrame">
            <summary>
                <para>Provides access to the Frame in which a newly created View was requested to be created.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents the Frame in which the request to create a View was performed.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewShownEventArgs.TargetFrame">
            <summary>
                <para>Provides access to the Frame in which a View will be created.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents the Frame in which a View will be created.

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.ViewShowingEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.ViewShowing"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ViewShowingEventArgs.#ctor(DevExpress.ExpressApp.Frame,DevExpress.ExpressApp.View,DevExpress.ExpressApp.Frame)">
            <summary>
                <para>Initializes a new instance of the ViewShowingEventArgs class.
</para>
            </summary>
            <param name="targetFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents a Frame in which a specified View will be displayed.

            </param>
            <param name="view">
		A <see cref="T:DevExpress.ExpressApp.View"/> object that reprsents a List View or Detail View to be shown.

            </param>
            <param name="sourceFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents a Frame in which a request to create a View was performed.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewShowingEventArgs.SourceFrame">
            <summary>
                <para>Provides access to the Frame for which creation of a new View was requested.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents a source Frame for the View to be created.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewShowingEventArgs.TargetFrame">
            <summary>
                <para>Provides access to the Frame in which a new View will be displayed.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Frame"/> object that represents the Frame in which the View will be displayed.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewShowingEventArgs.View">
            <summary>
                <para>Returns the View to be shown.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.View"/> object that reprsents a List View or Detail View to be shown.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.DetailViewCreatedEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.DetailViewCreated"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.DetailViewCreatedEventArgs.#ctor(DevExpress.ExpressApp.DetailView)">
            <summary>
                <para>Initializes a new instance of the DetailViewCreatedEventArgs class.
</para>
            </summary>
            <param name="view">
		A <see cref="T:DevExpress.ExpressApp.DetailView"/> object that represents a Detail View to be customized.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailViewCreatedEventArgs.View">
            <summary>
                <para>Specifies the Detail View to be customized in the <see cref="E:DevExpress.ExpressApp.XafApplication.DetailViewCreated"/> event.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.DetailView"/> object to be customized.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.DetailViewCreatingEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.DetailViewCreating"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.DetailViewCreatingEventArgs.#ctor(System.String,DevExpress.ExpressApp.ObjectSpace,System.Object,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the DetailViewCreatingEventArgs class.
</para>
            </summary>
            <param name="viewID">
		A string value that represents the ID of the Detail View to be created.

            </param>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object that will work with the new Detail View's object.

            </param>
            <param name="obj">
		An object that will be represented by the new DetailView.

            </param>
            <param name="isRoot">
		<b>true</b> if the new Detail View will be root; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailViewCreatingEventArgs.Obj">
            <summary>
                <para>Returns the object that represents a current object for the Detail View to be the created.
</para>
            </summary>
            <value>An object which will be represented by the new Detail View.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailViewCreatingEventArgs.View">
            <summary>
                <para>Specifies the Detail View which is created in the <see cref="E:DevExpress.ExpressApp.XafApplication.DetailViewCreating"/> event.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.DetailView"/> object to be created.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.ListViewCreatingEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.ListViewCreating"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ListViewCreatingEventArgs.#ctor(System.String,DevExpress.ExpressApp.CollectionSourceBase,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the ListViewCreatingEventArgs class.
</para>
            </summary>
            <param name="viewID">
		A string value that represents the ID of the List View to be created.

            </param>
            <param name="collectionSource">
		A <b>CollectionSourceBase</b> object that represents the collection source for the new List View.

            </param>
            <param name="isRoot">
		<b>true</b> if the new List View is root; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ListViewCreatingEventArgs.CollectionSource">
            <summary>
                <para>Returns the collection source to be used when creating a new List View.
</para>
            </summary>
            <value>A <b>CollectionSourceBase</b> object which will be used to retrieve objects to the new List View.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ListViewCreatingEventArgs.View">
            <summary>
                <para>Specifies a custom List View created in a <see cref="E:DevExpress.ExpressApp.XafApplication.ListViewCreating"/> event.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.ListView"/> object to be created.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.ViewCreatingEventArgs">

            <summary>
                <para>Represents the base class for event arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.ListViewCreating"/> and <see cref="E:DevExpress.ExpressApp.XafApplication.DetailViewCreating"/> events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ViewCreatingEventArgs.#ctor(System.String,DevExpress.ExpressApp.ObjectSpace,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the ViewCreatingEventArgs class.
</para>
            </summary>
            <param name="viewID">
		A string that represents the ID of the View to be created.

            </param>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object which is used to create a new View.

            </param>
            <param name="isRoot">
		<b>true</b> if the new View is root; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewCreatingEventArgs.IsRoot">
            <summary>
                <para>Indicates whether a root View must be created.
</para>
            </summary>
            <value><b>true</b> if the new <see cref="T:DevExpress.ExpressApp.View"/> will be root; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewCreatingEventArgs.ObjectSpace">
            <summary>
                <para>Returns the object space to be used when creating a new View.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object that represents an object space for the new View. 

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewCreatingEventArgs.View">
            <summary>
                <para>Specifies a custom View created in a <see cref="E:DevExpress.ExpressApp.XafApplication.DetailViewCreating"/> or <see cref="E:DevExpress.ExpressApp.XafApplication.ListViewCreating"/> event.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.View"/> object that actually represents a Detail or List View.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewCreatingEventArgs.ViewID">
            <summary>
                <para>Returns the ID of the created View.
</para>
            </summary>
            <value>A string that represents the identifier of the <see cref="T:DevExpress.ExpressApp.View"/> to be created.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.LogonFailedEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.LogonFailed"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.LogonFailedEventArgs.#ctor(System.Object,System.Exception)">
            <summary>
                <para>Initializes a new instance of the LogonFailedEventArgs class.
</para>
            </summary>
            <param name="logonParameters">
		An object that represent the current logon parameters.

            </param>
            <param name="exception">
		An <b>Exception</b> object that represents the exception that was raised when logging on.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.LogonFailedEventArgs.Exception">
            <summary>
                <para>Returns the exception that was raised when logging on.
</para>
            </summary>
            <value>An <b>Exception</b> object that represents the exception that was raised when logging on.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.LogonFailedEventArgs.LogonParameters">
            <summary>
                <para>Returns the current logon parameters.
</para>
            </summary>
            <value>An object that represents the current logon parameters.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.LogonEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.LoggingOn"/> and <see cref="E:DevExpress.ExpressApp.XafApplication.LoggedOn"/> events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.LogonEventArgs.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the LogonEventArgs class.
</para>
            </summary>
            <param name="logonParameters">
		An object that represents the Security System's logon parameters.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.LogonEventArgs.LogonParameters">
            <summary>
                <para>Gets the current logon parameters.
</para>
            </summary>
            <value>An object that represents the Security System's logon parameters.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.LastLogonParametersWritingEventArgs">

            <summary>
                <para>Represents arguments passed to an application's <see cref="E:DevExpress.ExpressApp.XafApplication.LastLogonParametersWriting"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.LastLogonParametersWritingEventArgs.#ctor(DevExpress.ExpressApp.DetailView,System.Object,DevExpress.ExpressApp.Utils.SettingsStorage)">
            <summary>
                <para>Initializes a new instance of the LastLogonParametersWritingEventArgs class.
</para>
            </summary>
            <param name="detailView">
		A <see cref="T:DevExpress.ExpressApp.DetailView"/> object that represents the Detail View diplayed on the logon Window.

            </param>
            <param name="logonObject">
		An object that represents the Security System's logon parameters.

            </param>
            <param name="settingsStorage">
		A <b>SettingsStorage</b> object that manages the logon parameters location.


            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.LastLogonParametersWritingEventArgs.DetailView">
            <summary>
                <para>Provides access to the Detail View displayed on the current logon Window.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.DetailView"/> object that represents the Detail View of the current logon Window.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.LastLogonParametersWritingEventArgs.LogonObject">
            <summary>
                <para>Gets the object that specifies the current logon parameters.
</para>
            </summary>
            <value>An object that specified the current logon parameters.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.LastLogonParametersWritingEventArgs.SettingsStorage">
            <summary>
                <para>Provides access to the settings storage which is used to save logon parameters.
</para>
            </summary>
            <value>A <b>SettingsStorage</b> object that manages the logon parameters location.

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.LastLogonParametersReadingEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.LastLogonParametersReading"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.LastLogonParametersReadingEventArgs.#ctor(System.Object,DevExpress.ExpressApp.Utils.SettingsStorage)">
            <summary>
                <para>Initializes a new instance of the LastLogonParametersReadingEventArgs class.
</para>
            </summary>
            <param name="logonObject">
		An object that represents the Security System's logon parameters.

            </param>
            <param name="settingsStorage">
		A <b>SettingsStorage</b> object that manages the logon parameters location.


            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.LastLogonParametersReadingEventArgs.LogonObject">
            <summary>
                <para>Specifies the object that specifies the logon parameters to be displaed in a logon Window.
</para>
            </summary>
            <value>An object that represents the last logon parameters loaded from a storage.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.LastLogonParametersReadingEventArgs.SettingsStorage">
            <summary>
                <para>Provides access to the settings storage which is used to load logon parameters.
</para>
            </summary>
            <value>A <b>SettingsStorage</b> object that manages the logon parameters location.

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.LastLogonParametersReadEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.LastLogonParametersRead"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.LastLogonParametersReadEventArgs.#ctor(System.Object,DevExpress.ExpressApp.Utils.SettingsStorage)">
            <summary>
                <para>Initializes a new instance of the LastLogonParametersReadEventArgs class.
</para>
            </summary>
            <param name="logonObject">
		An object that represents the Security System's logon parameters.

            </param>
            <param name="settingsStorage">
		A <b>SettingsStorage</b> object that manages the logon parameters location.


            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.LastLogonParametersReadEventArgs.LogonObject">
            <summary>
                <para>Provides access to the logon parameters to be displayed in a logon Window.
</para>
            </summary>
            <value>An object that represents the current logon parameters.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.LastLogonParametersReadEventArgs.SettingsStorage">
            <summary>
                <para>Provides access to the settings storage which is used to load logon parameters.
</para>
            </summary>
            <value>A <b>SettingsStorage</b> object that manages the logon parameters location.

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.DatabaseVersionMismatchEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.DatabaseVersionMismatch"/> event.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.ExpressApp.DatabaseVersionMismatchEventArgs.Updater">
            <summary>
                <para>Specifies the Database Updater which is used to update database version.
</para>
            </summary>
            <value>A <b>DatabaseUpdater</b> object that represents a built-in database updater or a custom one.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.DatabaseVersionMismatchEventArgs.#ctor(DevExpress.ExpressApp.Updating.DatabaseUpdater,DevExpress.ExpressApp.Updating.CompatibilityError)">
            <summary>
                <para>Initializes a new instance of the DatabaseVersionMismatchEventArgs class.
</para>
            </summary>
            <param name="updater">
		A <b>DatabaseUpdater</b> object that represents a built-in database updater.

            </param>
            <param name="compatibilityError">
		A <b>CompatibilityError</b> object that represents the error that has occured while checking the database and application compatibility.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.DatabaseVersionMismatchEventArgs.CompatibilityError">
            <summary>
                <para>Specifies the error that has occured while checking the database and application compatibility.
</para>
            </summary>
            <value>A <b>CompatibilityError</b> object that represent the error that occurred.

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.CreateCustomLogonParameterStoreEventArgs">

            <summary>
                <para>Represents arguments passed to the <see cref="E:DevExpress.ExpressApp.XafApplication.CreateCustomLogonParameterStore"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.CreateCustomLogonParameterStoreEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the CreateCustomLogonParameterStoreEventArgs class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.CreateCustomLogonParameterStoreEventArgs.Storage">
            <summary>
                <para>Specifies a <b>SettingStorage</b> object which is used to load and save logon parameters.
</para>
            </summary>
            <value>A <b>SettingsStorage</b> object that manages the logon parameters location.

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Templates.IActionContainer">

            <summary>
                <para>Declares members implemented by Action Containers.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Templates.IActionContainer.Register(DevExpress.ExpressApp.Actions.ActionBase)">
            <summary>
                <para>Adds a specified Action to an Action Container's <see cref="P:DevExpress.ExpressApp.Templates.IActionContainer.Actions"/> collection and creates its control.
</para>
            </summary>
            <param name="action">
		An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object that represents the Action to be registered within the current Action Container. 


            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Templates.IActionContainer.ContainerId">
            <summary>
                <para>Specifies an Action Container's identifier.
</para>
            </summary>
            <value>A string value that represents an Action Container's ID.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Templates.IActionContainer.Actions">
            <summary>
                <para>Provides access to a collection of Actions which are displayed by an Action Container.
</para>
            </summary>
            <value>An object that represents a <b>ReadOnlyCollection@lt;ActionBase@gt;</b> collection that contains Actions of the current Action Container.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Templates.IWindowTemplate">

            <summary>
                <para>Declares members implemented by Window Templates.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Templates.IWindowTemplate.SetCaption(System.String)">
            <summary>
                <para>Sets the specified caption to a Window Template.
</para>
            </summary>
            <param name="caption">
		A string value that represents a caption to be set to the current Window Template.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Templates.IWindowTemplate.SetStatus(System.Collections.Generic.ICollection`1)">
            <summary>
                <para>Displays the specified status messages on a Template (e.g. in its status bar).
</para>
            </summary>
            <param name="statusMessages">
		An object representing the <b>ICollection@lt;string@gt;</b> collection of status messages.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Templates.IWindowTemplate.IsSizeable">
            <summary>
                <para>Indicates whether a Window Template represents a resizable control.
</para>
            </summary>
            <value><b>true</b> if the Template is resizable; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Templates.IFrameTemplate">

            <summary>
                <para>Declares members implemented by Frame Templates.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Templates.IFrameTemplate.SetView(DevExpress.ExpressApp.View)">
            <summary>
                <para>Adds the <see cref="P:DevExpress.ExpressApp.View.Control"/> of the specified View to a Template's View site.
</para>
            </summary>
            <param name="view">
		A <see cref="T:DevExpress.ExpressApp.View"/> object that represents the View whose control is added to the current Template.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Templates.IFrameTemplate.DefaultContainer">
            <summary>
                <para>Provides access to a Template's Action Container that contains the Actions with the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property set to <b>Unspecified</b>.
</para>
            </summary>
            <value>An instance of the class that implement the <see cref="T:DevExpress.ExpressApp.Templates.IActionContainer"/> interface. 
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Templates.IFrameTemplate.GetContainers">
            <summary>
                <para>Provides access to a Template's Action Container collection.
</para>
            </summary>
            <returns>An instance of the <b>ICollection@lt;IActionContainer@gt;</b> collection that contains the current Template's Action Containers.
</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.XafApplication">

            <summary>
                <para>Provides methods and properties to manage an application.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomLogonParameterStore">
            <summary>
                <para>Occurs both when a logon Window is created and when its <b>Logon</b> button is clicked.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomModelDifferenceStore">
            <summary>
                <para>Occurs when a XafApplication is setup.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomTemplate">
            <summary>
                <para>Occurs when creating a Template.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomUserModelDifferenceStore">
            <summary>
                <para>Occurs when the application is set up.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CustomizeTableName">
            <summary>
                <para>Occurs when persistent classes found in the application's modules are loaded to the Application Model.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CustomizeTemplate">
            <summary>
                <para>Occurs after a Template has been created.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.DatabaseVersionMismatch">
            <summary>
                <para>Occurs when the application being run calls the database.


</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.DetailViewCreated">
            <summary>
                <para>Occurs after a Detail View has been created.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.DetailViewCreating">
            <summary>
                <para>Occurs when creating a Detail View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.LastLogonParametersRead">
            <summary>
                <para>Occurs after loading the last logon parameters to the logon Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.LastLogonParametersReading">
            <summary>
                <para>Occurs before loading the last logon parameters to the logon Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.LastLogonParametersWriting">
            <summary>
                <para>Occurs before saving the logon Window's logon parameters.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.ListViewCreating">
            <summary>
                <para>Occurs when creating a List View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.LoggedOn">
            <summary>
                <para>Occurs after an end-user has logged on.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.LoggingOn">
            <summary>
                <para>Occurs when the <b>Logon</b> button on the logon Window is clicked.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.LogonFailed">
            <summary>
                <para>Occurs when the logon fails.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.ViewShowing">
            <summary>
                <para>Occurs before showing a View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.ViewShown">
            <summary>
                <para>Occurs after a View is shown.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.XafApplication.OptionsNodeName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns>Specifies the name of the Application Model's Application | Options node. By default it's value is <b>Options</b>.
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.XafApplication.TablePrefixesKey">
            <summary>
                <para>Specifies the setting in the configuration file's <b>appSettings</b> section. This setting specifies the string that lists prefixes for database tables, to avoid table names duplication. By default this field's value is <b>TablePrefixes</b>.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.XafApplication.TraceLogLocationKey">
            <summary>
                <para>Specifies the setting in the configuration file's <b>appSettings</b> section. This setting specifies the log file location. By default this field's value is <b>TraceLogLocation</b>.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.AskConfirmation(DevExpress.ExpressApp.ConfirmationType)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="confirmationType">
		A <b>ConfirmationType</b> object.

            </param>
            <returns>A <b>ConfirmationResult</b> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateCollectionSource(DevExpress.ExpressApp.ObjectSpace,System.Type,System.String)">
            <summary>
                <para>Creates a collection source for a specified List View.

</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object that represents an Object Space for the objects retrieved to the created collection source.

            </param>
            <param name="objectType">
		The Type object that represents the type of the objects that will be retrirved to the created collection source.

            </param>
            <param name="listViewID">
		A string value representing the target List View's identifier.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.CollectionSourceBase"/> object that represents the collection source of objects whose type is specified by the <i>objectType</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateController">
            <summary>
                <para>Creates a Controller of a specified type. If there is a Controller of the same type, assigns its settings to the new Controller.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.ExpressApp.Controller"/> of the specified type.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateDetailView(DevExpress.ExpressApp.ObjectSpace,System.Object,System.Boolean)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.DetailView"/> class and initializes its properties.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object which is used to work with the new Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/>. This object is assigned to the <see cref="P:DevExpress.ExpressApp.View.ObjectSpace"/> property.

            </param>
            <param name="obj">
		An object which is represented by the new Detail View. This object is assigned to the <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/> property.

            </param>
            <param name="isRoot">
		<b>true</b> if the new Detail View is root; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.IsRoot"/> property.

            </param>
            <returns>A Detail View that represents the object passed as the <i>obj</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateFrame">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.ExpressApp.Frame"/> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateLayoutManager(System.Boolean)">
            <summary>
                <para>Creates a Layout Manager.
</para>
            </summary>
            <param name="simple">
		A Boolean value that indicates whether a simple Layout Manager must be created.

            </param>
            <returns>A <b>LayoutManager</b> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateListEditor(DevExpress.ExpressApp.CollectionSourceBase,DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Creates the List Editor which is specified in the appropriate Application Model node.
</para>
            </summary>
            <param name="collectionSource">
		A <b>CollectionSource</b> of the List View which is displayed via the new ListEditor object.

            </param>
            <param name="info">
		A <b>DictionaryNode</b> object representing the Application Model node that defines the List View for which a List Editor is created.

            </param>
            <returns>An appropriate List Editor.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateListView(System.String,DevExpress.ExpressApp.CollectionSourceBase,System.Boolean)">
            <summary>
                <para>Creates a List View by the information from the Application Model's Views | <b>View</b> node specified by the <i>viewId</i> parameter.
</para>
            </summary>
            <param name="listViewId">
		A string that represents an identifier of the Application Model node that serves as an information source for creating a new List View.


            </param>
            <param name="collectionSource">
		A <b>CollectionSourceBase</b> object that represents the storage for the object to be displayed by the new List View. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.CollectionSource"/> property.

            </param>
            <param name="isRoot">
		<b>true</b> if the new List View is root; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.IsRoot"/> property.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.ListView"/> object that represents the object collection specified by the <i>collecitonSource</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateObjectSpace">
            <summary>
                <para>Creates an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/>.
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreatePopupWindow(DevExpress.ExpressApp.TemplateContext,System.String,System.Boolean,DevExpress.ExpressApp.Controller[])">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="context">
		A <b>Template Context</b> object.

            </param>
            <param name="viewId">
		A string value.

            </param>
            <param name="createAllControllers">
		A Boolean value.

            </param>
            <param name="controllers">
		An array of <see cref="T:DevExpress.ExpressApp.Controller"/> objects.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Window"/> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreatePopupWindow(DevExpress.ExpressApp.TemplateContext,System.String,DevExpress.ExpressApp.Controller[])">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="context">
		A <b>TemplateContext</b> object.

            </param>
            <param name="viewId">
		A string value.

            </param>
            <param name="controllers">
		An array of <see cref="T:DevExpress.ExpressApp.Controller"/> objects.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Window"/> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateTemplate(System.String)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="templateContextName">
		A string value.

            </param>
            <returns>An object that contains members of the <see cref="T:DevExpress.ExpressApp.Templates.IFrameTemplate"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.FindClassInfo(System.Type)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="classType">
		The type of the required class.

            </param>
            <returns>A <b>DictionaryNode</b> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.FindDetailViewId(System.Type)">
            <summary>
                <para>Returns the ID of the Detail View which is used for objects of a specified type by default.

</para>
            </summary>
            <param name="objectType">
		A string value that represents a business object type.

            </param>
            <returns>A string value that represents the ID of the View used to display objects whose type is specified by the <i>objectType</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.FindListViewId(System.Type)">
            <summary>
                <para>Returns the ID of the List View which is used for objects of a specified type by default.

</para>
            </summary>
            <param name="objectType">
		A <b>System.Type</b> object representing a business object type.

            </param>
            <returns>A string value that represents the ID of the View used to display objects whose type is specified by the <i>objectType</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.FindLookupListViewId(System.Type)">
            <summary>
                <para>Returnes the ID of the Lookup List View which is used for objects of a specified type by default.
</para>
            </summary>
            <param name="objectType">
		A string value that represents a business object type.

            </param>
            <returns>A string value that represents the ID of the Lookup List View used to display objects whose type is specified by the <i>objectType</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.FindViewInfo(System.String)">
            <summary>
                <para>Provides access the Application Model node that defines a specified View.
</para>
            </summary>
            <param name="viewId">
		A string value that specifies the identifier of the View to be found in the Application Model.

            </param>
            <returns>A <b>DictionaryNode</b> object that represents the Application Model node that defined the View specified by the <i>viewId</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.GetDetailViewId(System.Type)">
            <summary>
                <para>Returns the ID of the Detail View which is used for objects of a specified type by default, and raises an exception if the appropriate View ID isn't found.

</para>
            </summary>
            <param name="objectType">
		A string value that represents a business object type.

            </param>
            <returns>A string value that represents the ID of the View used to display objects whose type is specified by the <i>objectType</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.GetListViewId(System.Type)">
            <summary>
                <para>Returns the ID of the List View which is used for objects of a specified type by default, and raises an exception if the appropriate View ID isn't found.

</para>
            </summary>
            <param name="objectType">
		A string value that represents a business object type.

            </param>
            <returns>A string value that represents the ID of the View used to display objects whose type is specified by the <i>objectType</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.GetViewInfo(System.String)">
            <summary>
                <para>Provides access to the Application Model node that defines a specified View, or rasies an exception if the node has not been found.
</para>
            </summary>
            <param name="viewId">
		A string value that specifies the identifier of the View to be found in the Application Model.

            </param>
            <returns>A <b>DictionaryNode</b> object that represents the Application Model node that defined the View specified by the <i>viewId</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.SaveModelChanges">
            <summary>
                <para>Saves the changes made by an end-user by the current moment to the <i>Model.User.xafml</i> file.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.ApplicationName">
            <summary>
                <para>Specifies the application's name.
</para>
            </summary>
            <value>A string value that represents the application's name.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.ConnectionString">
            <summary>
                <para>Specifies the connection string which is used to connect to the application's database.
</para>
            </summary>
            <value>A string value which specifies the parameters needed to establish the initial connection.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.DetailViewItemsFactory">
            <summary>
                <para>Provides access to the application's Detail View Item Factory, which is used to load all Detail View Items to the Application Model and create them when needed.
</para>
            </summary>
            <value>A <b>DetailViewItemsFactory</b> object that represents the current application's Detail View Items Factory.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.Info">
            <summary>
                <para>Provides access to the Application Model's root node.
</para>
            </summary>
            <value>A <b>DictionaryNode</b> object that represents the Application Model's root node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.MainWindow">
            <summary>
                <para>Provides access to the application's main Window.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Window"/> object that represents the current application's main Window.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.Model">
            <summary>
                <para>Returns the Application Model.
</para>
            </summary>
            <value>A <b>Dictionary</b> object that represents the Application Model.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider">
            <summary>
                <para>Provides access to the application's Object Space Provider.
</para>
            </summary>
            <value>An instance of the class that implements the <b>IObjectSpaceProvider</b> interface.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.ShowViewStrategy">
            <summary>
                <para>Gets or sets the application's Show View Strategy.
</para>
            </summary>
            <value>A <b>ShowViewStrategyBase</b> object that represents the application's current Show View Strategy.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.TablePrefixes">
            <summary>
                <para>Specifies a string which lists prefixes for database tables to avoid table names duplication.

</para>
            </summary>
            <value>A string in a specific format.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.Title">
            <summary>
                <para>Gets the name associated with the application.
</para>
            </summary>
            <value>A string value that represents the application name.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.#ctor">
            <summary>
                <para>Creates an instance of the XafApplication class and initializes its <see cref="P:DevExpress.ExpressApp.XafApplication.TablePrefixes"/> property.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomUnusableNodesDifferenceStore">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CustomCheckCompatibility">
            <summary>
                <para>Occurs when trying to access the application's database (when logging on or creating an Object Space).
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.ListViewCreated">
            <summary>
                <para>Occurs after a List View has been created.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.ObjectSpaceCreated">
            <summary>
                <para>Occurs after an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> has been created.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.SettingUp">
            <summary>
                <para>Occurs before initializing the XafApplication class instance.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.SetupComplete">
            <summary>
                <para>Occurs after the XafApplication class instace has been initialized.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CheckCompatibility">
            <summary>
                <para>Checks whether the application and database are compatible, and if not, tries to make them compatible.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateDetailView(DevExpress.ExpressApp.ObjectSpace,System.String,System.Boolean)">
            <summary>
                <para>Creates a Detail View by information from the Application Model's Views | DetailView node specified by the <i>detailViewID</i> parameter.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object which is used to work with the new Detail View <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/>. This object is assigned to the <see cref="P:DevExpress.ExpressApp.View.ObjectSpace"/> property.

            </param>
            <param name="detailViewID">
		A string that represents an identifier of the Application Model node that serves as an information source for creating a new Detail View.


            </param>
            <param name="isRoot">
		<b>true</b> if the new Detail View is root; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.IsRoot"/> property.

            </param>
            <returns>A Detail View that does not represent any object.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateDetailView(DevExpress.ExpressApp.ObjectSpace,System.Object,DevExpress.ExpressApp.View)">
            <summary>
                <para>Creates a Detail View for a specified object by the information on the source View.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object which is used to work with the new Detail View <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/>. This object is assigned to the <see cref="P:DevExpress.ExpressApp.View.ObjectSpace"/> property.

            </param>
            <param name="obj">
		An object which is represented by the new Detail View. This object is assigned to the <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/> property.

            </param>
            <param name="sourceView">
		A <see cref="T:DevExpress.ExpressApp.View"/> object that represents the View  in which the command to show the new Detail View has been performed.

            </param>
            <returns>A Detail View that represents the object passed as the <i>obj</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateDetailView(DevExpress.ExpressApp.ObjectSpace,System.Object)">
            <summary>
                <para>Creates a Detail View by the information specified in the Application Model for the type of the specified object.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object which is used to work with the new Detail View <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/>. This object is assigned to the <see cref="P:DevExpress.ExpressApp.View.ObjectSpace"/> property.

            </param>
            <param name="obj">
		An object which is represented by the new Detail View. This object is assigned to the <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/> property.

            </param>
            <returns>A Detail View that represents the object passed as the <i>obj</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateDetailView(DevExpress.ExpressApp.ObjectSpace,System.String,System.Boolean,System.Object)">
            <summary>
                <para>Creates a Detail View for the specified object by the information from the Application Model's Views | DetailView node specified by the <i>detailViewID</i> parameter.

</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object which is used to work with the new Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/>. This object is assigned to the <see cref="P:DevExpress.ExpressApp.View.ObjectSpace"/> property.

            </param>
            <param name="detailViewID">
		A string that represents an identifier of the Application Model node that serve as an information source for creating a new Detail View.

            </param>
            <param name="isRoot">
		<b>true</b> if the new Detail View is root; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.IsRoot"/> property.

            </param>
            <param name="obj">
		An object which is represented by the new Detail View. This object is assigned to the <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/> property.

            </param>
            <returns>A Detail View that represents the object passed as the <i>obj</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateListView(DevExpress.ExpressApp.DictionaryNode,DevExpress.ExpressApp.CollectionSourceBase,System.Boolean)">
            <summary>
                <para>Creates a List View by the information from the Application Model's node specified by the <i>listViewNode</i> parameter.
</para>
            </summary>
            <param name="listViewNode">
		A <b>DictionaryNode</b> object that represents the Application Model node that serve as an information source for creating a new List View.

            </param>
            <param name="collectionSource">
		A <b>CollectionSourceBase</b> object that represents the storage for the object to be displayed by the new List View. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.CollectionSource"/> property.

            </param>
            <param name="isRoot">
		<b>true</b> if the new List View is root; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.IsRoot"/> property.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.ListView"/> object that represents the object collection specified by the <i>collecitonSource</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Exit">
            <summary>
                <para>Finishes runing the application.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.GetCompletedViewShortcut(DevExpress.ExpressApp.ViewShortcut)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="shortcut">
		A <b>ViewShortcut</b> object.

            </param>
            <returns>A <b>ViewShortcut</b> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Initialize(System.String,System.String[],DevExpress.ExpressApp.Security.ISecurity)">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="connectionString">
		A string value that represents the application's connection string. This value is used to create an Object Space Provider and initialize the <see cref="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider"/> property.

            </param>
            <param name="modules">
		An array of string values that represent names of modules to be used in the application. These modules are added to the module list of the application's Modules Manager.

            </param>
            <param name="security">
		An object that has members of the <b>ISecurity</b> interface. This object represents the Security System that will be used in the application.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Initialize(DevExpress.Xpo.IDataLayer,System.String[])">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="dataLayer">
		An object that implements the <b>IDataLayer</b> inteface. This object is used to create an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/>.

            </param>
            <param name="modules">
		An array of string values that represent names of modules to be used in the application. These modules are added to the module list of the application's Modules Manager.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Initialize(DevExpress.ExpressApp.IObjectSpaceProvider,System.String[],DevExpress.ExpressApp.Security.ISecurity)">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="objectSpaceProvider">
		An object that implements the <b>IObjectSpaceProvider</b> interface's members. This object is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider"/> property and then used to create an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/>.

            </param>
            <param name="modules">
		An array of string values that represent names of modules to be used in the application. These modules are added to the module list of the application's Modules Manager.

            </param>
            <param name="security">
		An object that has members of the <b>ISecurity</b> interface. This object represents the Security System that will be used in the application.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Initialize(DevExpress.Xpo.IDataLayer,System.String[],DevExpress.ExpressApp.Security.ISecurity)">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="dataLayer">
		An object that implements the <b>IDataLayer</b> inteface. This object is used to create an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/>.

            </param>
            <param name="modules">
		An array of string values that represent names of modules to be used in the application. These modules are added to the module list of the application's Modules Manager.

            </param>
            <param name="security">
		An object that has members of the <b>ISecurity</b> interface. This object represents the Security System that will be used in the application.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Initialize(System.String,System.String[])">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="connectionString">
		A string value that represents the application's connection string. This value is used to create an Object Space Provider and initialize the <see cref="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider"/> property.

            </param>
            <param name="modules">
		An array of string values that represent names of modules to be used in the application. These modules are added to the module list of the application's Modules Manager.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.ProcessShortcut(DevExpress.ExpressApp.ViewShortcut)">
            <summary>
                <para>Creates a View by a specified shortcut.
</para>
            </summary>
            <param name="shortcut">
		A <b>ViewShortcut</b> object that provides key information on the View to be created.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.View"/> object that represents the View to be created.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Setup(System.String,System.String,System.String[],DevExpress.ExpressApp.Security.ISecurity)">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="applicationName">
		A string value that represents the application's name. This value is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ApplicationName"/> property.

            </param>
            <param name="connectionString">
		A string value that represents the application's connection string. This value is used to create an Object Space Provider and initialize the <see cref="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider"/> property.

            </param>
            <param name="moduleAssemblies">
		An array of string values that represent names of modules to be used in the application. These modules are added to the module list of the application's Modules Manager.

            </param>
            <param name="security">
		An object that has members of the <b>ISecurity</b> interface. This object represents the Security System that will be used in the application.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Setup(System.String,DevExpress.ExpressApp.IObjectSpaceProvider,System.String[],DevExpress.ExpressApp.Security.ISecurity)">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="applicationName">
		A string value that represents the application's name. This value is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ApplicationName"/> property.

            </param>
            <param name="objectSpaceProvider">
		An object that implements the <b>IObjectSpaceProvider</b> interface's members. This object is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider"/> property and then used to create an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/>.

            </param>
            <param name="moduleAssemblies">
		An array of string values that represent names of modules to be used in the application. These modules are added to the module list of the application's Modules Manager.

            </param>
            <param name="security">
		An object that has members of the <b>ISecurity</b> interface. This object represents the Security System that will be used in the application.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Setup(System.String,DevExpress.ExpressApp.IObjectSpaceProvider,DevExpress.ExpressApp.ApplicationModulesManager,DevExpress.ExpressApp.Security.ISecurity)">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="applicationName">
		A string value that represents the application's name. This value is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ApplicationName"/> property.

            </param>
            <param name="objectSpaceProvider">
		An object that implements the <b>IObjectSpaceProvider</b> interface's members. This object is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider"/> property and then used to create an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/>.

            </param>
            <param name="modulesManager">
		An <b>ApplicationModulesManager</b> object that has a module list, provides access to the Controllers Manager, Detail View Items Manager, Application Model and model difference storages.

            </param>
            <param name="security">
		An object that has members of the <b>ISecurity</b> interface. This object represents the Security System that will be used in the application.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Setup(System.String,DevExpress.ExpressApp.IObjectSpaceProvider)">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="applicationName">
		A string value that represents the application's name. This value is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ApplicationName"/> property.

            </param>
            <param name="objectSpaceProvider">
		An object that implements the <b>IObjectSpaceProvider</b> interface's members. This object is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider"/> property and then used to create an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Setup(System.String,System.String,System.String[])">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>
            <param name="applicationName">
		A string value that represents the application's name. This value is assigned to the <see cref="P:DevExpress.ExpressApp.XafApplication.ApplicationName"/> property.

            </param>
            <param name="connectionString">
		A string value that represents the application's connection string. This value is used to create an Object Space Provider and initialize the <see cref="P:DevExpress.ExpressApp.XafApplication.ObjectSpaceProvider"/> property.

            </param>
            <param name="moduleAssemblies">
		An array of string values that represent names of modules to be used in the application. These modules are added to the module list of the application's Modules Manager.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CustomProcessShortcut">
            <summary>
                <para>Occurs when a View is created by its shortcut.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.HandleShortcutProcessingException">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.XafApplication.CurrentVersion">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns>A string value that represents the current version of assemblies used in the application.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateWindow(DevExpress.ExpressApp.TemplateContext,System.Collections.Generic.ICollection`1,System.Boolean,System.Boolean)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="context">
		A <b>TemplateContext</b> object that represents the new Window's context. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Frame.Context"/> property.

            </param>
            <param name="controllers">
		An ICollection@lt;Controller@gt; collection that contains the additional controllers that must be activated for the new Window.

            </param>
            <param name="createAllControllers">
		<b>true</b> if all Controllers from the Application Modle must be created; otherwise, <b>false</b>.

            </param>
            <param name="isMain">
		<b>true</b> if the newly created Window is main; otherwise, <b>false</b>.


            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Window"/> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateWindow(DevExpress.ExpressApp.TemplateContext,System.Collections.Generic.ICollection`1,System.Boolean)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="context">
		A <b>TemplateContext</b> object that represents the new Window's context. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Frame.Context"/> property.

            </param>
            <param name="controllers">
		An ICollection@lt;Controller@gt; collection that contains the additional controllers that must be activated for the new Window.

            </param>
            <param name="isMain">
		<b>true</b> if the newly created Window is main; otherwise, <b>false</b>.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Window"/> object.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.GetTemplateCustomizationNode(DevExpress.ExpressApp.Templates.IFrameTemplate)">
            <summary>
                <para>Returns the Application Model node where settings of a specified Template are stored.
</para>
            </summary>
            <param name="template">
		An object that contains members of the <see cref="T:DevExpress.ExpressApp.Templates.IFrameTemplate"/> interface.

            </param>
            <returns>A <b>DictionaryNode</b> object that represents an Application Model node with a Template's settings.

</returns>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.PropertyChanged">
            <summary>
                <para>Occurs when the <see cref="P:DevExpress.ExpressApp.XafApplication.ApplicationName"/>, <see cref="P:DevExpress.ExpressApp.XafApplication.Security"/> or <see cref="P:DevExpress.ExpressApp.XafApplication.Connection"/> property is changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.BeginInit">
            <summary>
                <para>Starts the XafApplication's initialization. Initialization occurs at runtime.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.EndInit">
            <summary>
                <para>Ends the XafApplication's initialization.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Setup">
            <summary>
                <para>Initializes the newly created XafApplication class instance.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.Connection">
            <summary>
                <para>Specifies the connection to the database used by the application.
</para>
            </summary>
            <value>The IDbConnection object representing an open connection to a data source.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.Modules">
            <summary>
                <para>Provides access to the module list used by the application.
</para>
            </summary>
            <value>A <b>ModuleList</b> collection that contains all modules used in the current application.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.Security">
            <summary>
                <para>Provides access to the Security strategy used in the application.
</para>
            </summary>
            <value>An object that contains the <b>ISecurity</b> interface's members.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CustomizeFormattingCulture">
            <summary>
                <para>Occurs after a formatting culture has been set internally. 
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CustomizeLanguage">
            <summary>
                <para>Occurs after a language has been set for the application internally.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomObjectSpaceProvider">
            <summary>
                <para>Occurs when setting up the application.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.DatabaseUpdateMode">
            <summary>
                <para>Specifies the mode of updating the database.
</para>
            </summary>
            <value>A <b>DatabaseUpdateMode</b> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.IsInitializing">
            <summary>
                <para>Indicates whether the application component is currently being initialized.
</para>
            </summary>
            <value><b>true</b> if the application is currently being initialized; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.IsLoading">
            <summary>
                <para>Indicates whether the application component is currently being initialized.
</para>
            </summary>
            <value><b>true</b> if the application is currently being initialized; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.IgnoredExceptions">
            <summary>
                <para>Returns a collection of exceptions that are not to be reported by the application.
</para>
            </summary>
            <value>An IList@lt;Type@gt; collection containing the errors that are not to be reported.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.Site">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value>An object implementing the ISite interface. This object is associated with the application while it's designed.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.IsConnectionOwner">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value><b>true</b> if the current XafApplication object owns the connection; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.Dispose">
            <summary>
                <para>Releases the resources used by the <b>XafApplication</b>. 
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomPropertyCollectionSource">
            <summary>
                <para>Occurs when creating a collection source for a nested List View that displays a collection property.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomLogonWindowControllers">
            <summary>
                <para>Occurs when creating Controllers for a Logon Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.XafApplication.CreateCustomLogonWindowObjectSpace">
            <summary>
                <para>Occurs when creating an Object Space for a Logon Window's Detail View.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreatePropertyCollectionSource(DevExpress.ExpressApp.ObjectSpace,System.Type,System.Object,DevExpress.ExpressApp.DC.IMemberInfo,System.String)">
            <summary>
                <para>Creates a collection source for a nested List View that displays a collection property.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object used to retrieve the object for the created collection source.

            </param>
            <param name="masterObjectType">
		The type of the object whose collection property is about to be displayed.


            </param>
            <param name="masterObject">
		An object whose collection property is about to be displayed.

            </param>
            <param name="memberDescriptor">
		An <b>IMemberInfo</b> object that defines the collection property to be displayed.

            </param>
            <param name="listViewID">
		A string representing an identifier of the List View for which a collection source is created.

            </param>
            <returns>A <b>PropertyCollectionSource</b> object representing a collection source for a nested List View.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.XPDictionary">
            <summary>
                <para>Provides access to the Object Space Provider's metadata provider.
</para>
            </summary>
            <value>The <b>XPDictionary</b> class' descendant.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.SetFormattingCulture(System.String)">
            <summary>
                <para>Sets the specified formatting cultuure for the current application.
</para>
            </summary>
            <param name="formattingCultureName">
		A string value representing the name of the formatting culture that must be used in the application.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.SetLanguage(System.String)">
            <summary>
                <para>Sets the specified language for the current application.
</para>
            </summary>
            <param name="languageName">
		A string value representing the name of the language that must be used in the application.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.ResourcesExportedToModel">
            <summary>
                <para>Provides access to a collection of Resource Localizers used in the current application to extend the Application Model's Localization node.
</para>
            </summary>
            <value>An <b>IList@lt;Type@gt;</b> collection of Resource Localizer types.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateFrame(DevExpress.ExpressApp.TemplateContext)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="context">
		A <b>TempalteContext</b> structure that indicates a context for the created Frame.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Frame"/> object.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.XafApplication.CurrentAspectProvider">
            <summary>
                <para>Returns an <b>ICurrentAspectProvider</b> object that supplies culture-specific information.
</para>
            </summary>
            <value>An <b>ICurrentAspectProvider</b> object that supplies culture-specific information.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.CreateListView(DevExpress.ExpressApp.ObjectSpace,System.Type,System.Boolean)">
            <summary>
                <para>Creates a List View used for the objects of the specified type, by default.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object representing the Object Space used to retrieve objects to the created List View's Collection Source.

            </param>
            <param name="objectType">
		A <b>System.Type</b> object representing a business object type.

            </param>
            <param name="isRoot">
		<b>true</b> if the new List View is root; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.IsRoot"/> property.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.ListView"/> object representing the objects of the specified type.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.GetObjectSpaceToShowViewFrom(DevExpress.ExpressApp.Frame)">
            <summary>
                <para>Returns an <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> in which a Detail View should be created to be displayed via the <see cref="M:DevExpress.ExpressApp.ShowViewStrategyBase.ShowView"/> method.
</para>
            </summary>
            <param name="sourceFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> from which the <b>ShowView</b> method will be invoked.

            </param>
            <returns>An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> in which a Detail View should be created to be displayed via the <b>ShowView</b> method.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.XafApplication.ShowDetailViewFrom(DevExpress.ExpressApp.Frame)">
            <summary>
                <para>Indicates whether a Views invoked from the specified <see cref="T:DevExpress.ExpressApp.Frame"/> can be displayed in a new <see cref="T:DevExpress.ExpressApp.Window"/>.
</para>
            </summary>
            <param name="sourceFrame">
		The currently active <see cref="T:DevExpress.ExpressApp.Frame"/> from which a Detail View is going to be invoked.

            </param>
            <returns><b>true</b> if a Detail View can be displayed in a new Window; <b>false</b> if a Detail View can be displayed in the specified Frame only.
</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.SingleChoiceActionExecuteEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.SingleChoiceAction.Execute"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SingleChoiceActionExecuteEventHandler.Invoke(System.Object,DevExpress.ExpressApp.Actions.SingleChoiceActionExecuteEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.SingleChoiceAction.Execute"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender (typically a <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/> object).

            </param>
            <param name="e">
		A <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceActionExecuteEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.SingleChoiceActionExecuteEventArgs">

            <summary>
                <para>Represents arguments passed to a Single Choice Action's <see cref="E:DevExpress.ExpressApp.Actions.SingleChoiceAction.Execute"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SingleChoiceActionExecuteEventArgs.#ctor(DevExpress.ExpressApp.Actions.ActionBase,DevExpress.ExpressApp.ISelectionContext,DevExpress.ExpressApp.Actions.ChoiceActionItem)">
            <summary>
                <para>Initializes a new instance of the SingleChoiceActionExecuteEventArgs class.
</para>
            </summary>
            <param name="action">
		An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object that represents the Action whose execution has raised the <see cref="E:DevExpress.ExpressApp.Actions.SingleChoiceAction.Execute"/> event. This parameter value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBaseEventArgs.Action"/> property.


            </param>
            <param name="context">
		An instance of the class that implements the <b>ISelectionContext</b> interface. This parameter value is used to specify the <see cref="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.SelectedObjects"/> and <see cref="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.CurrentObject"/> properties.

            </param>
            <param name="selectedItem">
		A <b>ChoiceActionItem</b> object that represents the Single Choice Action's selected object. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.SingleChoiceActionExecuteEventArgs.SelectedChoiceActionItem"/> property.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.SingleChoiceActionExecuteEventArgs.SelectedChoiceActionItem">
            <summary>
                <para>Provides access to a Single Choice Action's selected item.
</para>
            </summary>
            <value>A <b>ChoiceActionItem</b> object that represents the Single Choice Action's selected item.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.SingleChoiceAction">

            <summary>
                <para>Represents a Single Choice Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SingleChoiceAction.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Creates a new Single Choice Action and initializes its container.
</para>
            </summary>
            <param name="container">
		An object that includes members of the <b>IContainer</b> interface. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SingleChoiceAction.#ctor(DevExpress.ExpressApp.Controller,System.String,System.String)">
            <summary>
                <para>Creates a new instance of the SingleChoiceAction class and initializes its properties.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Single Choice Action is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Single Choice Action's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A string value that represents a category of the created Single Choice Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.SingleChoiceAction.Execute">
            <summary>
                <para>Occurs  when an end-user clicks the required item located in the Single Choice Action's item list.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.SingleChoiceAction.SelectedItemChanged">
            <summary>
                <para>Occurs when a Single Choice Action's item is changed by an end-user.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SingleChoiceAction.DoExecute(DevExpress.ExpressApp.Actions.ChoiceActionItem)">
            <summary>
                <para>Raises the <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executing"/>, <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executed"/>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ProcessCreatedView"/> and <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ExecuteCompleted"/> events one after another.
</para>
            </summary>
            <param name="selectedItem">
		A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> object that represents the Single Choice Action's currently selected item.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.SingleChoiceAction.ItemType">
            <summary>
                <para>Specifies the type of a Single Choice Action's items from the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceActionItemType"/> enumeration value identifying a Single Choice Action's items kind.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.SingleChoiceAction.SelectedItem">
            <summary>
                <para>Specifies a Single Choice Action's selected item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> object that represents the Single Choice Action's item which is currently selected.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SingleChoiceAction.#ctor(DevExpress.ExpressApp.Controller,System.String,DevExpress.Persistent.Base.PredefinedCategory)">
            <summary>
                <para>Creates a new instance of the SingleChoiceAction class and initializes its properties.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Single Choice Action is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Single Choice Action's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A <b>PredifinedCategory</b> enumeration value that represents a category of the created Single Choice Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SingleChoiceAction.#ctor">
            <summary>
                <para>Creates an instance of the SingleChoiceAction class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.SingleChoiceAction.SelectedIndex">
            <summary>
                <para>Specifies the index of the selected item in a Single Choice Action's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> list.
</para>
            </summary>
            <value>An integer value representing an index of the Single Choice Action's currently selected item.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.SingleChoiceAction.ItemTypeChanged">
            <summary>
                <para>Occurs when a Single Choice Action's <see cref="P:DevExpress.ExpressApp.Actions.SingleChoiceAction.ItemType"/> property is changed.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventHandler.Invoke(System.Object,DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender (typically a <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> object).

            </param>
            <param name="e">
		A <see cref="T:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs">

            <summary>
                <para>Represents arguments passed to a Simple Action's <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.#ctor(DevExpress.ExpressApp.Actions.ActionBase,DevExpress.ExpressApp.ISelectionContext)">
            <summary>
                <para>Initializes a new instance of the SimpleActionExecuteEventArgs class.
</para>
            </summary>
            <param name="action">
		An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object that represents the Action whose execution has raised the <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/> event. This parameter value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBaseEventArgs.Action"/> property.


            </param>
            <param name="context">
		An instance of the class that implements the <b>ISelectionContext</b> interface. This parameter value is used to specify the <see cref="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.SelectedObjects"/> and <see cref="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.CurrentObject"/> properties.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.CurrentObject">
            <summary>
                <para>Provides access to the current object represented by the currently displayed View.
</para>
            </summary>
            <value>An Object which is currently selected in a View.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.SelectedObjects">
            <summary>
                <para>Provides access to the objects selected in the currently invoked View.
</para>
            </summary>
            <value>A list of objects that are selected in the current View.

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.SimpleAction">

            <summary>
                <para>Represents a Simple Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SimpleAction.#ctor(DevExpress.ExpressApp.Controller,System.String,System.String)">
            <summary>
                <para>Creates a new instance of the SimpleAction class and initializes its properties.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Simple Action is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Simple Action's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A string value that represents a category of the created Simple Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SimpleAction.#ctor(DevExpress.ExpressApp.Controller,System.String,System.String,DevExpress.ExpressApp.Actions.SimpleActionExecuteEventHandler)">
            <summary>
                <para>Creates a new instance of the <see cref="T:DevExpress.ExpressApp.Actions.SimpleAction"/> class and initializes its properties.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created SimpleAction is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Simple's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A string value that represents a category of the created Simple Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>
            <param name="execute">
		A <see cref="T:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventHandler"/> object that represents a handler for the <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/> event of the created Simple Action.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SimpleAction.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Creates a new Simple Action and initializes its container.

</para>
            </summary>
            <param name="container">
		An object that includes members of the <b>IContainer</b> interface. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute">
            <summary>
                <para>Occurs when an end-user clicks a Simple Action's control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SimpleAction.#ctor(DevExpress.ExpressApp.Controller,System.String,DevExpress.Persistent.Base.PredefinedCategory)">
            <summary>
                <para>Creates a new instance of the SimpleAction class and initializes its properties.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Simple Action is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Simple Action Action's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A <b>PredifinedCategory</b> enumeration value that represents a category of the created Simple Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SimpleAction.#ctor">
            <summary>
                <para>Creates an instance of the SimpleAction class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.SimpleAction.DoExecute">
            <summary>
                <para>Raises the <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executing"/>, <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executed"/>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ProcessCreatedView"/> and <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ExecuteCompleted"/> events, one after another.
</para>
            </summary>
            <returns><b>true</b> if all the events have been raised successfully; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.Execute"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventHandler.Invoke(System.Object,DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.Execute"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender (typically a <see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowAction"/> object).

            </param>
            <param name="e">
		A <see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventArgs">

            <summary>
                <para>Represents arguments passed to a Popup Window Show Action's <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.Execute"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventArgs.#ctor(DevExpress.ExpressApp.Actions.ActionBase,DevExpress.ExpressApp.ISelectionContext,DevExpress.ExpressApp.Window)">
            <summary>
                <para>Creates a new instance of the PopupWindowShowActionExecuteEventArgs class and initializes its properties.
</para>
            </summary>
            <param name="action">
		An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object that represents the Action whose execution has raised the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.Execute"/> event. This parameter value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBaseEventArgs.Action"/> property.


            </param>
            <param name="context">
		An instance of the class that implements the <b>ISelectionContext</b> interface. This parameter value is used to specify the <see cref="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.SelectedObjects"/> and <see cref="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.CurrentObject"/> properties.

            </param>
            <param name="window">
		A <see cref="T:DevExpress.ExpressApp.Window"/> object that represents the current Popup Window Show Action's popup Window.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventArgs.CanCloseWindow">
            <summary>
                <para>Specifies whether to close a Popup Window Show Action's popup Window after clicking its accepting button.
</para>
            </summary>
            <value><b>true</b> if the current popup Window must be closed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventArgs.PopupWindow">
            <summary>
                <para>Provides access to a Popup Window Show Actions's popup Window.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Window"/> object that represents the current Popup Window Show Action's popup Window.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.PopupWindowShowAction">

            <summary>
                <para>Represents a Popup Window Show Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowAction.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Creates a new Popup Window Show Action and initializes its container.
</para>
            </summary>
            <param name="container">
		An object that includes members of the <b>IContainer</b> interface. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowAction.#ctor(DevExpress.ExpressApp.Controller,System.String,System.String)">
            <summary>
                <para>Creates a new instance of the PopupWindowShowAction class and initializes its properties.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Popup Window Show Action is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Popup Window Show Action's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A string value that represents a category of the created Popup Window Show Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.Cancel">
            <summary>
                <para>Occurs when an end-user clicks the cancelling button on the Popup Window Show Action's popup Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizePopupWindowParams">
            <summary>
                <para>Occurs when generating a popup Window for a Popup Window Show Action.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizeTemplate">
            <summary>
                <para>Occurs when setting a Template for a Popup Window Show Action's popup Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.Execute">
            <summary>
                <para>Occurs when an end-user clicks the accepting button on the Popup Window Show Action's popup Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.OnCancel">
            <summary>
                <para>Occurs when an end-user clicks the cancelling button on the Popup Window Show Action's popup Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.OnCustomizePopupWindowParams">
            <summary>
                <para>Occurs when generating a popup Window for a Popup Window Show Action.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.PopupWindowShowAction.DefaultAcceptButtonCaption">
            <summary>
                <para>Specifies the default caption of the accepting button located on the Popup Window Show Action's popup Window. By default, this field value is "OK".
</para>
            </summary>
            <returns>A string value that represents the default caption of the accepting button located on the Popup Window Show Action's popup Window. 
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.PopupWindowShowAction.DefaultCancelButtonCaption">
            <summary>
                <para>Specifies the default caption of the cancelling button located on the Popup Window Show Action's popup Window. By default, this field value is "Cancel".
</para>
            </summary>
            <returns>A string value that represents the default caption of the cancelling button located on the Popup Window Show Action's popup Window. 
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowAction.DoExecute(DevExpress.ExpressApp.Window)">
            <summary>
                <para>Raises the <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executing"/>, <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executed"/>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ProcessCreatedView"/> and <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ExecuteCompleted"/> events one after another, and determines whether to close a Popup Window Show Action's popup Window.
</para>
            </summary>
            <param name="window">
		A <see cref="T:DevExpress.ExpressApp.Window"/> object that represents the current Popup Window Show Action's popup Window.

            </param>
            <returns><b>true</b> if the current Popup Window Show Action's popup Window must be closed; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowAction.GetPopupWindowParams">
            <summary>
                <para>Creates and returns the <see cref="T:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs"/> object to be used when generating a Popup Window Show Action's popup Window.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowActionExecuteEventArgs"/> object containing data required to generate the current Popup Window Show Action's popup Window.

</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.PopupWindowShowAction.AcceptButtonCaption">
            <summary>
                <para>Specifies the caption of the accepting button on the Popup Window Show Action's popup Window.
</para>
            </summary>
            <value>A string value that represents the accepting button's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CancelButtonCaption">
            <summary>
                <para>Specifies the caption of the cancelling button on the Popup Window Show Action's popup Window.
</para>
            </summary>
            <value>A string value that represents the cancelling button's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.PopupWindowShowAction.Modal">
            <summary>
                <para>Indicates whether a Popup Window Show Action's popup Window is modal.
</para>
            </summary>
            <value><b>true</b> if the current Popup Window Show Action's popup Window is modal; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowAction.#ctor(DevExpress.ExpressApp.Controller,System.String,DevExpress.Persistent.Base.PredefinedCategory)">
            <summary>
                <para>Creates a new instance of the PopupWindowShowAction class and initializes its properties.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Popup Window Show Action is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Popup Window Show Action Action's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A <b>PredifinedCategory</b> enumeration value that represents a category of the created Popup Window Show Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowAction.#ctor">
            <summary>
                <para>Creates an instance of the PopupWindowShowAction class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowAction.OnCustomizeTemplate(DevExpress.ExpressApp.Templates.IFrameTemplate,DevExpress.ExpressApp.TemplateContext)">
            <summary>
                <para>Raises the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizeTemplate"/> event for a Popup Window Show Action.
</para>
            </summary>
            <param name="frameTemplate">
		An object that contains members of the <see cref="T:DevExpress.ExpressApp.Templates.IFrameTemplate"/> interface. This object represents the Template of the current Popup Window Show Action's popup Window.

            </param>
            <param name="context">
		A <b>TemplateContext</b> object that represents the context of the Popup Window Show Action's popup Window.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.PopupWindowShowAction.IsModal">
            <summary>
                <para>Indicates whether a Popup Window Show Action's popup Window is modal.
</para>
            </summary>
            <value><b>true</b> if the current Popup Window Show Action's popup Window is modal; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.PopupWindowShowAction.IsSizeable">
            <summary>
                <para>Indicates whether a Popup Window Show Action's popup Window can be resized by an end-user.
</para>
            </summary>
            <value><b>true</b> if an end-user can resize the current Popup Window Show Action's popup Window; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.PopupWindowShowAction.RaiseCancel">
            <summary>
                <para>Raises the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.Cancel"/> event.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ParametrizedActionExecuteEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.ParametrizedAction.Execute"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ParametrizedActionExecuteEventHandler.Invoke(System.Object,DevExpress.ExpressApp.Actions.ParametrizedActionExecuteEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.ParametrizedAction.Execute"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender (typically a <see cref="T:DevExpress.ExpressApp.Actions.ParametrizedAction"/> object).

            </param>
            <param name="e">
		A <see cref="T:DevExpress.ExpressApp.Actions.ParametrizedActionExecuteEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ParametrizedActionExecuteEventArgs">

            <summary>
                <para>Represents arguments passed to a Parametrized Action's <see cref="E:DevExpress.ExpressApp.Actions.ParametrizedAction.Execute"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ParametrizedActionExecuteEventArgs.#ctor(DevExpress.ExpressApp.Actions.ActionBase,DevExpress.ExpressApp.ISelectionContext,System.Object)">
            <summary>
                <para>Initializes a new instance of the ParametrizedActionExecuteEventArgs class.
</para>
            </summary>
            <param name="action">
		An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object that represents the Action whose execution has raised the <see cref="E:DevExpress.ExpressApp.Actions.ParametrizedAction.Execute"/> event. This parameter value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBaseEventArgs.Action"/> property.


            </param>
            <param name="context">
		An instance of the class that implements the <b>ISelectionContext</b> interface. This parameter value is used to specify the <see cref="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.SelectedObjects"/> and <see cref="P:DevExpress.ExpressApp.Actions.SimpleActionExecuteEventArgs.CurrentObject"/> properties.

            </param>
            <param name="parameterCurrentValue">
		An object that represents the currently validated value of the Parametrized Action's editor.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ParametrizedActionExecuteEventArgs.ParameterCurrentValue">
            <summary>
                <para>Returns the value that has been entered into a Parametrized Action's editor.
</para>
            </summary>
            <value>An object that represents the currently validated value of the Parametrized Action's editor.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ParametrizedAction">

            <summary>
                <para>Represetns a Parametrized Action.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ParametrizedAction.#ctor(DevExpress.ExpressApp.Controller,System.String,System.String,System.Type)">
            <summary>
                <para>Initializes a new instance of the ParametrizedAction class.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Parametrized Action is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Parametrized Action's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A string value that represents a category of the created Parametrized Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>
            <param name="valueType">
		A <see cref="T:System.Type"/> value that specifies the type of the created Parametrized Action's <see cref="P:DevExpress.ExpressApp.Actions.ParametrizedAction.Value"/>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ParametrizedAction.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Creates a new Parametrized Action and initializes its container.
</para>
            </summary>
            <param name="container">
		An object that includes members of the <b>IContainer</b> interface. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ParametrizedAction.Execute">
            <summary>
                <para>Occurs after a Parametrized Action's editor value has been validated.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ParametrizedAction.ValueChanged">
            <summary>
                <para>Occurs after an end-user has typed and submitted a parameter in the Action's editor, and after the <see cref="P:DevExpress.ExpressApp.Actions.ParametrizedAction.Value"/> property has been changed in code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ParametrizedAction.DoExecute(System.Object)">
            <summary>
                <para>Raises the <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executing"/>, <see cref="E:DevExpress.ExpressApp.Actions.SimpleAction.Execute"/>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executed"/>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ProcessCreatedView"/> and <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ExecuteCompleted"/> events one after another.
</para>
            </summary>
            <param name="parameterNewValue">
		An object that represents the value currently entered into the Parametrized Action's editor.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ParametrizedAction.CurrentValue">
            <summary>
                <para>Specifies the value currently entered into the a Parametrized Action's editor.
</para>
            </summary>
            <value>An object value that represents the current value of the Parametrized Action's editor.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ParametrizedAction.ShortCaption">
            <summary>
                <para>Specifies a caption of the button attached to a Parametrized Action's editor.
</para>
            </summary>
            <value>A string value representing a caption of the button displayed for the current Parametrized Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ParametrizedAction.Value">
            <summary>
                <para>Specifies the value currently entered into the a Parametrized Action's editor.
</para>
            </summary>
            <value>An object value that represents the current value of the Parametrized Action's editor.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ParametrizedAction.ValueType">
            <summary>
                <para>Specifies the type of values that must be entered in a Parametrized Action's editor.
</para>
            </summary>
            <value>A <see cref="T:System.Type"/> value that indicates the type of the current Parametrized Action's <see cref="P:DevExpress.ExpressApp.Actions.ParametrizedAction.Value"/>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ParametrizedAction.#ctor(DevExpress.ExpressApp.Controller,System.String,DevExpress.Persistent.Base.PredefinedCategory,System.Type)">
            <summary>
                <para>Initializes a new instance of the ParametrizedAction class.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Parametrized Action is added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A string value representing the created Parametrized Action's identifier. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.ID"/> property.

            </param>
            <param name="category">
		A <b>PredifinedCategory</b> enumeration value that represents a category of the created Parametrized Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property and used to map this Action to the appropriate Action Container.

            </param>
            <param name="valueType">
		A <see cref="T:System.Type"/> value that specifies the type of the created Parametrized Action's <see cref="P:DevExpress.ExpressApp.Actions.ParametrizedAction.Value"/>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ParametrizedAction.#ctor">
            <summary>
                <para>Creates a new Parametrized Action.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizePopupWindowParams"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventHandler.Invoke(System.Object,DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizePopupWindowParams"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender (typically a <see cref="T:DevExpress.ExpressApp.Actions.PopupWindowShowAction"/> object).

            </param>
            <param name="e">
		A <see cref="T:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs">

            <summary>
                <para>Represents arguments passed to a Popup Window Show Action's <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizePopupWindowParams"/> event.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.Action">
            <summary>
                <para>Provides access to the Popup Window Show Action for which the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizePopupWindowParams"/> event has been raised.
</para>
            </summary>
            <value>A PopupWindowShowAction object that represents the parent Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.Context">
            <summary>
                <para>Specifies the <see cref="P:DevExpress.ExpressApp.Frame.Context"/> of the popup window which is customized by a <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizePopupWindowParams"/> event's handler.
</para>
            </summary>
            <value>A <b>TemplateContext</b> object that represents the popup window's context.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.ContextName">
            <summary>
                <para>Specifies the context of the popup window that is being customized by the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizePopupWindowParams"/> event.
</para>
            </summary>
            <value>A <b>TemplateContext</b> object that represents the popup Window's context.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.DialogController">
            <summary>
                <para>Specifies a Dialog Controller which is activated for a Popup Window Show Action's popup Window.
</para>
            </summary>
            <value>A <b>DialogController</b> object that represents a special Controller for the popup Window.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.IsSizeable">
            <summary>
                <para>Specifies whether the popup Window created for a Popup Window Show Action is sizable.
</para>
            </summary>
            <value><b>true</b> if the popup Window is sizable; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.View">
            <summary>
                <para>Specifies the View that should be displayed by the Popup Window Show Action's popup Window.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.View"/> object that actuallly represents a <see cref="T:DevExpress.ExpressApp.DetailView"/> or <see cref="T:DevExpress.ExpressApp.ListView"/>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.#ctor(DevExpress.ExpressApp.Actions.PopupWindowShowAction,DevExpress.ExpressApp.XafApplication)">
            <summary>
                <para>Initializes a new instance of the CustomizePopupWindowParamsEventArgs class.
</para>
            </summary>
            <param name="action">
		An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object that represents the Popup Window Show Action whose execution has raised the <see cref="E:DevExpress.ExpressApp.Actions.PopupWindowShowAction.CustomizePopupWindowParams"/> event. This parameter value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.Action"/> property.


            </param>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.Application"/> property.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.Application">
            <summary>
                <para>Provides access to a <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that can be used manage the current application.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.CustomizePopupWindowParamsEventArgs.Manager">
            <summary>
                <para>Provides access to a Manager object that can be used to manage the application.
</para>
            </summary>
            <value>A <b>Manager</b> object that provides methods and properties to manage the application.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ChoiceActionItemCollection">

            <summary>
                <para>Represents a binding list of <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> objects.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItemCollection.#ctor">
            <summary>
                <para>Creates a new ChoiceActionItemCollection object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItemCollection.AddRange(System.Collections.Generic.IList`1)">
            <summary>
                <para>Adds specified Choice Action Items to a Choice Action's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection.
</para>
            </summary>
            <param name="list">
		An IList@lt;ChoiceActionItem@gt; object that represents a collection of <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> objects to be added.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItemCollection.Find(System.Object)">
            <summary>
                <para>Returns an item that corresponds to the specified data.
</para>
            </summary>
            <param name="data">
		An object associated with the ChoiceActionItem to be found.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> object representing the found object.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItemCollection.FirstActiveItem">
            <summary>
                <para>Returns the Choice Action Item which is the first that is currently active.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> object representing the first active item in the collection.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItemCollection.Find(System.String,DevExpress.ExpressApp.Actions.ChoiceActionItemFindType,DevExpress.ExpressApp.Actions.ChoiceActionItemFindTarget)">
            <summary>
                <para>Returns the item that corresponds to the specified parameters.
</para>
            </summary>
            <param name="itemId">
		A string value that specifies the identifier of the Action Item to be found.

            </param>
            <param name="recursive">
		A <b>ChoiceActionItemFindType</b> enumeration value.

            </param>
            <param name="target">
		A <b>ChoiceActionItemFindTarget</b> enumeration value.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> object that matches the specified parameters.
</returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ChoiceActionItem">

            <summary>
                <para>Represents a Choice Action's item.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.#ctor(System.String,System.Object)">
            <summary>
                <para>Creates a ChoiceActionItem and initializes its caption and data source.
</para>
            </summary>
            <param name="caption">
		A string value that represents the created Choice Action Item's caption. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Caption"/> property.

            </param>
            <param name="data">
		An Object which is associated with the created Choice Action Item. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.ObjectData"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.#ctor">
            <summary>
                <para>Initializes a new instance of the ChoiceActionItem class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.#ctor(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Creates a new ChoiceActionItem and initializes its Application Model node.
</para>
            </summary>
            <param name="info">
		A <b>DictionaryNode</b> object representing the Application Model node, containing information on the created Choice Action Item. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Info"/> property.


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.#ctor(DevExpress.ExpressApp.DictionaryNode,System.Object)">
            <summary>
                <para>Creates a new ChoiceActionItem and initializes its Application Model node and data source.

</para>
            </summary>
            <param name="info">
		A <b>DictionaryNode</b> object representing the Application Model node, containing information on the created Choice Action Item. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Info"/> property.


            </param>
            <param name="data">
		An Object which is associated with the created Choice Action Item. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.ObjectData"/> property.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ChoiceActionItem.StateChanged">
            <summary>
                <para>Occurs after one of the Choice Action Item's properties has been changed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ChoiceActionItem.DisplayMember">
            <summary>
                <para>You don't need to use this field. It's for internal use only.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.ToString">
            <summary>
                <para>Returns a Choice Action Item's textual representation.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value which is the current Choice Action Item's textual representation.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.BeginGroup">
            <summary>
                <para>Specifies whether the current Choice Action Item starts a group.
</para>
            </summary>
            <value><b>true</b> if the current Choice Action Item starts a group; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Caption">
            <summary>
                <para>Specifies a Choice Action Item's caption.
</para>
            </summary>
            <value>A string value that represents the current Choice Action Item's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.ChildItems">
            <summary>
                <para>Provides access to a Choice Action Item's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Items"/> collection.
</para>
            </summary>
            <value>A <b>ChoiceActionItemCollection</b> object that represents the current Choice Action Item's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Items"/> collection.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.EnabledList">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make a Choice Action Item enabled or disabled . 
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a list of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.ImageName">
            <summary>
                <para>Specifies the name of the image which is displayed by the Choice Action Item's control.
</para>
            </summary>
            <value>A string value that represents the name of the current Choice Action Item image.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Info">
            <summary>
                <para>Provides access to information on a Choice Action Item, which is stored in an Application Model node.
</para>
            </summary>
            <value>A <b>DictionaryNode</b> object, representing the current Choice Action Item's Application Model node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Items">
            <summary>
                <para>Provides access to a Choice Action Item's item collection.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItemCollection"/> object that represents the current Choice Action Item's item collection.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.ObjectData">
            <summary>
                <para>Specifies the object which is associated with a Choice Action Item.
</para>
            </summary>
            <value>An Object which is associated with the current Choice Action Item.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.StringData">
            <summary>
                <para>Specifies string data which is associated with a Choice Action Item.
</para>
            </summary>
            <value>A string value which is associated with the current Choice Action Item.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Id">
            <summary>
                <para>Returns a Choice Action Item's identifier.
</para>
            </summary>
            <value>A string value that represents the current Choice Action Item's identifier.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.RemoveEnabledItem(System.String)">
            <summary>
                <para>Removes a specified element from a Choice Action Item's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Enabled"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a "key" part of the element to be removed from the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Enabled"/> collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.SetEnabledByKey(System.String,System.Boolean)">
            <summary>
                <para>Adds an element to a Choice Action Item's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Enabled"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a reason for making the current Choice Action Item enabled/disabled.


            </param>
            <param name="enabled">
		<b>true</b> if you need to make the current Choice Action Item enalbled; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Data">
            <summary>
                <para>Specifies the object which is associated with a Choice Action Item.
</para>
            </summary>
            <value>An Object which is associated with the current Choice Action Item.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.GetItemPath">
            <summary>
                <para>Returns a full path from the current Item to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection's first-level parent Item.
</para>
            </summary>
            <returns>A string value representing a chain of items from the current Item to the root parent Item.

</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.ParentItem">
            <summary>
                <para>Returns the current ChoiceActionItem's parent item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> object representing the current Item's parent item.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Enabled">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make a <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> enabled\disalbed or to determine its enabled state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Visible">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make a <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> active/inactive or to determine its active state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ChoiceActionItem.Changed">
            <summary>
                <para>Occurs after one of the Choice Action Item's properties has been changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.VisibleItemsBehavior">
            <summary>
                <para>Specifies whether to display a Choice Action Item when its child items are deactivated.
</para>
            </summary>
            <value>An <b>ActiveItemsBehavior</b> enumeration value specifying the display mode for the current Choice Action Item.

</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.RemoveVisibleItem(System.String)">
            <summary>
                <para>Removes a specified element from a Choice Action Item's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Active"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a "key" part of the element to be removed from the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Active"/> collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.SetVisibleByKey(System.String,System.Boolean)">
            <summary>
                <para>Adds an element to a ChoiceActionItem's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Active"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a reason for the current Choice Action Item activation/deactivation.


            </param>
            <param name="visible">
		A Boolean value that indicates whether to activate or deactivate the current Choice Action Item.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Active">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make a <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItem"/> active/inactive, or to determine its active state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.ActiveItemsBehavior">
            <summary>
                <para>Specifies whether to display a Choice Action Item when its child items are deactivated.
</para>
            </summary>
            <value>An <b>ActiveItemsBehavior</b> enumeration value specifying the display mode for the current Choice Action Item.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.VisibleList">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to activate or deactivate a ChoiceActionItem. 
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a list of key/value elements.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ChoiceActionItem.#ctor(System.String,System.String,System.Object)">
            <summary>
                <para>Initializes a new instance of the ChoiceActionItem class.
</para>
            </summary>
            <param name="id">
		A String value representing the ID of the created Choice Action Item. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Id"/> property.

            </param>
            <param name="caption">
		A string value that represents the created Choice Action Item's caption. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.Caption"/> property.

            </param>
            <param name="data">
		An Object which is associated with the created Choice Action Item. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionItem.ObjectData"/> property.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ChoiceActionBase">

            <summary>
                <para>Represents the ancestor for Actions that provide items to be chosen by an end-user.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ChoiceActionBase.ItemsChanged">
            <summary>
                <para>Occurs when an Choice Action's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> property is changed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ChoiceActionBase.DefaultItemCaption">
            <summary>
                <para>Used to form a default caption for a Choice Action's item. By default, its value is "Entry". This value is appended by an order index.
</para>
            </summary>
            <returns>A string value representing the base for a Choice Action's default caption.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.ItemHierarchyType">
            <summary>
                <para>Specifies how a Choice Action's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection is displayed.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItemHierarchyType"/> enumeration value, identifying the type of Choice Action items arrangement.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items">
            <summary>
                <para>Specifies a Choice Action's item collection.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionItemCollection"/> object that represents a collection of a Choice Action's items.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.EmptyItemsBehavior">
            <summary>
                <para>Specifies how to display a Choice Action if its <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection is empty.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.EmptyItemsBehavior"/> enumeration value identifying the Choice Action behavior.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.CreateGroups">
            <summary>
                <para>Specifies whether to individually display the first-level items of a Choice Action that has a tree-like Items collection.

</para>
            </summary>
            <value><b>true</b> if the Choice Action is displayed by several controls; otherwise, <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ChoiceActionBase.ItemHierarchyTypeChanged">
            <summary>
                <para>Occurs when a Choice Action's <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.ItemHierarchyType"/> property is changed.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ActionUrl">

            <summary>
                <para>Represents an Action which is used to load a specified page.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionUrl.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Creates an ActionUrl and initializes its container.
</para>
            </summary>
            <param name="container">
		An object that includes members of the <b>IContainer</b> interface. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionUrl.#ctor(DevExpress.ExpressApp.Controller,System.String,System.String)">
            <summary>
                <para>Creates an ActionUrl and initializes its properties by specified values.
</para>
            </summary>
            <param name="owner">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object that represents a Controller to which the created Action will be added. This object is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Controller"/> property.

            </param>
            <param name="id">
		A String value representing the ID of the created Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Id"/> property.

            </param>
            <param name="category">
		A String value that represents a category of the created Action. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> property, and is used to map this Action to the appropriate Action Container.


            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionUrl.OpenInNewWindow">
            <summary>
                <para>Specifies whether to load an Action's page in a new window.

</para>
            </summary>
            <value><b>true</b> if the page is opened in a new window; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionUrl.TextFieldName">
            <summary>
                <para>Specifies the name of the property whose value is inserted in the <see cref="P:DevExpress.ExpressApp.Actions.ActionUrl.TextFormatString"/> property value.
</para>
            </summary>
            <value>A string value that represents a persistent object's property to be inserted into the <see cref="P:DevExpress.ExpressApp.Actions.ActionUrl.TextFormatString"/> property value.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionUrl.TextFormatString">
            <summary>
                <para>Specifies a caption of an ActionUrl which is displayd in a List View's grid editor.
</para>
            </summary>
            <value>A string that represents a caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionUrl.UrlFieldName">
            <summary>
                <para>Specifies the name of a persistent object's property whose value represents an URL.
</para>
            </summary>
            <value>A string value representing a persistent object's property specifying a URL.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionUrl.UrlFormatString">
            <summary>
                <para>Specifies a URL of the page to be loaded when executing an ActionUrl.

</para>
            </summary>
            <value>A string value that represents an URL.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ActionBaseEventArgs">

            <summary>
                <para>Represents the base class for arguments passed to Action execution handling events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBaseEventArgs.#ctor(DevExpress.ExpressApp.Actions.ActionBase)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Actions.ActionBaseEventArgs"/> class.
</para>
            </summary>
            <param name="action">
		An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object that represents the Action, execution of which has raised the <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executed"/> event. This parameter value is assigned to the <see cref="P:DevExpress.ExpressApp.Actions.ActionBaseEventArgs.Action"/> property.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBaseEventArgs.Action">
            <summary>
                <para>Provides access to the Action being executed.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object that represents the Action whose <b>Execute</b> event has been raised.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBaseEventArgs.ShowViewParameters">
            <summary>
                <para>Provides access to the <b>ShowViewParameters</b> object, specifying a View, displayed after executing the current Action.

</para>
            </summary>
            <value>A <b>ShowViewParameters</b> object that specifies the View created after executing the current Action. 

</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ActionBase">

            <summary>
                <para>Represents the base class for Actions.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ActionBase.Disposing">
            <summary>
                <para>Occurs when disposing of an Action.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ActionBase.Executed">
            <summary>
                <para>Occurs after executing an Action.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ActionBase.Executing">
            <summary>
                <para>Occurs before an end-user performs the operation that leads to raising an Action's <b>Execute</b> event.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ActionBase.ProcessCreatedView">
            <summary>
                <para>Occurs after the <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executed"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionBase.AnyCaption">
            <summary>
                <para>Specifies the caption for the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.TargetViewId"/> property value which means "Any view ID". By default, this field value is set to "Any".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.AssignFrom(DevExpress.ExpressApp.Actions.ActionBase)">
            <summary>
                <para>Shares a specified Action's settings to the current Action.
</para>
            </summary>
            <param name="action">
		A ActionBase object which represents the Action whose settings will be shared with the current Action.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.BeginUpdate">
            <summary>
                <para>Prevents an Action from being updated until the <see cref="M:DevExpress.ExpressApp.Actions.ActionBase.EndUpdate"/> method is called.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.EndUpdate">
            <summary>
                <para>Unlocks an Action after a call to the <see cref="M:DevExpress.ExpressApp.Actions.ActionBase.BeginUpdate"/> method, and causes an immediate update.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.GetFormattedConfirmationMessage">
            <summary>
                <para>Returns a formatted confirmation message displayed when executing an Action.
</para>
            </summary>
            <returns>A string that represents a formatted confirmation message.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.RemoveActiveItem(System.String)">
            <summary>
                <para>Removes a specified element from an Action's <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Active"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a "key" part of the element to be removed from the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Active"/> collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.SetActiveByKey(System.String,System.Boolean)">
            <summary>
                <para>Adds an element to an Action's <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Active"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a reason for activating/deactivating the current Action.


            </param>
            <param name="value">
		A Boolean value that indicates whether to activate or deactivate the current Action.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.SetEnabledByKey(System.String,System.Boolean)">
            <summary>
                <para>Adds an element to an Action's <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Enabled"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a reason for making the current Action enabled/disabled.


            </param>
            <param name="value">
		A Boolean value that indicates whether to make the current Action enabled or disabled.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.ToString">
            <summary>
                <para>Returns an Action's textual representation.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value which is the current Action's textual representation.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.ActionSense">
            <summary>
                <para>Specifies whether an Action is represented by an accept, cancel or ordinal button in a Window Forms application's popup Windows. 
</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.Actions.ActionMeaning"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Caption">
            <summary>
                <para>Specifies an Action's caption.
</para>
            </summary>
            <value>A string property that represents the current Action's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Category">
            <summary>
                <para>Specifies an Action's category.
</para>
            </summary>
            <value>A String value that represents a Category for the current Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.ConfirmationMessage">
            <summary>
                <para>Specifies the message which is displayed when an end-user executes an Action.
</para>
            </summary>
            <value>A String value that represents a confirmation message for the current Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.ContextKind">
            <summary>
                <para>Specifies a context for enabling an Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SelectionDependencyType"/> enumeration value identifying a context type.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Controller">
            <summary>
                <para>Provides access to an Action's Controller.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Controller"/> object representing the current action's Controller.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.CriteriaGroupOperatorType">
            <summary>
                <para>Specifies whether all the currently selected objects must satisfy the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteria"/> criteria to make an Action enabled.
</para>
            </summary>
            <value>A <b>TargetObjectsCriteriaMode</b> enumeration value that indicates whether all selected object or at least one of them must satisfy the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteria"/> criteria.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.DiagnosticInfo">
            <summary>
                <para>Specifies information on an Action. This information is appended to the information on the remaining Actions and their Controllers and displayed via the <b>DiagnosticInfo</b> Action.
</para>
            </summary>
            <value>A string which represent information on the current Action.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.EnablingCriteria">
            <summary>
                <para>Specifies a criteria for enabling an Action.
</para>
            </summary>
            <value>A string value representing a criteria.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.ImageName">
            <summary>
                <para>Specifies a name of the image displayed for an Action.
</para>
            </summary>
            <value>A string value that represents the name of the current Action's image.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.IsDisposed">
            <summary>
                <para>Gets a value indicating whether an Action has been disposed of.
</para>
            </summary>
            <value><b>true</b> if the current Action has been disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.LockCount">
            <summary>
                <para>Indicates the count of the <see cref="M:DevExpress.ExpressApp.Actions.ActionBase.BeginUpdate"/> method calls. 
</para>
            </summary>
            <value>A zero-based integer value representing the lock count.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.PredefinedCategories">
            <summary>
                <para>Provides access to the enumeration of predefined categories for Actions.
</para>
            </summary>
            <value>A ReadOnlyCollection@lt;string@gt; object representing a collection of predefied categories.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.SelectionContext">
            <summary>
                <para>Specifies a context of an Action's execution.

</para>
            </summary>
            <value>An instance of the class that implements the <b>ISelectionContext</b> interface.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.TargetViewNesting">
            <summary>
                <para>Specifies whether the View, for which an Action is intended, must be root, nested or any.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Nesting"/> enumeration value identifying a View kind.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.TargetViewType">
            <summary>
                <para>Specifies the type of the View, for which an Action is intended.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.ViewType"/> enumeration value identifying a View type.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.TestName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value>A string value.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.ToolTip">
            <summary>
                <para>Specifies a tooltip for an Action.
</para>
            </summary>
            <value>A string value that represents the current Action's tooltip.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.UnspecifiedCategory">
            <summary>
                <para>Gets the default <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> for an Action.
</para>
            </summary>
            <value>A string value that represents the default <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Category"/> name.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Application">
            <summary>
                <para>Provides access to a <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that can be used to manage an application.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application. 
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Id">
            <summary>
                <para>Specifies an Action's identifier.
</para>
            </summary>
            <value>A string property that represents the current Action's identifier.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.TargetViewId">
            <summary>
                <para>Specifies the ID of the View for which an Action is intended.
</para>
            </summary>
            <value>A string value for which the current Action is intended.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.RemoveEnabledItem(System.String)">
            <summary>
                <para>Removes a specified element from an Action's <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Enabled"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a "key" part of the element to be removed from the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Enabled"/> collection.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Manager">
            <summary>
                <para>Provides access to a Manager object that can be used to manage the application.
</para>
            </summary>
            <value>A <b>Manager</b> object that provides methods and properties to manage the application.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectType">
            <summary>
                <para>Specifies the type of the object(s) that must be represented by the current View to provide an Action activation.

</para>
            </summary>
            <value>The <b>Type</b> of the object(s) for which the current Action is intended.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ActionBase.HandleException">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.ResetId">
            <summary>
                <para>Restores an Action's <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Id"/>.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.SelectionDependencyType">
            <summary>
                <para>Specifies a context for enabling an Action.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Actions.SelectionDependencyType"/> enumeration value identifying a context type.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteria">
            <summary>
                <para>Specifies a criteria for enabling an Action.
</para>
            </summary>
            <value>A string value representing a criteria.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteriaMode">
            <summary>
                <para>Specifies whether all the currently selected objects must satisfy the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteria"/> criteria to make an Action enabled.
</para>
            </summary>
            <value>A <b>TargetObjectsCriteriaMode</b> enumeration value that indicates whether all selected object or at least one of them must satisfy the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.TargetObjectsCriteria"/> criteria.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.ActionMeaning">
            <summary>
                <para>Specifies whether an Action is represented by an accept, cancel or ordinal button in a Window Forms application's popup Windows. 
</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.Actions.ActionMeaning"/> enumeration value.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ActionBase.ExecuteCompleted">
            <summary>
                <para>Occurs after all actions implemented in the <b>Execute</b>, <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.Executed"/> and <see cref="E:DevExpress.ExpressApp.Actions.ActionBase.ProcessCreatedView"/> event handlers have been performed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ActionBase.Changed">
            <summary>
                <para>Occurs after one of the current ActionBase object's properties has been changed. 

</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Active">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to activate or deactivate an Action, or determine its active state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Enabled">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make an Action enabled\disalbed or to determine its enabled state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.EnabledList">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make an Action enabled or disabled.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a list of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.ActiveList">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make an Action activated or deactivated.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a list of key/value elements.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Actions.ActionBase.SetDictionaryNode(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Applies settings stored in the specified Application Model's node to the current Action.
</para>
            </summary>
            <param name="node">
		A <b>DictionaryNode</b> object that represents an Application | ActionDesign |  <b>Actions</b> | <b>Action</b> node. <b>ActionBase</b> object settings stored in this node will be used for the current Action.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Info">
            <summary>
                <para>Provides access to information on an Action, which is stored in the Application Model.
</para>
            </summary>
            <value>An <b>ActionNodeWrapper</b> object that represents the current Action's Application Model node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.HasImage">
            <summary>
                <para>Indicates whether an Action has an image assigned to it.
</para>
            </summary>
            <value><b>true</b> if the current Action's <b>ImageName</b> is not null or empty; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.PaintStyle">
            <summary>
                <para>Gets or sets the paint style for the current Action.
</para>
            </summary>
            <value>An <b>ActionItemPaintStyle</b> enumeration value specifying the the current Action's paint style.
</value>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionBase.RequireMultipleObjectsContext">
            <summary>
                <para>Returns a context for enabling/disabling the Action whose <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.SelectionDependencyType"/> property is set to <b>RequireMultipleObjects</b>. Used for the Action's <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Enabled"/> list item that has the <b>true</b> value, if one or more objects are selected in the current View, and <b>false</b>, if  no object is selected.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionBase.RequireSingleObjectContext">
            <summary>
                <para>Returns a context for enabling/disabling the Action whose <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.SelectionDependencyType"/> property is set to <b>RequireSingleObjects</b>. Used for the Action's <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Enabled"/> list item that has the <b>true</b> value, if a single object is selected in the current View, and <b>false</b>, if  more than one object is selected.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="E:DevExpress.ExpressApp.Actions.ActionBase.ExecuteCanceled">
            <summary>
                <para> Occurs after execution of the Action has been cancelled.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Actions.ActionBase.Tag">
            <summary>
                <para> Provides access to the object that contains data about the Action. 

</para>
            </summary>
            <value>An object that contains data about the Action. The default value is <i>null</i> (<i>Nothing</i> in VB).
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.SingleChoiceActionItemType">

            <summary>
                <para>Contains values specifying the type of a <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/>'s <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/>.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Actions.SingleChoiceActionItemType.ItemIsMode">
            <summary>
                <para>Items from a <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/>'s <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection represent modes. The SingleChoiceAction's control indicates the current selection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.SingleChoiceActionItemType.ItemIsOperation">
            <summary>
                <para>Items from a <see cref="T:DevExpress.ExpressApp.Actions.SingleChoiceAction"/>'s <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection represent operations. The SingleChoiceAction's control doesn't indicate the current selection.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.SelectionDependencyType">

            <summary>
                <para>Contains values specifying the type of selection that must be specified to make an Action enabled.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Actions.SelectionDependencyType.Independent">
            <summary>
                <para>An Action availability doesn't depend how many objects are currently selected.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.SelectionDependencyType.RequireMultipleObjects">
            <summary>
                <para>An Action is available when one or more objects are selected. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.SelectionDependencyType.RequireSingleObject">
            <summary>
                <para>An Action is available when a single object is selected. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ChoiceActionItemHierarchyType">

            <summary>
                <para>Contains values specifying how a <see cref="T:DevExpress.ExpressApp.Actions.ChoiceActionBase"/>'s <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection is displayed.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ChoiceActionItemHierarchyType.List">
            <summary>
                <para>Items from the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection are displayed like a list.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ChoiceActionItemHierarchyType.Tree">
            <summary>
                <para>Items from the <see cref="P:DevExpress.ExpressApp.Actions.ChoiceActionBase.Items"/> collection are displayed like a tree.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Actions.ActionSense">

            <summary>
                <para>This enumeration is obsolete. Use the <see cref="T:DevExpress.ExpressApp.Actions.ActionMeaning"/> enumeration instead.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionSense.Accept">
            <summary>
                <para>An Action which is displayed in a popup Window is executed when an end-user presses ENTER.
 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionSense.Cancel">
            <summary>
                <para>An Action, which is displayed in a popup Window, is executed when an end-user presses ESC.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.Actions.ActionSense.Unknown">
            <summary>
                <para>An Action which is displayed in a popup Window is executed when an end-user clicks it or uses a predefined shorcut.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.DetailView">

            <summary>
                <para>Represents a Detail View.


</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.DetailView.ItemsChanged">
            <summary>
                <para>Occurs after changing a Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.DetailView.InfoNodeName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DetailView.LayoutNodeName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DetailView.MaxRecursionDeep">
            <summary>
                <para>Specifies the maximum quantity of performed recursions during Detail View creation. By default, this field value is 50. Generally, you can reduce this value, but avoiding recursion is recommended.
</para>
            </summary>
            <returns>An interger value representing the maximum recursion quantity.
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DetailView.StaticImageNodeName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DetailView.StaticTextNodeName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.AddItem(DevExpress.ExpressApp.Editors.DetailViewItem)">
            <summary>
                <para>Adds a specified Detail View Item to a Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.
</para>
            </summary>
            <param name="item">
		A <b>DetailViewItem</b> object representing the Detail View Item which is added to the current Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.AddItem(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Creates a Detail View Item using specified information on it, and adds it to a Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.
</para>
            </summary>
            <param name="info">
		A <b>DictionaryNode</b> object representing the Application Model node with the information on the new Detail View Item.


            </param>
            <returns>A <b>DetailViewItem</b> object representing the Detail View Item added to the <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.BreakLinksToControls">
            <summary>
                <para>Removes references to a Detail View's controls and their event handlers.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.InsertItem(System.Int32,DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Creates a Detail View Item using specified information on it, and inserts it to a Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection at a specified position.

</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the new Detail View Item's position within the <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.

            </param>
            <param name="info">
		A <b>DictionaryNode</b> object representing the Application Model node with the information on the new Detail View Item.

            </param>
            <returns>A <b>DetailViewItem</b> object representing the Detail View Item inserted.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.InsertItem(System.Int32,DevExpress.ExpressApp.Editors.DetailViewItem)">
            <summary>
                <para>Inserts a new Detail View Item to a specified position within the <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.
</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the new Detail View Item's position within the <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.

            </param>
            <param name="item">
		A <b>DetailViewItem</b> object representing the Detail View Item inserted into the current Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.RemoveItem(System.String)">
            <summary>
                <para>Removes a particular Detail View Item from a Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection. 
</para>
            </summary>
            <param name="id">
		A string value representing the ID of the Detail View Item to be removed.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailView.CurrentObject">
            <summary>
                <para>Specifies a Detail View's current object.
</para>
            </summary>
            <value>An <b>Object</b> repesenting the current Detail View's current object.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailView.LayoutManager">
            <summary>
                <para>Specifies a Detail View's layout manager.
</para>
            </summary>
            <value>A <b>LayoutManager</b> object representing the current Detail View's layout manager.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.CreateShortcut">
            <summary>
                <para>Provides key information on a Detail View.
</para>
            </summary>
            <returns>A <b>ViewShortcut</b> object representing key information on the current Detail View.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.SetObjectSpace(DevExpress.ExpressApp.ObjectSpace)">
            <summary>
                <para>Sets a specified <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> for a Detail View.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object representing the Object Space that enables the current Detail View to work with a database.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailView.ViewEditMode">
            <summary>
                <para>Specifies a mode of displaying a Detail View in an ASP.NET Web application.
</para>
            </summary>
            <value>A <b>ViewEditMode</b> enumeration value that represents the current Detail View's display mode.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.#ctor(DevExpress.ExpressApp.ObjectSpace,System.Object,DevExpress.ExpressApp.XafApplication,System.Boolean)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.DetailView"/> class with the specified settings.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object representing the Object Space that enables the created Detail View to work with a database.

            </param>
            <param name="obj">
		An <b>Object</b> that will be represented by the created Detail View. This value is assigned to the <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/> property.

            </param>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application.

            </param>
            <param name="isRoot">
		<b>true</b> to create a root Detail View; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.IsRoot"/> property.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.#ctor(DevExpress.ExpressApp.DictionaryNode,DevExpress.ExpressApp.ObjectSpace,System.Object,DevExpress.ExpressApp.XafApplication,System.Boolean)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.DetailView"/> class with the specified settings.
</para>
            </summary>
            <param name="info">
		A <b>DictionaryNode</b> object representing an Application Model node with information on the created Detail View. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.Info"/> property.

            </param>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object representing the Object Space that enables the created Detail View to work with a database.

            </param>
            <param name="obj">
		An Object that will be represented by the created Detail View. This value is assigned to the <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/> property.

            </param>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application.

            </param>
            <param name="isRoot">
		<b>true</b> to create a root Detail View; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.View.IsRoot"/> property.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailView.SelectedObjects">
            <summary>
                <para>Returns a Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/>.
</para>
            </summary>
            <value>An array that contains a single object representing the current Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.CurrentObject"/>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.FindItem(System.String)">
            <summary>
                <para>Returns a specified Detail View Item from a Detail View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.
</para>
            </summary>
            <param name="id">
		A string value that represents the Detail View Item to be found in the current View's <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection.

            </param>
            <returns>A <b>DetailViewItem</b> object that represents the Detail View Item specified by the <i>id</i> parameter.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailView.ScrollPosition">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value></value>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailView.Items">
            <summary>
                <para>Provides access to a Detail View's Detail View Items collection.
</para>
            </summary>
            <value>A collection of the <b>DetailViewItem</b> class descendants.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.DetailView.GetItems">
            <summary>
                <para>Returns Detail View Items of the specified type from the <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection. 

</para>
            </summary>
            <returns>An array that contains Detail View Items of a specified type found in the <see cref="P:DevExpress.ExpressApp.DetailView.Items"/> collection. 

</returns>


        </member>
        <member name="E:DevExpress.ExpressApp.DetailView.ViewEditModeChanged">
            <summary>
                <para>Occurs after changing the current View's <see cref="P:DevExpress.ExpressApp.DetailView.ViewEditMode"/> property value.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.DetailView.ViewEditModeChanging">
            <summary>
                <para>Occurs before changing the current View's <see cref="P:DevExpress.ExpressApp.DetailView.ViewEditMode"/> property value.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.DetailView.ViewEditModeKeyName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.DetailView.DetailViewReadOnlyKey">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.ExpressApp.DetailView.SelectionType">
            <summary>
                <para>Returns the selection type supported by the current Detail View.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.SelectionType"/> enumeration value representing the selection type supported by the current Detail View.
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.WindowController">

            <summary>
                <para>Represents a Window Controller.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.WindowController.#ctor">
            <summary>
                <para>Creates an instance of the WindowController class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.WindowController.Activating">
            <summary>
                <para>Occurs when a Window is set to a Window Controller.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.WindowController.TargetWindowType">
            <summary>
                <para>Specifies the kind of the Window for which a Window Controller is intended.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.WindowType"/> enumeration value identifying a Window kind.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.WindowController.Window">
            <summary>
                <para>Provides access to a Window Controller's Window.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Window"/> object representing the current Window Controller's Window.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.WindowController.WindowChanging">
            <summary>
                <para>Occurs when a Window is set to a Window Controller.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.WindowController.SetWindow(DevExpress.ExpressApp.Window)">
            <summary>
                <para>Sets a specified Window for a Window Controller.
</para>
            </summary>
            <param name="newWindow">
		A <see cref="T:DevExpress.ExpressApp.Window"/> object that represents a Window to be set for the current Window Controller.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.WindowController.CreateInfo(DevExpress.ExpressApp.NodeWrappers.ApplicationNodeWrapper,DevExpress.ExpressApp.Controller)">
            <summary>
                <para>Collects information on a WindowController to be loaded to the Application Model.
</para>
            </summary>
            <param name="applicationNode">
		A <b>Dictionary</b> object providing access to the Application Model's nodes.

            </param>
            <param name="baseController">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object representing the current Window Controller's ancestor.

            </param>
            <returns>A <b>ControllerInfoNodeWrapper</b> object that provides information on the current Window Controller to the Application Model.
</returns>


        </member>
        <member name="E:DevExpress.ExpressApp.WindowController.ViewClosed">
            <summary>
                <para>Occurs after closing the View of the Window Controller's Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.WindowController.ViewClosing">
            <summary>
                <para>Occurs before closing the View of the Window Controller's Window.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.WindowController.ViewQueryCanClose">
            <summary>
                <para>Occurs when checking whether the View of the Window Controller's Window is allowed to be closed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.WindowController.WindowIsAssignedReason">
            <summary>
                <para>Specifies the <see cref="P:DevExpress.ExpressApp.Controller.Active"/> list's reason that indicates whether a Window is assigned to the current WindowController.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.ExpressApp.Window">

            <summary>
                <para>Represents a Window. 


</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.Window.Close">
            <summary>
                <para>Closes a Window.
</para>
            </summary>
            <returns>Always <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Window.Close(System.Boolean)">
            <summary>
                <para>In ASP.NET Web applications, determines whether to refresh a parent Window when closing a Window .

</para>
            </summary>
            <param name="isForceRefresh">
		<b>true</b> if a parent Window must be refreshed; otherwise, <b>false</b>.

            </param>
            <returns>Always <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Window.IsMain">
            <summary>
                <para>Indicates whether a Window is main.
</para>
            </summary>
            <value><b>true</b> if the current Window is main; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Window.Template">
            <summary>
                <para>Returns a Window's Template. 
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.ExpressApp.Templates.IWindowTemplate"/> interface. It represents the current Window's Template.

</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Window.FindCachedView(System.String)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="viewID">
		A string value.

            </param>
            <returns>A <see cref="T:DevExpress.ExpressApp.View"/> object.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.Window.ContextName">
            <summary>
                <para>Returns a Window's context name.
</para>
            </summary>
            <value>A string value representing a context name.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Window.#ctor(DevExpress.ExpressApp.XafApplication,DevExpress.ExpressApp.TemplateContext,System.Collections.Generic.ICollection`1,System.Boolean,System.Boolean)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.Window"/> class.
</para>
            </summary>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Frame.Application"/> property.

            </param>
            <param name="context">
		A <b>TemplateContext</b> object representing the created Window's context. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Frame.Context"/> property. 

            </param>
            <param name="controllers">
		A <b>ICollection@lt;Controller@gt;</b> Controllers collection. 

            </param>
            <param name="isMain">
		<b>true</b> if the created Window is main; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Window.IsMain"/> property.

            </param>
            <param name="activateControllersImmediatelly">
		<b>true</b> if Controllers are created immediately after the Window has been created and before the Window's <see cref="P:DevExpress.ExpressApp.Window.Template"/> is created; <b>false</b> if Controllers are created after the Window's <see cref="P:DevExpress.ExpressApp.Window.Template"/> has been created.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.ViewController">

            <summary>
                <para>Represents a View Controller.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ViewController.#ctor">
            <summary>
                <para>Creates an instance of the ViewController class.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ViewController.Activating">
            <summary>
                <para>Occurs when a View is set to a View Controller.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ViewController.Activate(DevExpress.ExpressApp.View)">
            <summary>
                <para>Sets a specified View to a View Controller.
</para>
            </summary>
            <param name="value">
		A View object that represents a View to be set to the current View Controller.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewController.TargetObjectType">
            <summary>
                <para>Specifies the type of objects that must be represented by a View to provide View Controller activation.
</para>
            </summary>
            <value>A <b>Type</b> object that represent a persistent object's type.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewController.TargetObjectTypeName">
            <summary>
                <para>Specifies the type name of objects that must be represented by a View to provide a View Controller activation.
</para>
            </summary>
            <value>A string value that represents a persistent object's type name.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewController.TargetViewNesting">
            <summary>
                <para>Specifies whether the View for which a View Controller is intended must be root, nested or any.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Nesting"/> enumeration value identifying a View kind.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewController.TargetViewType">
            <summary>
                <para>Specifies the type of the View, for which a View Controller is intended.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.ViewType"/> enumeration value identifying a View type.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewController.View">
            <summary>
                <para>Provides access to a View Controller's View.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.View"/> object representing the current View Controller's View.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.ViewController.ViewChanging">
            <summary>
                <para>Occurs when a View is set for a View Controller.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ViewController.SetView(DevExpress.ExpressApp.View)">
            <summary>
                <para>Sets a specified View for a View Controller.
</para>
            </summary>
            <param name="newView">
		A <see cref="T:DevExpress.ExpressApp.View"/> object that represents a View to be set for the current View Controller.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ViewController.TargetViewId">
            <summary>
                <para>Specifies the ID of the View for which a View Controller is intended.
</para>
            </summary>
            <value>A string value that represents a <see cref="P:DevExpress.ExpressApp.View.Id"/>.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ViewController.CreateInfo(DevExpress.ExpressApp.NodeWrappers.ApplicationNodeWrapper,DevExpress.ExpressApp.Controller)">
            <summary>
                <para>Collects information on a ViewController to be loaded to the Application Model.
</para>
            </summary>
            <param name="applicationNode">
		A <b>Dictionary</b> object providing access to the Application Model's nodes.

            </param>
            <param name="baseController">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object representing the current View Controller's ancestor.

            </param>
            <returns>A <b>ControllerInfoNodeWrapper</b> object that provides information on the current ViewController to the Application Model.
</returns>


        </member>
        <member name="F:DevExpress.ExpressApp.ViewController.ViewIsAssignedReason">
            <summary>
                <para>Specifies the <see cref="P:DevExpress.ExpressApp.Controller.Active"/> list's reason that indicates whether a View is assigned to the current ViewController.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="E:DevExpress.ExpressApp.ViewController.ViewControlsCreated">
            <summary>
                <para>Occurs after the controls have been created for the current Controller's <see cref="P:DevExpress.ExpressApp.ViewController.View"/>, if the Controller has already been activated.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.ListView">

            <summary>
                <para>Represents a List View.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.ExpressApp.ListView.#ctor(DevExpress.ExpressApp.CollectionSourceBase,DevExpress.ExpressApp.Editors.ListEditor,System.Boolean)">
            <summary>
                <para>Creates an instance of the ListView class with the specified settings.
</para>
            </summary>
            <param name="collectionSource">
		An object in the <b>CollectionSourceBase</b> class inheritance. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.CollectionSource"/> property.

            </param>
            <param name="listEditor">
		An object in the <b>ListEditor</b> class inheritance. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.Editor"/> property.

            </param>
            <param name="isRoot">
		<b>true</b> if the List View is root; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ListView.#ctor(DevExpress.ExpressApp.CollectionSourceBase,DevExpress.ExpressApp.Editors.ListEditor)">
            <summary>
                <para>Creates an instance of the ListView class with the specified collection source and List Editor.
</para>
            </summary>
            <param name="collectionSource">
		An object in the <b>CollectionSourceBase</b> class inheritance. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.CollectionSource"/> property.

            </param>
            <param name="listEditor">
		An object in the <b>ListEditor</b> class inheritance. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.Editor"/> property.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.ListView.ObjectChanged">
            <summary>
                <para>For internal use only.<!--Occurs after editing the current list view's object.-->
</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.ListView.InfoNodeName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.ListView.BreakLinksToControls">
            <summary>
                <para>Removes references to a ListView's controls.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.ListView.UpdateEditorDataSource">
            <summary>
                <para>Updates the data source of a List View's <see cref="P:DevExpress.ExpressApp.ListView.Editor"/>.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.Caption">
            <summary>
                <para>Specifies a List View's caption.
</para>
            </summary>
            <value>A String value representing the current List View's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.CollectionSource">
            <summary>
                <para>Provides access to a ListView's Collection Source.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.CollectionSourceBase"/> object representing the current List View's collection source.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.CurrentObject">
            <summary>
                <para>Specifies a List View's current object.
</para>
            </summary>
            <value>An <b>Object</b> representing the current List View's current object.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.Editor">
            <summary>
                <para>Returns a List View's List Editor.
</para>
            </summary>
            <value>A <b>ListEditor</b> object representing the current List View's List Editor.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.EditView">
            <summary>
                <para>Provides access to the Detail View that is displayed together with a List View.

</para>
            </summary>
            <value>The <see cref="T:DevExpress.ExpressApp.DetailView"/> object representing a detail view displayed with the current list view.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.LayoutManager">
            <summary>
                <para>Specifies a List View's layout manager.
</para>
            </summary>
            <value>A <b>LayoutManager</b> object representing the current List View's layout manager.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.Model">
            <summary>
                <para>Provides access to the wrapper of the Application Model node where a List View's settings are stored.
</para>
            </summary>
            <value>A <b>ListViewInfoNodeWrapper</b> object that allows accessing the List View settings stored in the Application Model.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ListView.SetObjectSpace(DevExpress.ExpressApp.ObjectSpace)">
            <summary>
                <para>Sets a specified <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> for a List View.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object representing the Object Space that enables the current List View to work with a database.


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ListView.#ctor(DevExpress.ExpressApp.DictionaryNode,DevExpress.ExpressApp.CollectionSourceBase,DevExpress.ExpressApp.XafApplication,System.Boolean)">
            <summary>
                <para>Creates an instance of the ListView class with the specified settings.
</para>
            </summary>
            <param name="node">
		A DictionaryNode object that  represents the Application Model node that stores the current List View settings. This object is assigned to the <see cref="P:DevExpress.ExpressApp.View.Info"/> property.

            </param>
            <param name="collectionSource">
		An object in the <b>CollectionSourceBase</b> class inheritance. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.CollectionSource"/> property.

            </param>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application.

            </param>
            <param name="isRoot">
		<b>true</b> if the List View is root; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.ListView.#ctor(DevExpress.ExpressApp.CollectionSourceBase,DevExpress.ExpressApp.Editors.ListEditor,System.Boolean,DevExpress.ExpressApp.XafApplication)">
            <summary>
                <para>Creates an instance of the ListView class with the specified settings.
</para>
            </summary>
            <param name="collectionSource">
		An object in the <b>CollectionSourceBase</b> class inheritance. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.CollectionSource"/> property.

            </param>
            <param name="listEditor">
		An object in the <b>ListEditor</b> class inheritance. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.Editor"/> property.

            </param>
            <param name="isRoot">
		<b>true</b> if the List View is root; otherwise, <b>false</b>.

            </param>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.SelectedObjects">
            <summary>
                <para>Provides access to a collection of objects currently selected in a List View's <see cref="P:DevExpress.ExpressApp.ListView.Editor"/>.
</para>
            </summary>
            <value>An <b>IList</b> collection on selected objects.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ListView.#ctor(DevExpress.ExpressApp.CollectionSourceBase,DevExpress.ExpressApp.XafApplication,System.Boolean)">
            <summary>
                <para>Creates an instance of the ListView class with the specified settings.
</para>
            </summary>
            <param name="collectionSource">
		An object in the <b>CollectionSourceBase</b> class inheritance. This object is assigned to the <see cref="P:DevExpress.ExpressApp.ListView.CollectionSource"/> property.

            </param>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application.

            </param>
            <param name="isRoot">
		<b>true</b> if the List View is root; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.DetailViewId">
            <summary>
                <para>Specifies the ID of the Detail View which is displayed together with a ListView.
</para>
            </summary>
            <value>A string value that represents the ID of the Detail View that represents the object currently selected in the List View.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.ListView.CreateShortcut">
            <summary>
                <para>Returns key information on the current ListView.
</para>
            </summary>
            <returns>A <b>ViewShortcut</b> object that provides access to the current List View's identifiers.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.ProcessSelectedItemAction">
            <summary>
                <para>Specifies an Action which is executed when selecting a List View's object.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.Actions.ActionBase"/> object representing an Action. 
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.ListView.CreateCustomCurrentObjectDetailView">
            <summary>
                <para>Occurs when the current List View is updated, and when its current object is changed.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.ListView.SelectionType">
            <summary>
                <para>Returns the selection type supported by the current List View.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.SelectionType"/> enumeration value representing the selection type supported by the current List View.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.ListView.EditorChanged">
            <summary>
                <para>Occurs after the current List View's <see cref="P:DevExpress.ExpressApp.ListView.Editor"/> property has been changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ListView.ProcessSelectedItem">
            <summary>
                <para>Occurs when double-clicking an object in the current List View.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.ExpressApp.ListView.DetailViewControlID">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.ExpressApp.ListView.ListViewControlID">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="E:DevExpress.ExpressApp.ListView.EditorChanging">
            <summary>
                <para>Occurs before changing the current View's <see cref="P:DevExpress.ExpressApp.ListView.Editor"/> property value.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.ListView.ValidateObject">
            <summary>
                <para>Occurs when the object represented by the ListView's focused row must be validated.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.ExpressApp.Controller">

            <summary>
                <para>Represents a Controller.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.ExpressApp.Controller.ControllerActiveKey">
            <summary>
                <para>Specifies one of the keys from the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Active"/> collection of a Controller's <see cref="P:DevExpress.ExpressApp.Controller.Actions"/>. By default, this field value is "Controller is active". You can use this field when working with the <see cref="P:DevExpress.ExpressApp.Actions.ActionBase.Active"/> collection.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.Clone">
            <summary>
                <para>Clones a Controller.
</para>
            </summary>
            <returns>A Controller object that represents the current Controller's clone.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.GetSchema">
            <summary>
                <para>Returns the Schema extension which is combined with the entire Schema when loading the Application Model.
</para>
            </summary>
            <returns>The <b>Schema</b> object that represents the Schema extension to be added to the application's entire Schema.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.SetActiveByKey(System.String,System.Boolean)">
            <summary>
                <para>Adds an element to a Controller's <see cref="P:DevExpress.ExpressApp.Controller.Active"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents a reason the current Controller activation/deactivation.

            </param>
            <param name="value">
		A Boolean value that indicates whether to activate or deactivate the current Controller.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.UpdateModel(DevExpress.ExpressApp.Dictionary)">
            <summary>
                <para>Updates the Application Model.
</para>
            </summary>
            <param name="dictionary">
		A <b>Dictionary</b> object that provides access to the Application Model's nodes.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.Actions">
            <summary>
                <para>Provides access to a Controller's Action collection.
</para>
            </summary>
            <value>An <b>ActionList</b> object representing a list of the current Controller's Actions.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.Frame">
            <summary>
                <para>Provides access to a Controller's Frame.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.Frame"/> object representing the Current Controller's Frame.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Controller.Activated">
            <summary>
                <para>Occurs when a Controller is activated.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Controller.Deactivating">
            <summary>
                <para>Occurs when a Controller is deactivated.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.ActiveList">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to activate or deactivate a Controller. 
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a list of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.Info">
            <summary>
                <para>Provides access to information on a Controller, which is stored in the Application Model.
</para>
            </summary>
            <value>A <b>DictionaryNode</b> object representing the current Controller's Application Model node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.Name">
            <summary>
                <para>Returns a full name of a Controller's type.
</para>
            </summary>
            <value>A string value that represents the currents Controller's name.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.Application">
            <summary>
                <para>Provides access to a <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that can be used to manage the current application.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage an application. 
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.RemoveActiveItem(System.String)">
            <summary>
                <para>Removes a specified item from a Controller's <see cref="P:DevExpress.ExpressApp.Controller.Active"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents the key of the <see cref="P:DevExpress.ExpressApp.Controller.Active"/> collection item to be removed.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.CreateInfo(DevExpress.ExpressApp.NodeWrappers.ApplicationNodeWrapper,DevExpress.ExpressApp.Controller)">
            <summary>
                <para>Collects information on a Controller to be loaded to the Application Model.
</para>
            </summary>
            <param name="applicationNode">
		A <b>Dictionary</b> object providing access to the Application Model's nodes.

            </param>
            <param name="baseController">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object representing the current Controller's ancestor.

            </param>
            <returns>A <b>ControllerInfoNodeWrapper</b> object that provides information on the current Controller to the Application Model.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.Deactivate">
            <summary>
                <para>This method is obsolete. Use the <see cref="P:DevExpress.ExpressApp.Controller.Active"/> property, instead.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.Manager">
            <summary>
                <para>Provides access to a Manager object that can be used to manage the application.
</para>
            </summary>
            <value>A <b>Manager</b> object that provides methods and properties to manage the application.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.CustomizeXPDictionary(DevExpress.Xpo.Metadata.XPDictionary)">
            <summary>
                <para>Customizes information on business classes before loading it to the Application Model's BOModel node.
</para>
            </summary>
            <param name="xpDictionary">
		An <b>XPDictionary</b> object which holds information on persistent classes to be loaded to the Application Model.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Controller.AfterConstruction">
            <summary>
                <para>Occurs after a Controller is created.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Controller.FrameAssigned">
            <summary>
                <para>Occurs after a Frame (Window) has been assigned to a Controller.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.Active">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to activate or deactivate a <see cref="T:DevExpress.ExpressApp.Controller"/>, or determine its active state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Controller.Tag">
            <summary>
                <para>Provides access to the object that contains data about the Controller. 

</para>
            </summary>
            <value>An object that contains data about the Controller. The default value is <i>null</i> (<i>Nothing</i> in VB).
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Controller.CustomizeTypesInfo(DevExpress.ExpressApp.DC.ITypesInfo)">
            <summary>
                <para>Customizes information on business classes before loading it to the Application Model's BOModel node.
</para>
            </summary>
            <param name="typesInfo">
		An <b>ITypesInfo</b> object which holds information on persistent classes to be loaded to the Application Model.

            </param>


        </member>
        <member name="T:DevExpress.ExpressApp.View">

            <summary>
                <para>Represents a base class for Views.




</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.View.CaptionChanged">
            <summary>
                <para>Occurs after changing a View's caption.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.Closed">
            <summary>
                <para>Occurs after the current View is closed.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.Closing">
            <summary>
                <para>Occurs when closing a View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.ControlsCreated">
            <summary>
                <para>Occurs after creating controls for a View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.CurrentObjectChanged">
            <summary>
                <para>Occurs after changing a View's current object.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.InfoChanged">
            <summary>
                <para>Occurs after setting the <see cref="P:DevExpress.ExpressApp.View.Info"/> property for a View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.ObjectChanging">
            <summary>
                <para>Occurs when the View is asked whether its current object can be changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.ReadOnlyChanged">
            <summary>
                <para>Occurs after changing a View's <see cref="P:DevExpress.ExpressApp.View.ReadOnly"/> state.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.SelectionChanged">
            <summary>
                <para>Occurs after changing a View's current object.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.SynchronizingInfo">
            <summary>
                <para>Occurs before writing information on a View to the Application Model.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.BreakLinksToControls">
            <summary>
                <para>Removes references to a View's controls and their event handlers.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.CanClose">
            <summary>
                <para>Determines whether a View can be closed.


</para>
            </summary>
            <returns><b>true</b> if the current View can be closed; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.View.Dispose">
            <summary>
                <para>Releases all resources used by this View object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.Refresh">
            <summary>
                <para>Refreshes values of a View's controls.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.SynchronizeInfo">
            <summary>
                <para>Writes information on a View to the Application Model.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.ToString">
            <summary>
                <para>Returns a View's textual representation.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value which is the current View's textual representation.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.View.Caption">
            <summary>
                <para>Specifies a View's caption.
</para>
            </summary>
            <value>A string value representing the current View's caption.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.CurrentObject">
            <summary>
                <para>Specifies a View's current object.
</para>
            </summary>
            <value>An object representing the current View's current object.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.Info">
            <summary>
                <para>Provides access to information on a View, which is stored in the Application Model.
</para>
            </summary>
            <value>A <b>DictionaryNode</b> object representing the current View's Application Model node.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.IsObjectSpaceOwner">
            <summary>
                <para>Specifies whether a View is root.
</para>
            </summary>
            <value><b>true</b> if the current View is root; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.IsRoot">
            <summary>
                <para>Specifies whether a View is root.
</para>
            </summary>
            <value><b>true</b> if the current View is root; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.ObjectSpace">
            <summary>
                <para>Provides access to the object space within which a View was created.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object representing the current View's object space. 
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.ObjectType">
            <summary>
                <para>Gets the type of object (s) displayed via the current View.

</para>
            </summary>
            <value>A <b>Type</b> object representing the type of an object (s) displayed via the current View.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.View.Disposing">
            <summary>
                <para>Occurs when the current View is disposed of.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.BreakLinksToData">
            <summary>
                <para>For internal use only.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.CreateControls">
            <summary>
                <para>Creates controls that visualize a View in a UI.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.CreateShortcut">
            <summary>
                <para>Returns key information on the current View.
</para>
            </summary>
            <returns>A <b>ViewShortcut</b> object that provides access to the current View's identifiers.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.View.SetInfo(DevExpress.ExpressApp.DictionaryNode)">
            <summary>
                <para>Assigns a specified Application Model node for a View's <see cref="P:DevExpress.ExpressApp.View.Info"/> property.

</para>
            </summary>
            <param name="info">
		A <b>DictionaryNode</b> object that represents an Application Model node which is used to provide information on the current View.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.View.SetObjectSpace(DevExpress.ExpressApp.ObjectSpace)">
            <summary>
                <para>Sets a specified <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> for a View.
</para>
            </summary>
            <param name="objectSpace">
		An <see cref="T:DevExpress.ExpressApp.ObjectSpace"/> object which is used to manipulate a cache with persistent objects that are used in the current View.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.View.SynchronizeWithInfo">
            <summary>
                <para>Updates the current View's property values and creates (recreates) its controls in accordance with the information stored in the Application Model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.View.Control">
            <summary>
                <para>Returns the current View's control.
</para>
            </summary>
            <value>An object that represents the current View's control.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.ErrorMessages">
            <summary>
                <para>Provides access to the current View's error message collection that is populated when Validation Rules get broken.
</para>
            </summary>
            <value>An <b>ErrorMessages</b> object which is used to access the messages about currently broken Validation Rules.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.IsControlCreated">
            <summary>
                <para>Indicates whether a View's <see cref="P:DevExpress.ExpressApp.View.Control"/> has been created.
</para>
            </summary>
            <value><b>true</b> if the current View's <see cref="P:DevExpress.ExpressApp.View.Control"/> exists; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.Id">
            <summary>
                <para>Returns a View's ID.
</para>
            </summary>
            <value>A string value representing the current View's ID.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.SelectedObjects">
            <summary>
                <para>Specifies a View's selected objects.
</para>
            </summary>
            <value>An object list that contains the current View's selected objects.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.View.RemoveReadOnlyItem(System.String)">
            <summary>
                <para>Removes a specified item from a View's <see cref="P:DevExpress.ExpressApp.View.ReadOnly"/> collection.
</para>
            </summary>
            <param name="key">
		A string value that represents the key of the <see cref="P:DevExpress.ExpressApp.View.ReadOnly"/> collection item to be removed.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.View.SetReadOnlyByKey(System.String,System.Boolean)">
            <summary>
                <para>Adds an item to the <see cref="P:DevExpress.ExpressApp.View.ReadOnly"/> collection of the current View to make it read-only or editable.
</para>
            </summary>
            <param name="key">
		A string value that specifies the reason for making the current View read-only or editable.


            </param>
            <param name="value">
		A Boolean value that indicates whether to make the current View read-only.

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.View.ReadOnlyList">
            <summary>
                <para>Provides access to the collection of reason/value pairs used to make a View read-only. 

</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a list of key/value elements.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.View.CustomSynchronizeInfo">
            <summary>
                <para>Occurs when saving information on a View's editor(s) to the Application Model.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.InfoChanging">
            <summary>
                <para>Occurs before setting the <see cref="P:DevExpress.ExpressApp.View.Info"/> property for a View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.InfoSynchronized">
            <summary>
                <para>Occurs after the information on a View has been saved to the Application Model.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.InfoSynchronizing">
            <summary>
                <para>Occurs before saving information on a View's controls to the Application Model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.View.ScrollPosition">
            <summary>
                <para>Specifies the scroll point of Windows in ASP.NET Web applications.
</para>
            </summary>
            <value>A <b>Point</b> object that represents scroll point coordinates.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.View.DataBind">
            <summary>
                <para>This method is not used in XAF any more.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.View.SupportSelection">
            <summary>
                <para>Specifies the selection type supported by a View.
</para>
            </summary>
            <value>A <b>SelectionType</b> enumeration value representing that selection type supported by the current View.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.View.ControlsCreating">
            <summary>
                <para>Occurs before creating controls for a View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.QueryCanClose">
            <summary>
                <para>Occurs when checking whether a View can be closed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.Close(System.Boolean)">
            <summary>
                <para>Closes a View if it is allowed to be closed.

</para>
            </summary>
            <param name="checkCanClose">
		<b>true</b> if the <see cref="E:DevExpress.ExpressApp.View.QueryCanClose"/> event should be raised; otherwise, <b>false</b>.

            </param>
            <returns><b>true</b> if a View has been closed successfully; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.View.Close">
            <summary>
                <para>Closes a View.
</para>
            </summary>
            <returns><b>true</b> if a View has been closed successfully; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.View.GetCurrentObjectCaption">
            <summary>
                <para>Returns the current object's caption, formatted according to the applied <see cref="T:DevExpress.Persistent.Base.ObjectCaptionFormatAttribute"/>.

</para>
            </summary>
            <returns>A string value representing a formatted caption of the View's <see cref="P:DevExpress.ExpressApp.View.CurrentObject"/>.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.View.ReadOnly">
            <summary>
                <para>Provides access to a collection of reason/value pairs used to make a <see cref="T:DevExpress.ExpressApp.View"/> read-only/editable, or determine its read-only state.
</para>
            </summary>
            <value>A <b>BoolList</b> object that represents a collection of key/value elements.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.View.SelectionTypeChanged">
            <summary>
                <para>Occurs when the current View's selection type is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.View.SecurityContexts">
            <summary>
                <para>Returns a collection of the current View's securtity contexts.
</para>
            </summary>
            <value>A <b>SecurityContextList</b> object representing a collection of the current View's security contexts.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.SelectionType">
            <summary>
                <para>Returns the selection type supported by a View.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.SelectionType"/> enumeration value representing the selection type supported by the current View.
</value>


        </member>
        <member name="F:DevExpress.ExpressApp.View.SecurityReadOnlyItemName">
            <summary>
                <para>Returns a key used to create an item in the <see cref="P:DevExpress.ExpressApp.View.ReadOnly"/> collection of the current View. This key specifies a reason for making the View editable/read-only when the Security System allows/denies access to edit to the object(s) represented by the View. By default, this key is set to "Security".
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="E:DevExpress.ExpressApp.View.CurrentObjectChanging">
            <summary>
                <para>Occurs when the View is asked whether its current object can be changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.View.QueryCanChangeCurrentObject">
            <summary>
                <para>Occurs when the View is asked whether its current object can be changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.View.CanChangeCurrentObject">
            <summary>
                <para>Determines whether a View's current object can be changed.
</para>
            </summary>
            <returns><b>true</b> if the current object can be changed; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.ExpressApp.View.ObjectTypeInfo">
            <summary>
                <para>Provides access to the information on the type of the object(s) which is represented by the current View.
</para>
            </summary>
            <value>An <b>ITypeInfo</b> object representing information on the type of the business object(s) which is represented by the current <b>View</b>.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.View.Tag">
            <summary>
                <para>Provides access to the object that contains data about the View. 
</para>
            </summary>
            <value>An object that contains data about the View. The default value is <i>null</i> (<i>Nothing</i> in VB).
</value>


        </member>
        <member name="T:DevExpress.ExpressApp.Frame">

            <summary>
                <para>Represents a Frame. 

</para>
            </summary>

        </member>
        <member name="E:DevExpress.ExpressApp.Frame.SynchronizeTemplateInfo">
            <summary>
                <para>Occurs before synchronizing information on a Frame's Template.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Frame.SynchronizeViewInfo">
            <summary>
                <para>Occurs before synchronizing information on a Frame's View.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Frame.TemplateChanged">
            <summary>
                <para>Occurs after setting a Template for a Frame.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Frame.ViewChanged">
            <summary>
                <para>Occurs after setting a View for a Frame.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.ExpressApp.Frame.ViewChanging">
            <summary>
                <para>Occurs before setting a View for a Frame.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.Dispose">
            <summary>
                <para>Releases all resources used by this Frame object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.GetController">
            <summary>
                <para>Returns a specified Controller from the current Frame's <see cref="P:DevExpress.ExpressApp.Frame.Controllers"/> collection.


</para>
            </summary>
            <returns>A specified Controller found in the current Frame's <see cref="P:DevExpress.ExpressApp.Frame.Controllers"/> collection.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.RegisterController(DevExpress.ExpressApp.Controller)">
            <summary>
                <para>Registers a specified Controller within a Frame's <see cref="P:DevExpress.ExpressApp.Frame.Controllers"/> collection.
</para>
            </summary>
            <param name="controller">
		A <see cref="T:DevExpress.ExpressApp.Controller"/> object to be registered within the current Frame's <see cref="P:DevExpress.ExpressApp.Frame.Controllers"/> collection.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.SetTemplate(DevExpress.ExpressApp.Templates.IFrameTemplate)">
            <summary>
                <para>Sets a specified Template for the current Frame.
</para>
            </summary>
            <param name="val">
		An object that implements the <see cref="T:DevExpress.ExpressApp.Templates.IFrameTemplate"/> interface to be used for the current Frame.


            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.SetView(DevExpress.ExpressApp.View)">
            <summary>
                <para>Sets a specified View for the current Frame.
</para>
            </summary>
            <param name="view">
		A <see cref="T:DevExpress.ExpressApp.View"/> object that is set for the current Frame.

            </param>
            <returns><b>true</b> if an old View can be changed by another one; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.SetView(DevExpress.ExpressApp.View,DevExpress.ExpressApp.Frame)">
            <summary>
                <para>Sets a specified View for the current Frame.
</para>
            </summary>
            <param name="view">
		A <see cref="T:DevExpress.ExpressApp.View"/> object which is set for the current Frame.

            </param>
            <param name="sourceFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> object in which a new View was requested to be created.


            </param>
            <returns><b>true</b> if an old View can be changed by another one; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.SetView(DevExpress.ExpressApp.View,System.Boolean,DevExpress.ExpressApp.Frame)">
            <summary>
                <para>Sets a specified View for the current Frame.
</para>
            </summary>
            <param name="view">
		A <see cref="T:DevExpress.ExpressApp.View"/> object which is set for the current Frame.

            </param>
            <param name="updateControllers">
		<b>true</b> If the Frame's Controllers are activated after setting a new View; otherwise, <b>false</b>.

            </param>
            <param name="sourceFrame">
		A <see cref="T:DevExpress.ExpressApp.Frame"/> object in which a new View was requested to be created.

            </param>
            <returns><b>true</b> if an old View can be changed by another one; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.SynchronizeInfo">
            <summary>
                <para>Writes information on a Frame's View and Template to the Application Model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Frame.Template">
            <summary>
                <para>Provides access to a Frame's Template.
</para>
            </summary>
            <value>An object that implements the <see cref="T:DevExpress.ExpressApp.Templates.IFrameTemplate"/> interface. It represents the current Frame's Template.

</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Frame.View">
            <summary>
                <para>Provides access to a Frame's View.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.View"/> object representing the current Frame's View.
</value>


        </member>
        <member name="E:DevExpress.ExpressApp.Frame.Disposed">
            <summary>
                <para>Occures after the current Frame has been disposed of.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.SetControllersActive(System.String,System.Boolean)">
            <summary>
                <para>Activates or deactivates the current Frame's Controllers for a specified reason.

</para>
            </summary>
            <param name="reason">
		A string value that specifies a reason by which Controllers are activated or deactivated.

            </param>
            <param name="isActive">
		<b>true</b> if you need to activate Controllers; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Frame.Disposing">
            <summary>
                <para>Occurs when the current Frame is disposed of.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Frame.Application">
            <summary>
                <para>Provides access to a <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that can be used to manage the current application.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage an application. 
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.#ctor(DevExpress.ExpressApp.XafApplication,System.Collections.Generic.ICollection`1)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.Frame"/> class.
</para>
            </summary>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Frame.Application"/> property.


            </param>
            <param name="controllers">
		A <b>ICollection@lt;Controller@gt;</b> Controllers collection. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Frame.Controllers"/> property. 

            </param>


        </member>
        <member name="P:DevExpress.ExpressApp.Frame.Controllers">
            <summary>
                <para>Provides access to the Controller collection.
</para>
            </summary>
            <value>A <b>LightDictionary@lt;Type, Controller@gt;</b> object representing a Controller collection.
</value>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.#ctor(DevExpress.ExpressApp.XafApplication,DevExpress.ExpressApp.Controller[])">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.Frame"/> class.
</para>
            </summary>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that can be used manage the current application.

            </param>
            <param name="controllers">
		A Controller[] array that contains the additional controllers that must be activated for the new Frame.

            </param>


        </member>
        <member name="E:DevExpress.ExpressApp.Frame.TemplateViewChanged">
            <summary>
                <para>Occurs after a template is changed and a View is set for it.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.#ctor(DevExpress.ExpressApp.XafApplication,DevExpress.ExpressApp.TemplateContext,DevExpress.ExpressApp.Controller[])">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.Frame"/> class.
</para>
            </summary>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that can be used manage the current application.

            </param>
            <param name="context">
		A <b>TempalteContext</b> structure that indicates a context for the created Frame. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Frame.Context"/> property.

            </param>
            <param name="controllers">
		A Controller[] array that contains the additional controllers that must be activated for the new Frame.

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.#ctor(DevExpress.ExpressApp.XafApplication,DevExpress.ExpressApp.TemplateContext,System.Collections.Generic.ICollection`1)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.ExpressApp.Frame"/> class.
</para>
            </summary>
            <param name="application">
		A <see cref="T:DevExpress.ExpressApp.XafApplication"/> object that provides methods and properties to manage the current application.

            </param>
            <param name="context">
		A <b>TempalteContext</b> structure that indicates a context for the created Frame.

            </param>
            <param name="controllers">
		A <b>ICollection@lt;Controller@gt;</b> Controllers collection. This value is assigned to the <see cref="P:DevExpress.ExpressApp.Frame.Controllers"/> property. 

            </param>


        </member>
        <member name="M:DevExpress.ExpressApp.Frame.CreateTemplate">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.ExpressApp.Frame.Context">
            <summary>
                <para>Returns a Frame's context.
</para>
            </summary>
            <value>A <b>TempalteContext</b> structure that indicates the current Frame's context.
</value>


        </member>
        <member name="P:DevExpress.ExpressApp.Frame.Tag">
            <summary>
                <para>Provides access to the object that contains data about the <see cref="T:DevExpress.ExpressApp.Frame"/>. 
</para>
            </summary>
            <value>An object that contains data about the Frame. The default value is <i>null</i> (<i>Nothing</i> in VB).
</value>


        </member>
    </members>
</doc>
